CREATE OR ALTER PROCEDURE SP_RecriaEstatisticas 
AS
BEGIN
    DECLARE @Comando NVARCHAR(MAX)
    
    IF OBJECT_ID('RecreateStats') IS NOT NULL
    BEGIN
        WHILE EXISTS (SELECT TOP 1 1 FROM RecreateStats) 
        BEGIN
            SELECT TOP 1 @Comando = ComandoEstatistica
            FROM RecreateStats
            
            IF @Comando IS NOT NULL
            BEGIN
                BEGIN TRY
                    EXEC sp_executesql @Comando;
                END TRY
                BEGIN CATCH
                    PRINT ('Estatística já criada, continua Script');
                END CATCH
                
                DELETE FROM RecreateStats WHERE ComandoEstatistica = @Comando
                PRINT @Comando
            END
        END
    END
END
//

CREATE OR ALTER PROCEDURE [dbo].[SP_ExcluiEstatisticas]
    -- Recebe o Nome da Coluna e Tabela como Parâmetro
    @NomeColuna NVARCHAR(MAX),
    @NomeTabela NVARCHAR(MAX)
AS
BEGIN
    DECLARE @SQL NVARCHAR(MAX)
	DECLARE @RecSQL NVARCHAR(MAX)
    DECLARE @NomeEstatistica NVARCHAR(MAX)

    IF OBJECT_ID('tempdb..#TmpStats') IS NOT NULL
    BEGIN
        DROP TABLE #TmpStats
    END 

    CREATE TABLE #TmpStats (
        NomeEstatistica NVARCHAR(MAX)
    );
  IF OBJECT_ID('RecreateStats') IS NULL
    BEGIN
       CREATE TABLE RecreateStats (
			ComandoEstatistica NVARCHAR(MAX)
	);
    END

    -- Verifica se a Estatística Existe
    INSERT INTO #TmpStats (NomeEstatistica)
    SELECT S.name
    FROM sys.stats AS S
        INNER JOIN sys.stats_columns AS SC ON S.object_id = SC.object_id AND S.stats_id = SC.stats_id
        INNER JOIN sys.columns AS C ON S.object_id = C.object_id AND SC.column_id = C.column_id
    WHERE C.name = @NomeColuna;

    WHILE EXISTS (SELECT TOP 1 1 FROM #TmpStats)
    BEGIN
        SELECT TOP 1 @NomeEstatistica = NomeEstatistica
        FROM #TmpStats;

        -- Se encontrou estatística:
        IF @NomeEstatistica IS NOT NULL
        BEGIN
            -- Montamos a variável com o comando
            SET @SQL = N'DROP STATISTICS dbo.' + QUOTENAME(@NomeTabela) + '.' + QUOTENAME(@NomeEstatistica);
            
			SET @RecSQL = N'CREATE STATISTICS '+QUOTENAME(@NomeEstatistica)+' ON dbo.' + QUOTENAME(@NomeTabela) + ' (' + QUOTENAME(@NomeColuna) + ');';

			INSERT INTO RecreateStats ([ComandoEstatistica]) VALUES (@RecSQL);

            -- Tentar excluir a estatística, mas capturar exceções
            BEGIN TRY
                EXEC sp_executesql @SQL;
            END TRY
            BEGIN CATCH
				PRINT (CHAR(13) + CHAR(10) +'Estatísticas não encontradas - Continua Script')
            END CATCH
        END

        DELETE FROM #TmpStats WHERE NomeEstatistica = @NomeEstatistica;
    END

    DROP TABLE #TmpStats;
END
//

CREATE TABLE REJEITO_LENKE (
ID_REJELENK NUMERIC(10, 0) NOT NULL,
IE_REJELENK VARCHAR(25) NULL,
DT_REJELENK DATETIME NULL,
DT_PRODREJELENK DATETIME NULL,
DT_INTEREJELENK DATETIME NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_MOTIREJELENK NUMERIC(10, 0) NULL,
GN_MENSREJELENK VARCHAR(200) NULL,
ID_IDENREJELENK VARCHAR(20) NULL,
QN_PESOBALAREJELENK NUMERIC(16, 6) NULL,
QN_PESOTARAREJELENK NUMERIC(16, 6) NULL,
QN_PESOMINREJELENK NUMERIC(16, 6) NULL,
QN_PESOMAXREJELENK NUMERIC(16, 6) NULL,
QN_PESONOMIREJELENK NUMERIC(16, 6) NULL);
//

CREATE TABLE DADOS_RETENCAO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_RETEDADO NUMERIC(10, 0) NOT NULL,
NM_RETEDADO VARCHAR(100) NULL,
FL_ATIVRETEDADO CHAR(1) NOT NULL,
NM_PROCRETEDADO VARCHAR(50) NOT NULL,
NR_DIASRETEDADO INTEGER NOT NULL,
DT_ULTIEXCLRETEDADO DATETIME NULL,
QN_REGIEXCLRETEDADO NUMERIC(10, 0) NULL,
QN_DIASEXIBHISTRETEDADO INTEGER NULL,
ID_USUARIO INTEGER NOT NULL,
FX_RETEDADO CHAR(1) DEFAULT ('N') NULL,
PRIMARY KEY (ID_RETEDADO));
//

CREATE TABLE EMBA_CONT_INDI_SYNC_ERRO (
ID_EMBAINDISYNCHERRO NUMERIC(10, 0) NOT NULL,
NR_IDENEMBAINDISYNCHERRO VARCHAR(30) NOT NULL,
DT_EMBAINDISYNCHERRO DATETIME NOT NULL,
GN_NOMEMAQUEMBAINDISYNCHERRO VARCHAR(50) NOT NULL,
GN_VERSEXEEMBAINDISYNCHERRO VARCHAR(15) NOT NULL,
GN_MENSERROEMBAINDISYNCHERRO VARCHAR(2000) NOT NULL,
GN_JSONEMBAINDISYNCHERRO VARBINARY(1) NOT NULL,
PRIMARY KEY (ID_EMBAINDISYNCHERRO));
//

CREATE TABLE ENTR (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ENTRMATE NUMERIC(10, 0) NOT NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
ID_USUARIO INTEGER NOT NULL,
ID_TIPODOCU NUMERIC(10, 0) NOT NULL,
DT_ENTRMATE DATETIME NOT NULL,
NR_DOCUENTRMATE VARCHAR(20) NULL,
VL_DESCENTRMATE NUMERIC(16, 3) NULL,
VL_ACREENTRMATE NUMERIC(16, 3) NULL,
VL_FRETFORNENTRMATE NUMERIC(16, 3) NULL,
GN_OBSEENTRMATE VARCHAR(2000) NULL,
FX_ENTRMATE VARCHAR(1) NOT NULL,
NR_PEDIENTRMATE VARCHAR(10) NULL,
NR_TICKFORNENTRMATE VARCHAR(10) NULL,
NR_TICKRECEENTRMATE VARCHAR(10) NULL,
FL_STATENTRMATE CHAR(2) NOT NULL,
DT_CRIAENTRMATE DATETIME NULL,
ID_USUASIST NUMERIC(10, 0) NULL,
DT_FECHENTRMATE DATETIME NULL,
ID_USUASIST_FECHENTRMATE NUMERIC(10, 0) NULL,
IE_ENTRMATE VARCHAR(25) NULL,
ID_VEICTRAN NUMERIC(10, 0) NULL,
ID_TRANMOTOTRAN NUMERIC(10, 0) NULL,
ID_FORNECEDOR_TRANSPORTADOR NUMERIC(10, 0) NULL,
DT_SAIDENTRMATE DATETIME NULL,
ID_CARGENTRMATE NUMERIC(10, 0) NULL);
//


CREATE TABLE TMP_MUDARFILIAL (
ID_PRODMATEEMBA VARCHAR(4) NOT NULL,
DT_PADRREGIPROD DATETIME NOT NULL,
FL_TIPOOPER VARCHAR(2) NOT NULL,
FL_OPER VARCHAR(1) NOT NULL,
QN_PESOLIQU NUMERIC(38, 3) NULL,
QN_PESOPADR NUMERIC(38, 3) NULL);
//

CREATE TABLE MATERIAL_ENTRADA_CONTAGEM_ITEM (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ITEMCONTENTRMATE NUMERIC(10, 0) NOT NULL,
ID_CARGENTRMATE NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
NR_LOTEFORNITEMCONTENTRMATE VARCHAR(50) NULL,
NR_LOTEINTEITEMCONTENTRMATE VARCHAR(50) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
QN_ITEMCONTENTRMATE NUMERIC(16, 6) NOT NULL,
QN_ITEMCONTENTRMATE1 NUMERIC(16, 6) NOT NULL,
QN_ITEMCONTENTRMATE2 NUMERIC(16, 6) NOT NULL,
QN_ITEMCONTENTRMATE3 NUMERIC(16, 6) NOT NULL,
QN_CONFITEMCONTENTRMATE NUMERIC(16, 6) NULL,
FL_STATITEMCONTENTRMATE CHAR(2) NOT NULL,
FL_INSEITEMCONTENTRMATE CHAR(1) NULL,
FL_DETAITEMCONTENTRMATE CHAR(1) NULL,
GN_NUMEPLANITEMCONTENTRMATE VARCHAR(200) NULL,
GN_NUMENOTAITEMCONTENTRMATE VARCHAR(200) NULL,
ID_ITEMCONTENTRMATE_AGRU NUMERIC(10, 0) NULL,
DT_PRODITEMCONTENTRMATE DATETIME NULL,
DT_VALIITEMCONTENTRMATE DATETIME NULL,
FL_LAUDITEMCONTENTRMATE CHAR(1) NULL,
ID_UNIDMEDI NUMERIC(10, 0) NULL,
ID_CONTENTRMATE NUMERIC(10, 0) NOT NULL,
ID_ITEMENTRMATE NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_ITEMCONTENTRMATE));
//

CREATE TABLE SISTEMA_REPLICACAO_DATAHORA (
DT_SERVREPLSISTDATA DATETIME NULL,
DT_LOCAREPLSISTDATA DATETIME NULL);
//

CREATE TABLE ENTRADA_AVE_VIVA_TURNO_DETA (
ID_ENTRAVEVIVA NUMERIC(10, 0) NOT NULL,
ID_DETAPENDENTRAVEVIVA NUMERIC(10, 0) NOT NULL,
ID_ITEMDIARTURNPROD NUMERIC(10, 0) NULL,
QN_CABEDETATURNENTRAVEVIVA NUMERIC(10, 0) NULL,
NR_SEQUDETATURNENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_MORTDETATURNENTRAVEVIVA NUMERIC(10, 0) NULL,
DT_DETATURNENTRAVEVIVA DATETIME DEFAULT (getdate()) NULL,
DT_ABERDETATURNENTRAVEVIVA DATETIME NULL,
DT_FECHDETATURNENTRAVEVIVA DATETIME NULL,
QN_MOAUDETATURNENTRAVEVIVA NUMERIC(10, 0) NULL);
//

CREATE TABLE TRADUCAO_DASHBOARD_EFICIENCIA (
NM_TIPOINDICADOR VARCHAR(30) NOT NULL,
NM_PROTINDICADOR VARCHAR(30) NOT NULL,
NM_INGLINDICADOR VARCHAR(30) NOT NULL,
NM_ESPAINDICADOR VARCHAR(30) NOT NULL,
PRIMARY KEY (NM_TIPOINDICADOR));
//

CREATE TABLE AVIARIOS (
AVIARIO VARCHAR(10) NULL,
MATRICULA VARCHAR(25) NULL,
PRODUTOR VARCHAR(200) NULL,
CPF VARCHAR(25) NULL);
//


CREATE TABLE CUSTO_MENSAL_SIMULADO_PO (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_POSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_PRODSIMUCUSTMENS NUMERIC(10, 0) NULL,
ID_POSTOPER NUMERIC(10, 0) NULL,
NR_ORDEPOSTOPERMATEEMBA INTEGER NULL,
QN_TEMPPOSTOPERMATEEMBA NUMERIC(30, 10) NULL,
FX_POSTOPERSIMUCUSTMENS CHAR(1) NULL,
QN_ESFOPOSTOPERMATEEMBA NUMERIC(30, 10) NULL,
PRIMARY KEY (ID_POSIMUCUSTMENS));
//

CREATE TABLE MONITOR_SERVICOS_INTERFACE (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_MONISERVINTE NUMERIC(10, 0) NOT NULL,
NM_MONISERVINTE VARCHAR(100) NOT NULL,
ID_MONISERV NUMERIC(10, 0) NOT NULL,
NM_METOMONISERVINTE VARCHAR(100) NOT NULL,
NR_FREQSINCMONISERVINTE NUMERIC(10, 0) NULL,
GN_SQLMONISERVINTE VARCHAR NULL,
FX_MONISERVINTE CHAR(1) NOT NULL,
FL_TIPOMONISERVINTE CHAR(1) NOT NULL,
ID_CUSTCONS NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_MONISERVINTE));
//

CREATE TABLE RECIPIENTE_TIPO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
IE_TIPORECI VARCHAR(25) NULL,
ID_TIPORECI NUMERIC(10, 0) NOT NULL,
NM_TIPORECI VARCHAR(40) NOT NULL,
ID_UNIDMEDI NUMERIC(10, 0) NOT NULL,
FX_TIPORECI CHAR(1) NOT NULL,
PRIMARY KEY (ID_TIPORECI));
//

CREATE TABLE FORM_QUAL_META_CAMPCUST (
ID_FORMQUALMETACAMPCUST NUMERIC(10, 0) NOT NULL,
NM_FORMQUALMETACAMPCUST VARCHAR(200) NULL,
GN_SCRIFORMQUALMETACAMPCUST VARCHAR NULL,
PRIMARY KEY (ID_FORMQUALMETACAMPCUST));
//

CREATE TABLE PRODUCAO_UNIDADE (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_PONTO NUMERIC(10, 0) NULL,
ID_PRODUNID NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
DT_PADRPRODUNID DATETIME NOT NULL,
DT_PRODUNID DATETIME NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_PESOPRODUNID NUMERIC(10, 6) NOT NULL,
QN_TARAPRODUNID NUMERIC(10, 6) NOT NULL,
QN_TOLEMINIPRODUNID NUMERIC(6, 3) NOT NULL,
QN_TOLEMAXIPRODUNID NUMERIC(6, 3) NOT NULL,
PRIMARY KEY (ID_PRODUNID));
//

CREATE TABLE MATERIAL_EMBALAGEM_FAIPE_FILI (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_PESOFAIXMATEEMBAFILI NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_PESOFAIXMATEEMBAFILI NUMERIC(16, 3) NULL,
PRIMARY KEY (ID_PESOFAIXMATEEMBAFILI));
//

CREATE TABLE SISTEMA_REPLICACAO_EXCLUSAO (
NM_TABEEXCLREPLSIST VARCHAR(50) NULL,
ROWID VARCHAR(36) NOT NULL,
LASTMODDATE DATETIME NOT NULL,
SYNCFLAG CHAR(1) DEFAULT ('S') NOT NULL);
//

CREATE TABLE reportcriterion (
reportcriterionid UNIQUEIDENTIFIER NOT NULL,
reportid UNIQUEIDENTIFIER NOT NULL,
columnname VARCHAR(200) NOT NULL,
columntype VARCHAR(2) NOT NULL,
caption VARCHAR(200) NOT NULL,
gestatus INTEGER NOT NULL,
gedateupdate DATETIME NULL,
geaccountidupdate UNIQUEIDENTIFIER NULL,
createdAt DATETIME DEFAULT (getdate()) NULL,
updatedAt DATETIME DEFAULT (getdate()) NULL,
isFixed BIT DEFAULT ((0)) NULL,
PRIMARY KEY (reportcriterionid));
//

CREATE TABLE TMP_CONSTITUICAO_MENSAL (
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(5, 0) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
PESO NUMERIC(38, 7) NULL);
//

CREATE TABLE CUSTO_COMPONENTE_DIARIO_SIMU (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
ID_PRINPARTAVE NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_PROCLINH_ORIG NUMERIC(10, 0) NULL,
ID_PROCLINH_DEST NUMERIC(10, 0) NULL,
NR_TURNDIARSIMUCOMPCUST NUMERIC(10, 0) NULL,
DT_PROCDIARSIMUCOMPCUST DATETIME DEFAULT (getdate()) NULL,
DT_REGIPADRDIARSIMUCOMPCUST DATETIME NULL,
QN_QTDEAVEDIARSIMUCOMPCUST NUMERIC(10, 0) NULL,
QN_PESOINTDIARSIMUCOMPCUST NUMERIC(20, 10) NULL,
QN_PESOENTRDIARSIMUCOMPCUST NUMERIC(20, 10) NULL,
QN_PESOMORTDIARSIMUCOMPCUST NUMERIC(20, 10) NULL,
QN_PESODESCDIARSIMUCOMPCUST NUMERIC(20, 10) NULL,
QN_PESODESTDIARSIMUCOMPCUST NUMERIC(20, 10) NULL,
QN_PESOSOBRDIARSIMUCOMPCUST NUMERIC(20, 10) NULL,
QN_PESOMEDIDIARSIMUCOMPCUST NUMERIC(20, 10) NULL);
//

CREATE TABLE FORMULARIO_QUALIDADE_META_ITEM_BRF (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_FORMQUALMETAITEM NUMERIC(10, 0) NOT NULL,
ID_FORMQUALMETA NUMERIC(10, 0) NOT NULL,
NM_FORMQUALMETAITEM VARCHAR(50) NOT NULL,
FL_TIPOFORMQUALMETAITEM CHAR(2) NOT NULL,
FL_OBRIFORMQUALMETAITEM CHAR(1) NOT NULL,
QN_TAMAFORMQUALMETAITEM NUMERIC(10, 0) NULL,
QN_DECIFORMQUALMETAITEM NUMERIC(10, 0) NULL,
GN_CONFINFOFORMQUALMETAITEM VARCHAR(2000) NULL,
NR_ORDEFORMQUALMETAITEM NUMERIC(10, 0) NOT NULL,
ID_GRUPFORMQUALMETAITEM NUMERIC(10, 0) NULL,
NR_ORDEGRUPFORMQUALMETAITEM NUMERIC(10, 0) NULL,
ID_SISTLOOK NUMERIC(10, 0) NULL,
FX_FORMQUALMETAITEM CHAR(1) NOT NULL,
FL_IDENCOLUFORMQUALMETAITEM VARCHAR(32) NULL,
NR_ORDECOMPFORMQUALMETAITEM VARCHAR(200) NULL,
FL_READONLYFORMQUALMETAITEM CHAR(1) NOT NULL,
GN_VALOPADRFORMQUALMETAITEM VARCHAR(2000) NULL,
PRIMARY KEY (ID_FORMQUALMETAITEM));
//


CREATE TABLE PRO102_ESTOINIC (
ID_PRODMATEEMBA VARCHAR(4) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
QN_CAIXINIC NUMERIC(10, 0) NULL,
QN_PSVDINIC NUMERIC(16, 2) NULL,
QN_PSLQINIC NUMERIC(16, 2) NULL,
QN_TARAINIC NUMERIC(16, 2) NULL,
QN_VALOPESOLIQUINIC NUMERIC(16, 6) NULL);
//

CREATE TABLE ESTOQUE_PROJETADO (
ID_PROJESTO NUMERIC(10, 0) NOT NULL,
DT_PROJESTO DATETIME NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_EMBAPROJESTO NUMERIC(10, 0) NOT NULL,
QN_PESOPROJESTO NUMERIC(10, 3) NOT NULL);
//

CREATE TABLE MTP_PRODUCAO (
NM_USUASIST VARCHAR(40) NOT NULL,
ID_PRODMATEEMBA VARCHAR(4) NOT NULL,
ID_IDENREGIPROD VARCHAR(20) NULL,
ID_PALEEXPE NUMERIC(10, 0) NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL);
//

CREATE TABLE PRODUCAO_SEQUESTRO_ITEM_ERP (
ID_ERPITEMSEQUPROD NUMERIC(10, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
FL_ENVIERPITEMSEQUPROD CHAR(1) NULL,
PRIMARY KEY (ID_ERPITEMSEQUPROD));
//

CREATE TABLE MATERIAL_FORNECEDOR_CODIGO (
ID_CODIFORNMATE NUMERIC(10, 0) NOT NULL,
ID_FORNECEDOR NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
GN_GS1FORNCODIFORNMATE VARCHAR(25) NULL,
GN_GS1MATECODIFORNMATE VARCHAR(14) NOT NULL,
PRIMARY KEY (ID_CODIFORNMATE));
//

CREATE TABLE DEVO_CARG (
EMPRESA VARCHAR(2) NULL,
FILIAL INTEGER NULL,
ID_DEVOCARGEXPE NUMERIC(10, 0) NOT NULL,
DT_DEVOCARGEXPE DATETIME NULL,
DT_MONTDEVOCARGEXPE DATETIME NULL,
DT_ABERDEVOCARGEXPE DATETIME NULL,
DT_FECHDEVOCARGEXPE DATETIME NULL,
DT_LIMIPEDIDEVOCARGEXPE DATETIME NULL,
ID_USUASIST_MONTAGEM NUMERIC(10, 0) NULL,
ID_USUASIST_ABERTURA NUMERIC(10, 0) NULL,
ID_USUASIST_FECHAMENTO NUMERIC(10, 0) NULL,
FL_IMPRDEVOCARGEXPE VARCHAR(2) NULL,
FL_STATDEVOCARGEXPE VARCHAR(2) NULL,
GN_OBSEDEVOCARGEXPE VARCHAR(2000) NULL,
FX_DEVOCARGEXPE VARCHAR(1) NULL,
DT_DESBDEVOCARGEXPE DATETIME NULL,
ID_VEICTRAN NUMERIC(10, 0) NULL,
FL_ESPEDEVOCARGEXPE VARCHAR(2) NULL,
FL_CARRDEVOCARGEXPE VARCHAR(1) NULL,
ID_TRANMOTOTRAN NUMERIC(10, 0) NULL,
FL_AUTODEVOCARGEXPE CHAR(1) NULL,
FL_SITUDEVOCARGEXPE VARCHAR(2) NULL,
FL_TIPOLIBEDEVOCARGEXPE VARCHAR(2) NULL,
FL_CHECBALARODODEVOCARGEXPE CHAR(1) NULL,
IE_DEVOCARGEXPE VARCHAR(15) NULL,
GN_OBSEEQUIDEVOCARGEXPE VARCHAR(2000) NULL,
GN_OBSETRANDEVOEXPECARG VARCHAR(2000) NULL,
NR_DOCADEVOCARGEXPE NUMERIC(10, 0) NULL,
FL_VALIPESADEVOEXPECARG CHAR(1) NULL,
GN_TICKDEVOCARGEXPE VARCHAR(12) NULL,
DT_ATUATOTADEVOCARGEXPE DATETIME NULL,
DT_PREVINICCARRDEVOCARGEXPE DATETIME NULL);
//

CREATE TABLE RECIPIENTE_MONTAGEM_MOVIMENTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_MOVIMONTRECI NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
ID_MONTRECI NUMERIC(10, 0) NOT NULL,
ID_ITEMEQUIREGIPROD NUMERIC(10, 0) NOT NULL,
DT_INICMOVIMONTRECI DATETIME NOT NULL,
DT_FINAMOVIMONTRECI DATETIME NULL,
FX_MOVIMONTRECE CHAR(1) NOT NULL,
PRIMARY KEY (ID_MOVIMONTRECI));
//

CREATE TABLE BELL_CURVE_INTE_GRADE (
ID_GRADINTECURVBELL NUMERIC(10, 0) NOT NULL,
ID_INTECURVBELL NUMERIC(10, 0) NULL,
QN_GRADINTECURVBELL NUMERIC(9, 0) NULL,
FL_GRADINTECURVBELL CHAR(1) NULL,
PRIMARY KEY (ID_GRADINTECURVBELL));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_CC (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NULL,
ID_CENTCUST NUMERIC(10, 0) NULL,
ID_CONTCONT NUMERIC(10, 0) NULL,
ID_CENTCUSTSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
VL_CENTCUSTSIMUCUSTMENS NUMERIC(30, 10) NULL,
FL_TIPOCENTCUSTSIMUCUSTMENS CHAR(1) NULL,
FX_CENTCUSTSIMUCUSTMENS CHAR(1) NULL,
PRIMARY KEY (ID_CENTCUSTSIMUCUSTMENS));
//

CREATE TABLE AUTOMACAO_IP (
FL_TIPOMOVI CHAR(1) NULL,
NR_IDENREGIPROD VARCHAR(20) NULL);
//

CREATE TABLE MOTIVO_PARADA_DURACAO (
ID_MOTIPARAEQUI NUMERIC(10, 0) NOT NULL,
ID_EQUITIPO NUMERIC(10, 0) NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NULL,
GN_DURAPARAMOTI VARCHAR(8) NULL,
QN_MAXIDURAPARAMOTI NUMERIC(10, 0) NOT NULL,
FL_PERMLANCDURAPARAMOTI CHAR(1) DEFAULT ('S') NOT NULL,
GN_DURADIAPARAMOTI VARCHAR(8) NULL);
//

CREATE TABLE MATERIAL_ENTRADA_CARGA_USUARIO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_USUACARGENTRMATE NUMERIC(10, 0) NOT NULL,
ID_CARGENTRMATE NUMERIC(10, 0) NOT NULL,
ID_USUASIST NUMERIC(10, 0) NOT NULL,
FL_USUACARGENTRMATE CHAR(2) NOT NULL,
FX_USUACARGENTRMATE CHAR(1) NOT NULL,
PRIMARY KEY (ID_USUACARGENTRMATE));
//

CREATE TABLE PRODUCAO_PALETIZACAO_PONTPROD (
ID_PRODPALEPONTPROD NUMERIC(10, 0) NOT NULL,
ID_PRODPALEPONT NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
ID_PRODMATEEMBA VARCHAR(6) NOT NULL,
FX_PRODPALEPONTPROD CHAR(1) NOT NULL);
//

CREATE TABLE CHECKLIST_CONF_SINCRONISMO (
ID_SINCCONFCHEC NUMERIC(10, 0) NOT NULL,
NM_SINCCONFCHEC VARCHAR(100) NOT NULL,
ID_FORMQUALMETA NUMERIC(10, 0) NOT NULL,
NR_TEMPSEGUSINCCONFCHEC NUMERIC(10, 0) NOT NULL,
GN_DADOCONESINCCONFCHEC VARCHAR(2000) NOT NULL,
NM_TABEDADOSINCCONFCHEC VARCHAR(100) NOT NULL,
FL_UTILCOLUCONTSINCCONFCHEC CHAR(1) NOT NULL,
NM_COLUCHAVREGISINCCONFCHEC VARCHAR(100) NOT NULL,
NM_COLUCONTATUASINCCONFCHEC VARCHAR(100) NULL,
NM_COLUREFESINCCONFCHEC VARCHAR(100) NULL,
GN_SCRIDADOSINCCONFCHEC VARCHAR NOT NULL,
FL_ATIVSINCCONFCHEC CHAR(1) NOT NULL,
DT_ULTIALTESINCCONFCHEC DATETIME NOT NULL,
DT_INICPROCSINCCONFCHEC DATETIME NULL,
DT_ULTIPROCSINCCONFCHEC DATETIME NULL,
FX_SINCCONFCHEC CHAR(1) NOT NULL,
PRIMARY KEY (ID_SINCCONFCHEC));
//

CREATE TABLE PRODUCAO_MEDICAO_VISCERA (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_VISCPRODMEDI NUMERIC(10, 0) NOT NULL,
DT_VISCPRODMEDI DATETIME NULL,
PC_UMIDVISCPRODMEDI NUMERIC(6, 2) NULL,
ID_PONTPROD NUMERIC(10, 0) NOT NULL,
NM_COLAVISCPRODMEDI VARCHAR(40) NULL,
DT_INICCARGVISCPRODMEDI DATETIME NULL,
DT_DURACARGVISCPRODMEDI DATETIME NULL,
DT_FINACARGVISCPRODMEDI DATETIME NULL,
DT_INICFRITVISCPRODMEDI DATETIME NULL,
DT_DURAFRITVISCPRODMEDI DATETIME NULL,
DT_FINAFRITVISCPRODMEDI DATETIME NULL,
DT_INICPRENVISCPRODMEDI DATETIME NULL,
DT_DURAPRENVISCPRODMEDI DATETIME NULL,
DT_FINAPRENVISCPRODMEDI DATETIME NULL,
QN_TEMPINICVISCPRODMEDI NUMERIC(10, 2) NULL,
QN_TEMPFINAVISCPRODMEDI NUMERIC(10, 2) NULL,
QN_TEMPDIFEVISCPRODMEDI NUMERIC(10, 2) NULL,
FX_VISCPRODMEDI CHAR(1) NULL,
PRIMARY KEY (ID_VISCPRODMEDI));
//

CREATE TABLE MatrizComponentes_DIARIO (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA CHAR(4) NULL,
QN_COMPONENTE NUMERIC(20, 10) NULL,
VL_COMPONENTE NUMERIC(20, 10) NULL,
PC_COMPONENTE NUMERIC(20, 10) NULL);
//

CREATE TABLE Alteracao_Objetos (
Id_Auditoria INTEGER NOT NULL,
Dt_Evento DATETIME NULL,
Ds_Tipo_Evento VARCHAR(30) NULL,
Ds_Database VARCHAR(50) NULL,
Ds_Usuario VARCHAR(100) NULL,
Ds_Schema VARCHAR(20) NULL,
Ds_Objeto VARCHAR(100) NULL,
Ds_Tipo_Objeto VARCHAR(20) NULL,
Ds_Query XML NULL);
//

CREATE TABLE MATERIAL_UNIDADE_CONVERSAO (
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_UNIDMEDI NUMERIC(10, 0) NOT NULL,
QN_CONVUNIDMATE NUMERIC(16, 6) NULL,
PRIMARY KEY (ID_MATERIAL, ID_UNIDMEDI));
//

CREATE TABLE ENTRADA_AVULSA_IDENTIFICACAO (
EMPRESA CHAR(2) NOT NULL,
FILIAL NUMERIC(5, 0) NULL,
ID_IDENENTRAVUL NUMERIC(10, 0) NOT NULL,
ID_ENTRAVUL NUMERIC(10, 0) NOT NULL,
ID_LEITIDENENTRAVUL VARCHAR(20) NOT NULL,
NR_BALANCA NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
FILIAL_BALANCA INTEGER NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
FL_STATIDENENTRAVUL CHAR(2) NOT NULL,
PRIMARY KEY (ID_IDENENTRAVUL));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_ESTR (
ID_ESTRSIMUMENSCUST NUMERIC(10, 0) NOT NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_PRODSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_PRODESTRSIMUMENSCUST NUMERIC(10, 0) NOT NULL,
ID_NIVEESTRSIMUMENSCUST NUMERIC(10, 0) NOT NULL,
PC_ESTRSIMUMENSCUST NUMERIC(20, 10) NOT NULL,
PRIMARY KEY (ID_ESTRSIMUMENSCUST));
//

CREATE TABLE PRODUCAO_REGISTRO_MOVI_MOTIVO (
ID_MOTIMOVIREGIPROD NUMERIC(10, 0) NOT NULL,
IE_MOTIMOVIREGIPROD VARCHAR(25) NULL,
NM_MOTIMOVIREGIPROD VARCHAR(100) NULL,
FL_OPERMOTIMOVIREGIPROD CHAR(1) NULL,
FL_TIPOOPERMOTIMOVIREGIPROD CHAR(2) NULL,
FL_OBRICLIEMOTIMOVIREGIPROD CHAR(1) NULL,
FL_OBRIDEPOORIMOTIMOVIREGIPROD CHAR(1) NULL,
FL_OBRIDEPDESTMOTIMOVIREGIPROD CHAR(1) NULL,
FL_OBRIPALEORIMOTIMOVIREGIPROD CHAR(1) NULL,
PRIMARY KEY (ID_MOTIMOVIREGIPROD));
//

CREATE TABLE VW_MOTORISTA (
ID_MOTOTRAN NUMERIC(10, 0) NOT NULL,
NR_CPFMOTOTRAN VARCHAR(11) NULL,
NM_MOTOTRAN VARCHAR(40) NULL,
GN_PLACVEIC VARCHAR(8) NULL,
DT_REGIOPER DATETIME NULL,
FL_TIPOOPER CHAR(1) NULL,
NU_PASS VARCHAR(10) NULL,
PRIMARY KEY (ID_MOTOTRAN));
//

CREATE TABLE ANOMALIA_REGISTRO (
ID_REGIANOM NUMERIC(10, 0) NOT NULL,
ID_PARAANOM NUMERIC(10, 0) NULL,
ID_PROVANOM NUMERIC(10, 0) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
FL_TIPOMATEREGIANOM CHAR(1) NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA NUMERIC(10, 0) NULL,
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(10, 0) NULL,
GN_REGISECRAGRIREGIANOM VARCHAR(5) NULL,
FL_REINREGIANOM CHAR(1) NULL,
NR_REINREGIANOM NUMERIC(10, 0) NULL,
FL_FOTOREGIANOM CHAR(1) NULL,
FL_LAUDREGIANOM CHAR(1) NULL,
FL_AMOSREGIANOM CHAR(1) NULL,
FL_GARAREGIANOM CHAR(1) NULL,
GN_OBSEPROBREGIANOM VARCHAR(2000) NULL,
GN_NOTAFISCREGIANOM VARCHAR(20) NULL,
DT_FABRREGIANOM DATETIME NULL,
DT_VALIREGIANOM DATETIME NULL,
DT_RECEREGIANOM DATETIME NULL,
QN_RECEREGIANOM NUMERIC(18, 2) NULL,
QN_FORAPADRREGIANOM NUMERIC(18, 2) NULL,
NR_PERCFORAPADRREGIANOM NUMERIC(18, 2) NULL,
NR_LAUDANALREGIANOM NUMERIC(10, 0) NULL,
VL_RESSREGIANOM NUMERIC(18, 2) NULL,
GN_LOTEREGIANOM VARCHAR(30) NULL,
ID_USUASIST_CRIACAO NUMERIC(10, 0) NULL,
DT_CRIAREGIANOM DATETIME NULL,
GN_JUSTREGIANOM VARCHAR(120) NULL,
ID_USUASIST_JUSTIFICATIVA NUMERIC(10, 0) NULL,
DT_JUSTREGIANOM DATETIME NULL,
DT_RECEPLANACAOREGIANOM DATETIME NULL,
QN_PRAZORECEPLANACAOREGIANOM NUMERIC(10, 0) NULL,
FL_STATPLANACAOREGIANOM VARCHAR(50) NULL,
GN_DOCUCOMPRREGIANOM VARCHAR(10) NULL,
QN_TENTERPREGIANOM INTEGER NULL,
FL_SINCERPREGIANOM CHAR(1) NULL,
DT_SINCERPREGIANOM DATETIME NULL,
DT_ENVIREGIANOM DATETIME NULL,
PRIMARY KEY (ID_REGIANOM));
//

CREATE TABLE MTP_PALEEXPE_REGIEMPE (
ID_PALEEXPE NUMERIC(10, 0) NOT NULL,
FL_STATPALEEXPE CHAR(2) NOT NULL,
ID_PEDIVEND NUMERIC(10, 0) NULL);
//

CREATE TABLE MATERIAL_REQUISICAO_ITEM_ERP (
ID_ERPITEMREQUMATE NUMERIC(10, 0) NOT NULL,
ID_REQUMATE NUMERIC(10, 0) NOT NULL,
NR_NOTAFISCERPITEMREQUMATE VARCHAR(25) NOT NULL,
NR_LOTEFORNERPITEMREQUMATE VARCHAR(50) NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
QN_ERPITEMREQUMATE NUMERIC(16, 6) NOT NULL,
SG_UNIDMEDI VARCHAR(3) NULL,
PRIMARY KEY (ID_ERPITEMREQUMATE));
//

CREATE TABLE BATCH_CONSUMO (
IE_FILISIST VARCHAR(25) NULL,
IE_MATEEMBA VARCHAR(25) NULL,
IE_MATERIAL VARCHAR(1) NOT NULL,
NR_LOTEFORNCONSPROD INTEGER NULL,
NR_LOTEINTECONSPROD INTEGER NULL,
FL_EVENINTECONSPROD VARCHAR(2) NOT NULL,
FL_OPERINTECONSPROD VARCHAR(1) NOT NULL,
DT_INTECONSPROD DATETIME NOT NULL,
DT_PADRINTECONSPROD DATE NULL,
QN_MATECONSPROD NUMERIC(38, 3) NULL,
SG_UNIDMEDI VARCHAR(2) NOT NULL,
FL_STATSINCERPCONSPROD VARCHAR(2) NOT NULL,
IE_MATEEMBA_PA VARCHAR(25) NULL,
ID_BATCPROD NUMERIC(10, 0) NOT NULL);
//

CREATE TABLE MATERIAL_GRUPO_FIFO (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_GRUPMATEFIFO NUMERIC(10, 0) NOT NULL,
ID_GRUPMATE NUMERIC(10, 0) NOT NULL,
QN_TOLEGRUPMATEFIFO INTEGER NULL,
FX_GRUPMATEFIFO CHAR(1) NULL,
PRIMARY KEY (ID_GRUPMATEFIFO));
//

CREATE TABLE INSPECAO_PARAMETROS_PROD_GRUP (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_GRUPPRODPARAINSP NUMERIC(10, 0) NOT NULL,
ID_PRODPARAINSP NUMERIC(10, 0) NOT NULL,
ID_GRUPINSP NUMERIC(10, 0) NOT NULL,
FX_GRUPPRODPARAINSP CHAR(1) NOT NULL,
PRIMARY KEY (ID_GRUPPRODPARAINSP));
//

CREATE TABLE MATERIAL_ENTRADA_CONTAGEM_ETIQ (
ID_ETIQCONTENTRMATE NUMERIC(10, 0) NOT NULL,
ID_ITEMCONTENTRMATE NUMERIC(10, 0) NOT NULL,
ID_CARGENTRMATE NUMERIC(10, 0) NOT NULL,
QN_ETIQCONTENTRMATE NUMERIC(10, 0) NOT NULL,
QN_ITEMETIQCONTENTRMATE NUMERIC(16, 6) NOT NULL,
PRIMARY KEY (ID_ETIQCONTENTRMATE));
//

CREATE TABLE GRADE_CLASSIFICADORA_INTEGR (
ID_INTECLASGRAD NUMERIC(10, 0) NOT NULL,
ID_CLASGRAD NUMERIC(10, 0) NOT NULL,
IE_INTECLASGRAD VARCHAR(25) NOT NULL,
PRIMARY KEY (ID_INTECLASGRAD));
//

CREATE TABLE PROCESTO_PRODUCAO_REGISTRO (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL NUMERIC(5, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
ID_IDENREGIPROD VARCHAR(20) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_EMBALAGEM NUMERIC(10, 0) NOT NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NOT NULL,
ID_MATEALMO NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA VARCHAR(4) NOT NULL,
DT_REGIPROD DATE NOT NULL,
DT_PADRREGIPROD DATE NOT NULL,
DT_BALAREGIPROD DATE NOT NULL,
ID_BALANCA NUMERIC(10, 0) NOT NULL,
QN_PESOPADRREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PESOLIQUREGIPROD NUMERIC(10, 3) NOT NULL,
FL_STATREGIPROD VARCHAR(2) NOT NULL,
FX_REGIPROD VARCHAR(1) NOT NULL,
QN_TARAEMBAREGIPROD NUMERIC(10, 3) NULL,
ID_TRANREGIPROD NUMERIC(10, 0) NULL,
ID_PEDIVEND NUMERIC(10, 0) NULL,
DT_ENTRTUNEREGIPROD DATE NULL,
DT_SAIDTUNEREGIPROD DATE NULL,
ID_TUNEPROD NUMERIC(10, 0) NULL,
DT_EXCLREGIPROD DATE NULL,
ID_PALEEXPE NUMERIC(10, 0) NULL,
FL_STATREGIPROD_ VARCHAR(2) NULL,
ID_IDENORIGREGIPROD VARCHAR(20) NULL,
QN_TARACOMPREGIPROD NUMERIC(10, 3) NULL,
FL_SITUREGIPROD CHAR(2) NULL,
FL_DISPREGIPROD CHAR(1) NULL,
FL_ORIGREGIPROD CHAR(2) NULL,
ID_USUASIST_REGIPROD NUMERIC(10, 0) NULL,
FL_SIMUREGIPROD CHAR(1) NULL,
FL_PRODPROPREGIPROD CHAR(1) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_ENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_PESOORIGREGIPROD NUMERIC(10, 3) NULL,
ID_CORTLOTEPROD NUMERIC(10, 0) NULL,
NR_LOTERASTREGIPROD VARCHAR(20) NULL,
FL_MODAREGIPROD CHAR(2) NULL,
ID_TURNPROD NUMERIC(10, 0) NULL,
ID_CORTLOTEPROD_PROD NUMERIC(10, 0) NULL,
DT_REFEREGIPROD DATE NULL,
DT_CONTREGIPROD DATE NULL,
FL_SEQUREGIPROD CHAR(1) NULL,
DT_VALIREGIPROD DATE NULL,
ID_IDENREGIPRODANTE VARCHAR(20) NULL,
DT_LOTERASTREGIPROD DATE NULL,
ID_PEDIDEVOVEND NUMERIC(10, 0) NULL,
ID_MOTIDEVOVEND NUMERIC(10, 0) NULL,
FL_TOTAREGIPROD CHAR(1) NULL,
ID_BATCPROD NUMERIC(10, 0) NULL,
FL_REGITRANREGIPROD CHAR(1) NULL,
ID_IDENORIGDESMREGIPROD VARCHAR(20) NULL,
DT_ELABREGIPROD DATE NULL,
DT_DESBREGIPROD DATE NULL,
ID_PACKPROD NUMERIC(10, 0) NULL,
ID_MODEIDEN NUMERIC(10, 0) NULL,
ID_PESAAGRU NUMERIC(10, 0) NULL,
QN_PESOLIQUORIGREGIPROD NUMERIC(10, 3) NULL,
FL_INTELENKREGIPROD VARCHAR(1) NULL,
QN_PRODEMBAREGIPROD NUMERIC(10, 0) NULL,
QN_CAIXREGIPROD NUMERIC(10, 0) NULL,
ID_VARIDEFIEMBA NUMERIC(10, 0) NULL,
DT_UTILPESAAGRUREGIPROD DATE NULL,
ID_INVEPROD NUMERIC(10, 0) NULL,
NR_SEQUTURNREGIPROD NUMERIC(10, 0) NULL,
QN_PESOQUEBREGIPROD NUMERIC(10, 3) NULL,
FILIAL_IMPRESSA NUMERIC(4, 0) NULL,
EMPRESA_IMPRESSA VARCHAR(2) NULL,
ID_PROCTERMPRODADICMATECONS NUMERIC(10, 0) NULL);
//

CREATE TABLE MBS_REJEITO (
CD_EMPRESA INTEGER NULL,
CD_FILIAL INTEGER NULL,
CD_SEQ_REJEITO NUMERIC(8, 0) NULL,
DT_REJEITO DATETIME NULL,
CD_ITEM NUMERIC(8, 0) NULL,
ID_MOTIVO INTEGER NULL,
DS_MENSAGEM VARCHAR(200) NULL,
NR_SSCC_CAIXA VARCHAR(20) NULL,
CD_USUARIO INTEGER NULL,
QT_PESO_BALANCA NUMERIC(11, 3) NULL,
QT_PESO_TARA NUMERIC(11, 3) NULL,
ID_INTEGRACAO CHAR(1) DEFAULT ('P') NOT NULL,
DT_INTEGRACAO DATETIME NULL,
CD_PONTO INTEGER NULL,
DT_PRODUCAO DATETIME NULL,
CD_TURNO INTEGER NULL,
QT_PESO_MINIMO NUMERIC(11, 3) NULL,
QT_PESO_MAXIMO NUMERIC(11, 3) NULL,
QT_PESO_NOMINAL NUMERIC(11, 3) NULL,
NR_SSCC_CX VARCHAR(20) NULL);
//

CREATE TABLE IDENTIFICACAO_MODELO_SSCC (
ID_SSCCMODEIDEN NUMERIC(10, 0) NOT NULL,
NM_SSCCMODEIDEN VARCHAR(40) NOT NULL,
FX_SSCCMODEIDEN CHAR(1) NOT NULL,
NR_MODEETIQCAIXSSCCMODEIDEN NUMERIC(10, 0) NULL,
NR_MODEETIQPALESSCCMODEIDEN NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_SSCCMODEIDEN));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_OP_PROD (
ID_PRODPOSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_PRODSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_POSTOPER NUMERIC(10, 0) NOT NULL,
QN_TEMPPRODPOSIMUCUSTMENS NUMERIC(30, 10) NOT NULL,
QN_TEMPTOTAPRODPOSIMUCUSTMENS NUMERIC(30, 10) NOT NULL,
QN_PostKG_PRODPOSIMUCUSTMENS NUMERIC(30, 10) NOT NULL,
VL_PostKG_PRODPOSIMUCUSTMENS NUMERIC(30, 10) NOT NULL,
QN_PostTotaPRODPOSIMUCUSTMENS NUMERIC(30, 10) NOT NULL,
VL_PostTotaPRODPOSIMUCUSTMENS NUMERIC(30, 10) NOT NULL,
PRIMARY KEY (ID_PRODPOSIMUCUSTMENS));
//

CREATE TABLE REJEITO_MOTIVO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_REJEMOTI NUMERIC(10, 0) NOT NULL,
NM_REJEMOTI VARCHAR(100) NOT NULL,
IE_REJEMOTI VARCHAR(25) NULL,
PRIMARY KEY (ID_REJEMOTI));
//

CREATE TABLE PRODUTO (
COD_PRODUTO NUMERIC(10, 0) NOT NULL,
DESC_PRODUTO NVARCHAR(255) NULL,
PESO_MINIMO FLOAT NULL,
PESO_MAXIMO FLOAT NULL,
ID_TIPO_PESO FLOAT NULL,
PESO_TARA FLOAT NULL,
PESO_NOMINAL FLOAT NULL,
COD_BARRAS FLOAT NULL,
NR_SAIDA_PADRAO FLOAT NULL,
ID_BLOQUEADO FLOAT NULL,
ID_ALTERADO FLOAT NULL,
PRIMARY KEY (COD_PRODUTO));
//

CREATE TABLE CAMPOS_CONFIGURACAO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_CONFCAMP NUMERIC(10, 0) NOT NULL,
ID_CONFCAMPTELA NUMERIC(10, 0) NOT NULL,
NM_CONFCAMP VARCHAR(100) NULL,
FX_CONFCAMP CHAR(1) NOT NULL,
FL_ATIVCONFCAMP CHAR(1) NOT NULL,
PRIMARY KEY (ID_CONFCAMP));
//

CREATE TABLE CAMPOS_CONFIGURACAO_ITEM (
ID_ITEMCONFCAMP NUMERIC(10, 0) NOT NULL,
ID_CONFCAMP NUMERIC(10, 0) NOT NULL,
VL_INICITEMCONFCAMP NUMERIC(15, 5) NULL,
VL_FINAITEMCONFCAMP NUMERIC(15, 5) NULL,
GN_OPERITEMCONFCAMP VARCHAR(3) NOT NULL,
GN_CORFUNDITEMCONFCAMP NUMERIC(10, 0) NOT NULL,
GN_CORTEXTITEMCONFCAMP NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_ITEMCONFCAMP));
//

CREATE TABLE DISPOSITIVO_CONFIGURACAO (
ID_CONFDISP VARCHAR(20) NOT NULL,
NM_CONFDISP VARCHAR(100) NOT NULL,
FL_TIPOCONFDISP VARCHAR(2) NOT NULL,
NM_MARCCONFDISP VARCHAR(100) NOT NULL,
FL_TIPOCONECONFDISP VARCHAR(10) NOT NULL,
NR_NUMETIPOCONECONFDISP NUMERIC(2, 0) NULL,
IE_CODIBARRCONFDISP VARCHAR(20) NULL,
NR_TEMPDESCBUFFCONFDISP NUMERIC(2, 0) NULL,
NR_SERITAXATRANCONFDISP NUMERIC(10, 0) NULL,
NR_SERIBITSDADOCONFDISP NUMERIC(1, 0) NULL,
FL_SERIPARICONFDISP CHAR(1) NULL,
NR_SERIBITSPARACONFDISP NUMERIC(1, 0) NULL,
FL_SERICONTFLUXCONFDISP CHAR(1) NULL,
FL_SERICHECSUMCONFDISP CHAR(1) NULL,
NM_TCPENDECONFDISP VARCHAR(100) NULL,
NR_PORTCONFDISP NUMERIC(10, 0) NULL,
FL_TCPTIPOSINCCONFDISP CHAR(1) NULL,
PRIMARY KEY (ID_CONFDISP));
//

CREATE TABLE APONTAMENTO (
NR_APONTAMENTO NUMERIC(9, 0) NOT NULL,
DATA_APONTAMENTO DATETIME NOT NULL,
DATA_PRODUCAO DATETIME NOT NULL,
NR_LINHA_PRODUCAO NUMERIC(2, 0) NOT NULL,
COD_PRODUTO NUMERIC(8, 0) NOT NULL,
TURNO NUMERIC(1, 0) NOT NULL,
PESO_BALANCA NUMERIC(10, 3) NULL,
PESO_NOMINAL NUMERIC(10, 3) NULL,
PESO_TARA NUMERIC(10, 3) NULL,
PESO_MINIMO NUMERIC(10, 3) NULL,
PESO_MAXIMO NUMERIC(10, 3) NULL,
ID_INTEGRACAO NUMERIC(1, 0) NOT NULL,
DATA_INTEGRACAO DATETIME NULL,
COD_BARRAS VARCHAR(14) NOT NULL,
NR_SERIE VARCHAR(10) NULL,
LOTE VARCHAR(18) NULL,
PRIMARY KEY (NR_APONTAMENTO));
//

CREATE TABLE PRODUCAO_PROG_SIMU_BLOQUEIO (
NM_EQUIBLOQSIMUPROGPROD VARCHAR(80) NOT NULL,
NR_IPBLOQSIMUPROGPROD VARCHAR(15) NOT NULL,
GN_SESSBLOQSIMUPROGPROD VARCHAR(50) NOT NULL,
ID_SIMUPROGPROD NUMERIC(10, 0) NOT NULL,
DT_BLOQSIMUPROGPROD DATETIME NOT NULL);
//

CREATE TABLE PRODUCAO_PROGRAMA_EQUIPAMENTO (
ID_PRODPROGEQUI NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
DT_INICPRODPROGEQUI DATETIME NOT NULL,
DT_FINAPRODPROGEQUI DATETIME NOT NULL,
QN_PRODPROGEQUI NUMERIC(16, 3) NOT NULL,
PRIMARY KEY (ID_PRODPROGEQUI));
//

CREATE TABLE PRODUCAO_REGISTRO_LOTE (
NR_SEQUTURNREGIPROD NUMERIC(5, 0) NULL,
NR_LOTERASTREGIPROD VARCHAR(20) NULL,
NR_LOTENOVO VARCHAR(62) NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL);
//

CREATE TABLE DefaultTemplate (
defaultTemplateId UNIQUEIDENTIFIER DEFAULT (newid()) NOT NULL,
createdAt DATETIME DEFAULT (getdate()) NOT NULL,
updatedAt DATETIME DEFAULT (getdate()) NOT NULL,
isFixed BIT DEFAULT ((0)) NOT NULL,
templateId UNIQUEIDENTIFIER NOT NULL,
userId UNIQUEIDENTIFIER NOT NULL,
PRIMARY KEY (defaultTemplateId));
//

CREATE TABLE CIENCIA_REGISTRO_OCORRENCIA (
ID_OCORREGICIEN NUMERIC(10, 0) NOT NULL,
ID_OCORREGI NUMERIC(10, 0) NOT NULL,
DT_OCORREGICIEN DATETIME NOT NULL,
ID_USUASIST_OCORREGICIEN NUMERIC(10, 0) NOT NULL,
GN_OCORREGICIEN VARCHAR NULL,
PRIMARY KEY (ID_OCORREGICIEN));
//

CREATE TABLE PROD_TRAN (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_TRANREGIPROD NUMERIC(10, 0) NOT NULL,
DT_TRANREGIPROD DATETIME NOT NULL,
DT_ABERTRANREGIPROD DATETIME NULL,
DT_FECHTRANREGIPROD DATETIME NULL,
FL_TIPOTRANREGIPROD CHAR(2) NOT NULL,
FL_STATTRANREGIPROD CHAR(2) NOT NULL,
ID_ALMOTRANTRANREGIPROD NUMERIC(10, 0) NULL,
ID_ALMOORIGTRANREGIPROD NUMERIC(10, 0) NULL,
ID_ALMODESTTRANREGIPROD NUMERIC(10, 0) NULL,
ID_PEDIVENDTRANREGIPROD NUMERIC(10, 0) NULL,
ID_USUASIST_ABERTURA NUMERIC(10, 0) NULL,
ID_USUASIST_FECHAMENTO NUMERIC(10, 0) NULL,
NR_NOTAFISCTRANREGIPROD NUMERIC(10, 0) NULL,
FX_TRANREGIPROD CHAR(1) NOT NULL,
FL_EXPETRANREGIPROD CHAR(1) NULL,
ID_CARGEXPETRANREGIPROD NUMERIC(10, 0) NULL,
GN_PLACTRANREGIPROD VARCHAR(8) NULL,
GN_ROTICRIATRANREGIPROD CHAR(1) NULL,
FL_LIBEENTRTRANREGIPROD CHAR(2) NULL,
ID_USUASISTLIBEENTR NUMERIC(10, 0) NULL,
DT_LIBEENTRTRANREGIPROD DATETIME NULL,
FL_LIBESAIDTRANREGIPROD CHAR(2) NULL,
ID_USUASISTLIBESAID NUMERIC(10, 0) NULL,
DT_LIBESAIDTRANREGIPROD DATETIME NULL,
IE_PEDIVENDTRANREGIPROD VARCHAR(25) NULL,
ID_VEICTRAN NUMERIC(10, 0) NULL,
ID_TRANMOTOTRAN NUMERIC(10, 0) NULL,
FL_FECHINCOTRANREGIPROD CHAR(1) NULL,
GN_MOTIFECHINCOTRANREGIPRO VARCHAR(2000) NULL);
//

CREATE TABLE MATE_DEFI (
EMPRESA VARCHAR(2) NOT NULL,
ID_DEFIMATEEMBA NUMERIC(10, 0) NOT NULL,
ID_PRODDEFIMATEEMBA VARCHAR(4) NULL,
NM_PRODDEFIMATEEMBA VARCHAR(60) NULL,
NM_PRODREDUDEFIMATEEMBA VARCHAR(28) NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_EMBALAGEM NUMERIC(10, 0) NOT NULL,
QN_CAPAMINIDEFIMATEEMBA NUMERIC(16, 6) NULL,
QN_CAPAMAXIDEFIMATEEMBA NUMERIC(16, 6) NULL,
QN_CAPAPADRDEFIMATEEMBA NUMERIC(16, 6) NULL,
QN_CAPAMEDIDEFIMATEEMBA NUMERIC(16, 6) NULL,
QN_CAPAPADRUNIDDEFIMATEEMBA NUMERIC(16, 6) NULL,
QN_CAPAMEDIUNIDDEFIMATEEMBA NUMERIC(10, 0) NULL,
ID_INTEDEFIMATEEMBA VARCHAR(25) NULL,
PC_TOLEMINIDEFIMATEEMBA NUMERIC(16, 6) NULL,
PC_TOLEMAXIDEFIMATEEMBA NUMERIC(16, 6) NULL,
ID_VALIMATEEMBA NUMERIC(10, 0) NULL,
FL_ESPEDEFIMATEEMBA CHAR(2) NULL,
FL_ESTADEFIMATEEMBA CHAR(2) NULL,
PC_TEMPDEFIMATEEMBA NUMERIC(6, 2) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
PC_QUEBDEFIMATEEMBA NUMERIC(4, 2) NULL,
IE_DEFIMATEEMBA VARCHAR(25) NULL,
ID_MARCA NUMERIC(10, 0) NULL,
ID_FAMIPROD NUMERIC(10, 0) NULL,
ID_OBSECERT NUMERIC(10, 0) NULL,
GN_CODIEA13DEFIMATEEMBA VARCHAR(13) NULL,
GN_CODIEA14DEFIMATEEMBA VARCHAR(14) NULL,
NM_SIGLPRODDEFIMATEEMBA VARCHAR(15) NULL,
GN_NUMESENADEFIMATEEMBA VARCHAR(20) NULL,
ID_CLASEXTE NUMERIC(10, 0) NULL,
GN_DESCETIQLINH1DEFIMATEEMBA VARCHAR(55) NULL,
GN_DESCETIQLINH2DEFIMATEEMBA VARCHAR(55) NULL,
GN_DESCETIQLINH3DEFIMATEEMBA VARCHAR(55) NULL,
ID_TEXTETIQ NUMERIC(10, 0) NULL,
ID_INSTCONS NUMERIC(10, 0) NULL,
FL_IMPRPRODCERTDEFIMATEEMBA CHAR(1) NULL,
ID_UNIDMEDI_FATUDEFIMATEEMBA NUMERIC(10, 0) NULL,
FX_DEFIMATEEMBA VARCHAR(1) NOT NULL,
NM_PACKDEFIMATEEMBA VARCHAR(40) NULL,
FILIAL INTEGER NOT NULL,
QN_PESOMAXIDEFIMATEEMBA INTEGER NULL,
QN_PESOMINIDEFIMATEEMBA INTEGER NULL,
FL_VALIRESTPESODEFIMATEEMBA CHAR(1) NULL,
FL_PRODBATCDEFIMATEEMBA CHAR(1) NULL,
FL_SEMIACABDEFIMATEEMBA CHAR(1) NULL,
QN_CAPAPADRUNIDTLDEFIMATEEMBA NUMERIC(10, 0) NULL,
FL_AGRUDIVIFATUDEFIMATEEMBA CHAR(1) NULL,
ID_VALONUTR NUMERIC(10, 0) NULL,
ID_MODEETIQIMPRMATEEMBADEFI NUMERIC(10, 0) NULL,
ID_MODEETIQPRIMMATEEMBADEFI NUMERIC(10, 0) NULL,
ID_MODEETIQIMPRPREMATEEMBADEFI NUMERIC(10, 0) NULL,
QN_PRODEMBAMATEEMBADEFI INTEGER NULL,
FL_VISUPROGPRODDEFIMATEEMBA CHAR(1) NULL,
ID_UNIDMEDI_UNIDMATEEMBADEFI NUMERIC(10, 0) NULL,
ID_UNIDMEDI_PECAMATEEMBADEFI NUMERIC(10, 0) NULL,
QN_PECAPRODMATEEMBADEFI INTEGER NULL,
FL_CONDDEFIMATEEMBA CHAR(2) NULL,
ID_GRUPDEMA NUMERIC(10, 0) NULL,
QN_ANIMEMBAMATEEMBADEFI INTEGER NULL,
FL_ALTEPRODPALEDEFIMATEEMBA CHAR(1) NOT NULL,
FL_CALCCUSTDEFIMATEEMBA CHAR(1) NULL,
ID_DEFIMATEEMBA_TROCEMBA NUMERIC(10, 0) NULL,
FL_TIPODESTCUSTDEFIMATEEMBA CHAR(2) NULL,
ID_MATEEMBA_LENKE5 NUMERIC(10, 0) NULL,
FL_UNIDTIPOPESODEFIMATEEMBA CHAR(1) NOT NULL,
QN_UNIDCAPANOMIDEFIMATEEMBA NUMERIC(10, 0) NULL,
PC_UNIDTOLEMINIDEFIMATEEMBA NUMERIC(6, 3) NULL,
PC_UNIDTOLEMAXIDEFIMATEEMBA NUMERIC(6, 3) NULL,
QN_UNIDTARADEFIMATEEMBA NUMERIC(10, 0) NULL,
FL_UNDTIPOPESODEFIMATEEMBA CHAR(1) NOT NULL,
QN_UNDCAPANOMIDEFIMATEEMBA NUMERIC(10, 0) NULL,
PC_UNDTOLEMINIDEFIMATEEMBA NUMERIC(6, 3) NULL,
PC_UNDTOLEMAXIDEFIMATEEMBA NUMERIC(6, 3) NULL,
QN_UNDTARADEFIMATEEMBA NUMERIC(10, 0) NULL);
//

CREATE TABLE IMPRESSAO_PONTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_IMPRPONT NUMERIC(10, 0) NOT NULL,
NM_IMPRPONT VARCHAR(25) NOT NULL,
NM_IMPRETIQVISUIMPRPONT VARCHAR(260) NOT NULL,
PRIMARY KEY (ID_IMPRPONT));
//

CREATE TABLE MIDDLEWARE_SYNC_SERVICE_LOG (
GN_LOGMESSAGE VARCHAR NOT NULL,
DT_LOGMESSAGE DATETIME NOT NULL,
NR_EXEVERSION VARCHAR(20) NOT NULL);
//

CREATE TABLE DATA_CONTROLE (
DATACONTROLE DATETIME DEFAULT (getdate()) NULL);
//

CREATE TABLE TEMP_REGIPROD (
ID_IDENPALEEXPE NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_PALEEXPE NUMERIC(10, 0) NOT NULL,
ID_SSCCIDENPALEEXPE CHAR(18) NOT NULL,
DT_PADRIDENPALEEXPE DATETIME NOT NULL,
QN_PESOLIQUIDENPALEEXPE NUMERIC(9, 2) NOT NULL,
QN_TARAEMBAIDENPALEEXPE NUMERIC(9, 2) NOT NULL,
FL_STATIDENPALEEXPE CHAR(2) NOT NULL,
FX_IDENPALEEXPE CHAR(1) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
FL_ETIQCOMPIDENPALEEXPE CHAR(1) NULL,
FL_TIPOUNIDIDENPALEEXPE CHAR(2) NULL,
ID_ALMOXARIFADO_ORIGEM NUMERIC(10, 0) NULL);
//

CREATE TABLE INS_FECHESTO (
ID_ITEMFECHESTO INTEGER NULL,
ID_FECHESTO INTEGER NULL,
IE_FILISIST VARCHAR(25) NULL,
FILIAL INTEGER NOT NULL,
IE_MATEEMBA VARCHAR(25) NULL,
DT_ITEMFECHESTO DATE NULL,
GN_CODIEXTETIPOMOVIFECHESTO VARCHAR(2) NULL,
FL_OPERTIPOMOVIITEMFECHESTO CHAR(1) NOT NULL,
QN_CAIXITEMFECHESTO NUMERIC(38, 0) NULL,
QN_PESOPADRITEMFECHESTO NUMERIC(38, 3) NULL,
DT_CRIAITEMFECHESTO INTEGER NULL,
DT_PROCITEMFECHESTO INTEGER NULL,
FL_STATITEMFECHESTO VARCHAR(2) NOT NULL,
FX_ITEMFECHESTO VARCHAR(1) NOT NULL,
ID_PRODMATEEMBA VARCHAR(4) NOT NULL,
ID_INVEPROD INTEGER NULL,
VL_CUSTITEMFECHESTO INTEGER NULL,
ID_CCITEMFECHESTO INTEGER NULL,
QN_PESOLIQUITEMFECHESTO NUMERIC(38, 3) NULL,
QN_PESOBRUTITEMFECHESTO NUMERIC(38, 3) NULL,
FL_TIPOOPERITEMFECHESTO VARCHAR(2) NULL);
//

CREATE TABLE report (
reportid UNIQUEIDENTIFIER NOT NULL,
companyid UNIQUEIDENTIFIER NOT NULL,
branchid UNIQUEIDENTIFIER NOT NULL,
groupmenucustomid UNIQUEIDENTIFIER NOT NULL,
name VARCHAR(200) NULL,
tag VARCHAR(6) NULL,
type INTEGER NOT NULL,
gestatus INTEGER NOT NULL,
gedateupdate DATETIME NULL,
geaccountidupdate UNIQUEIDENTIFIER NULL,
createdAt DATETIME DEFAULT (getdate()) NULL,
updatedAt DATETIME DEFAULT (getdate()) NULL,
isFixed BIT DEFAULT ((0)) NULL,
PRIMARY KEY (reportid));
//

CREATE TABLE INTERFACE_ENTRADA_AVE_VIVA (
IE_ENTRAVEVIVA VARCHAR(25) NOT NULL,
IE_FILISIST VARCHAR(25) NOT NULL,
IE_ORDEPESAENTRAVEVIVA VARCHAR(25) NULL,
IE_LOTEENTRAVEVIVA VARCHAR(25) NULL,
DT_ENTRCAMICENTRAVEVIVA DATETIME NOT NULL,
GN_PLACCAMIENTRAVEVIVA VARCHAR(10) NULL,
IE_FORNENTRAVEVIVA VARCHAR(25) NULL,
IE_PROPENTRAVEVIVA VARCHAR(25) NULL,
IE_LINHAVEENTRAVEVIVA VARCHAR(25) NULL,
IE_TRANENTRAVEVIVA VARCHAR(25) NULL,
IE_MOTOENTRAVEVIVA VARCHAR(25) NULL,
IE_MATEANIMENTRAVEVIVA VARCHAR(25) NULL,
QN_ANIMCABEENTRAVEVIVA NUMERIC(10, 0) NOT NULL,
QN_PESOBRUTENTRAVEVIVA NUMERIC(15, 3) NOT NULL,
QN_GAIOENTRAVEVIVA NUMERIC(10, 0) NULL,
NR_IDADANIMENTRAVEVIVA NUMERIC(10, 0) NULL,
GN_OBSEENTRAVEVIVA VARCHAR(200) NULL,
IE_APANMETOENTRAVEVIVA VARCHAR(25) NULL,
IE_EQUIAPANENTRAVEVIVA VARCHAR(25) NULL,
NR_SEXOANIMENTRAVEVIVA NUMERIC(10, 0) NULL,
FL_SINCENTRAVEVIVA CHAR(1) DEFAULT ('N') NOT NULL,
DT_ABERPENDENTRAVEVIVA DATETIME NULL,
ID_USUASIST_ABERPEND NUMERIC(10, 0) NULL,
QN_CONTINICENTRAVEVIVA NUMERIC(10, 0) NULL,
DT_FECHPENDENTRAVEVIVA DATETIME NULL,
ID_USUASIST_FECHPEND NUMERIC(10, 0) NULL,
QN_CONTFINAENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_GAIOVAZIENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_MORTENTRAVEVIVA NUMERIC(10, 0) NULL,
NR_TEMPENTRAVEVIVA NUMERIC(10, 2) NULL,
ID_TEMPCOND NUMERIC(10, 0) NULL,
QN_UMIDENTRAVEVIVA NUMERIC(15, 3) NULL,
NR_VELONORIENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_TOTAAVEPENDENTRAVEVIVA NUMERIC(15, 3) NULL,
GN_OBSEOCORPENDENTRAVEVIVA VARCHAR(4000) NULL,
PRIMARY KEY (IE_ENTRAVEVIVA));
//

CREATE TABLE PRODUCAO_PROCES_UNID_META (
ID_METAUNIDPROCPROD NUMERIC(10, 0) NOT NULL,
ID_UNIDPROCPROD NUMERIC(10, 0) NOT NULL,
NR_ANOMETAUNIDPROCPROD INTEGER NULL,
PC_OPERJANEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERFEVEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERMARCMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERABRIMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERMAIOMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERJUNHMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERJULHMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERAGOSMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERSETEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPEROUTUMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERNOVEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_OPERDEZEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBJANEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBFEVEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBMARCMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBABRIMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBMAIOMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBJUNHMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBJULHMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBAGOSMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBSETEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBOUTUMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBNOVEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBDEZEMETAUNIDPROCPROD NUMERIC(16, 6) NULL,
PRIMARY KEY (ID_METAUNIDPROCPROD));
//

CREATE TABLE PRODUCAO_REGISTRO_ESTOLANC_TMP (
ID_LANCESTOREGIPROD NUMERIC(10, 0) NOT NULL,
DT_LANCESTOREGIPROD DATETIME NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
ID_IDENREGIPROD VARCHAR(20) NOT NULL,
DT_ESTOREGIPROD DATETIME NOT NULL,
ID_PRODMATEEMBA VARCHAR(6) NOT NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NOT NULL,
FL_OPERLANCESTOREGIPROD CHAR(1) NOT NULL,
QN_CAIXFISIESTOREGIPROD NUMERIC(10, 0) NOT NULL,
QN_PSVDFISIESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PSLQFISIESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_TARAFISIESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_CAIXCONTESTOREGIPROD NUMERIC(10, 0) NOT NULL,
QN_PSVDCONTESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PSLQCONTESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_TARACONTESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_CAIXAJUSESTOREGIPROD NUMERIC(10, 0) NOT NULL,
QN_PSVDAJUSESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PSLQAJUSESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_TARAAJUSESTOREGIPROD NUMERIC(10, 3) NOT NULL,
FL_PROCLANCESTOREGIPROD CHAR(1) NOT NULL,
FX_LANCESTOREGIPROD CHAR(1) NOT NULL,
FL_TIPOOPERLANCESTOREGIPROD CHAR(2) NULL,
DT_PADRESTOREGIPROD DATETIME NULL,
FL_PRODPROPESTOREGIPROD CHAR(1) NULL,
FL_TRANESTOREGIPROD CHAR(1) NULL,
FL_ORIGLANCESTOREGIPROD CHAR(2) NULL,
ID_LANCESTOREGIPROD_ORIGEM NUMERIC(10, 0) NULL,
FL_SINCERPLANCESTOREGIPROD CHAR(1) NULL,
QN_PRODEMBAESTOREGIPROD NUMERIC(10, 0) NULL,
QN_UNIDFISIESTOREGIPROD NUMERIC(10, 0) NULL,
FL_TIPOUNIDESTOREGIPROD CHAR(2) NULL,
ID_ORIGMOVILANCESTOREGIPROD NUMERIC(10, 0) NULL,
QN_TENTERPLANCESTOREGIPROD INTEGER NULL,
VL_CUSTLANCESTOREGIPROD NUMERIC(15, 6) NULL,
PRIMARY KEY (ID_LANCESTOREGIPROD));
//

CREATE TABLE RECIPIENTE_TIPO_PRODUTO (
ID_TIPORECIPROD NUMERIC(10, 0) NOT NULL,
ID_TIPORECI NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_TIPORECIPROD));
//

CREATE TABLE GRUPO_EQUIPAMENTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_EQUIGRUP NUMERIC(10, 0) NOT NULL,
NM_DESCEQUIGRUP VARCHAR(50) NULL,
IE_EQUIGRUP VARCHAR(25) NULL,
FL_CALCEFICEQUIGRUP CHAR(1) NULL,
PRIMARY KEY (ID_EQUIGRUP));
//

CREATE TABLE PRO102_PRODUTOS (
ID_PRODMATEEMBA VARCHAR(4) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL);
//

CREATE TABLE PRODUCAO_UNIDADE_AGRUPADA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_PONTO NUMERIC(10, 0) NULL,
ID_PRODUNIDAGRUP NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
DT_PADRPRODUNIDAGRUP DATETIME NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_PESOPRODUNIDAGRUP NUMERIC(10, 6) NOT NULL,
QN_TARAPRODUNIDAGRUP NUMERIC(10, 6) NOT NULL,
QN_TOLEMINIPRODUNIDAGRUP NUMERIC(6, 3) NOT NULL,
QN_TOLEMAXIPRODUNIDAGRUP NUMERIC(6, 3) NOT NULL,
QN_UNIPRODUNIDAGRUP NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_PRODUNIDAGRUP));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_AD (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_ADSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_PRODSIMUCUSTMENS NUMERIC(10, 0) NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
QN_ADSIMUCUSTMENS NUMERIC(30, 10) NULL,
FL_VALOKILOADSIMUCUSTMENS CHAR(1) NULL,
FX_ADSIMUCUSTMENS CHAR(1) NULL,
VL_UnitADSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_MATEADSIMUCUSTMENS NUMERIC(30, 10) NULL,
PRIMARY KEY (ID_ADSIMUCUSTMENS));
//

CREATE TABLE ESPERA_GALPAO_BOX (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_BOXGALPESPE NUMERIC(10, 0) NOT NULL,
ID_GALPESPE NUMERIC(10, 0) NOT NULL,
NM_BOXGALPESPE VARCHAR(50) NOT NULL,
NM_DESCBOXGALPESPE VARCHAR(100) NOT NULL,
FL_ATIVBOXGALPESPE CHAR(1) NOT NULL,
GN_OBSEBOXGALPESPE VARCHAR(2000) NULL,
PRIMARY KEY (ID_BOXGALPESPE));
//

CREATE TABLE FORMULARIO_QUALIDADE_DESB (
ID_FORMQUALDESB NUMERIC(10, 0) NOT NULL,
ID_FORMQUALMETA NUMERIC(10, 0) NULL,
ID_REFEQUALMETA NUMERIC(10, 0) NULL,
ID_USUALIBEFORMQUALDESB NUMERIC(10, 0) NULL,
DT_LIBEFORMQUALDESB DATE NULL,
GN_OBSFORMQUALDESB VARCHAR(1000) NULL,
GN_MOTIBLOQFORMQUALDESB VARCHAR(100) NULL,
PRIMARY KEY (ID_FORMQUALDESB));
//

CREATE TABLE FORNECEDOR_ETIQUETA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ETIQFORN NUMERIC(10, 0) NOT NULL,
ID_FORNECEDOR NUMERIC(10, 0) NOT NULL,
IE_ETIQFORN VARCHAR(25) NULL,
NM_ETIQFORN VARCHAR(60) NOT NULL,
QN_DIGIETIQFORN INTEGER NOT NULL,
NR_INICPOSIPRODETIQFORN INTEGER NULL,
NR_FINAPOSIPRODETIQFORN INTEGER NULL,
NR_INICPOSIPESOETIQFORN INTEGER NULL,
NR_FINAPOSIPESOETIQFORN INTEGER NULL,
NR_INICPOSIDATAETIQFORN INTEGER NULL,
NR_FINAPOSIDATAETIQFORN INTEGER NULL,
FL_ATIVETIQFORN CHAR(1) NOT NULL,
FX_ETIQFORN CHAR(1) NOT NULL,
PRIMARY KEY (ID_ETIQFORN));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_MV (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NULL,
ID_MVSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
VL_MVSIMUCUSTMENS NUMERIC(30, 10) NULL,
FL_TIPOIMPOMVSIMUCUSTMENS CHAR(1) DEFAULT ('A') NULL,
FX_MVSIMUCUSTMENS CHAR(1) NULL,
PRIMARY KEY (ID_MVSIMUCUSTMENS));
//

CREATE TABLE PRODUCAO_REGISTRO_ESTOQUE_ITEM (
ID_ITEMESTOREGIPROD NUMERIC(10, 0) NOT NULL,
DT_ITEMESTOREGIPROD DATETIME NULL,
ID_PRODMATEEMBA VARCHAR(4) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
FL_TIPOOPERITEMESTOREGIPROD CHAR(2) NULL,
FL_OPERITEMESTOREGIPROD CHAR(1) NULL,
QN_CAIXENTRFIITESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDENTRFIITESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQENTRFIITESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARAENTRFIITESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXSAIDFIITESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDSAIDFIITESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQSAIDFIITESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARASAIDFIITESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXENTRFISIITEMESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDENTRFISIITEMESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQENTRFISIITEMESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARAENTRFISIITEMESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXSAIDFISIITEMESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDSAIDFISIITEMESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQSAIDFISIITEMESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARASAIDFISIITEMESTOREGIPROD NUMERIC(10, 3) NULL,
PRIMARY KEY (ID_ITEMESTOREGIPROD));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_DO (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_DOSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NULL,
ID_DESPOPER NUMERIC(10, 0) NULL,
VL_DOSIMUCUSTMENS NUMERIC(30, 10) NULL,
FL_TIPOIMPOMENSDESPOPER CHAR(1) NULL,
FX_DOSIMUCUSTMENS CHAR(1) NULL,
PRIMARY KEY (ID_DOSIMUCUSTMENS));
//

CREATE TABLE CONSTITUICAO_DIARIA (
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(5, 0) NULL,
ID_DIARCONS NUMERIC(10, 0) NOT NULL,
ID_REGIDATAPADR NUMERIC(10, 0) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_PRINPARTAVE NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
DT_PADRDIARCONS DATETIME NULL,
FL_DESPDIARCONS VARCHAR(2) NULL,
FL_AGRECUSTDIARCONS CHAR(1) NULL,
FX_DIARCONS CHAR(1) NULL,
NR_TURNDIARCONS NUMERIC(10, 0) NULL,
QN_COMPDIARCONS NUMERIC(16, 9) NULL,
QN_PESOMEDIDIARCONS NUMERIC(20, 10) NULL,
PC_COMPDIARCONS NUMERIC(20, 10) NULL,
VL_COMPDIARCONS NUMERIC(20, 10) NULL,
PRIMARY KEY (ID_DIARCONS));
//

CREATE TABLE EQUIPAMENTO_TURNO_DIARIO_ITEM (
ID_ITEMDIARTURNEQUI NUMERIC(10, 0) NOT NULL,
ID_DIARTURNEQUI NUMERIC(10, 0) NOT NULL,
DT_HORAINICITEMDIARTURNEQUI DATETIME NULL,
DT_HORAFINAITEMDIARTURNEQUI DATETIME NULL,
FX_ITEMDIARTURNEQUI CHAR(1) NOT NULL,
GN_SEQUITEMDIARTURNEQUI VARCHAR(20) NULL,
DT_NOMIINICITEMDIARTURNEQUI DATETIME NULL,
DT_NOMIFINAITEMDIARTURNEQUI DATETIME NULL,
DT_EXTEINICITEMDIARTURNEQUI DATETIME NULL,
DT_EXTEFINAITEMDIARTURNEQUI DATETIME NULL,
DT_INICREALITEMDIARTURNEQUI DATETIME NULL,
FL_INIDIAANTEITEMDIARTURNEQUI CHAR(1) NULL,
ID_REGIPARAEQUI NUMERIC(10, 0) NULL,
DT_TEMPEXTEITEMDIARTURNEQUI DATETIME NULL,
DT_TERMREALITEMDIARTURNEQUI DATETIME NULL,
PRIMARY KEY (ID_ITEMDIARTURNEQUI));
//

CREATE TABLE TUNEL (
ID_TUNEL NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
QN_TEMPERATURA_RETORNO NUMERIC(10, 3) NULL,
QN_TOLERANCIA_MIN NUMERIC(10, 3) NULL,
QN_TOLERANCIA_MAX NUMERIC(10, 3) NULL,
PC_ESTOQUE NUMERIC(10, 4) NULL,
QN_VELOCIDADE NUMERIC(10, 3) NULL,
QN_VELOCIDADE_BANDEJAS NUMERIC(10, 3) NULL,
NR_NIVEL VARCHAR(25) NULL,
FL_STATUS CHAR(1) NULL,
DT_REGISTRO DATETIME NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
DT_OCORRENCIA DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL);
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_ENTRADA (
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(5, 0) NULL,
ID_ENTRSIMUMENSCUST NUMERIC(10, 0) NOT NULL,
ID_SIMUMENSCUST NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
ID_LINHTIPOAVE NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_CONSAVE NUMERIC(10, 0) NULL,
ID_PRINPARTAVE NUMERIC(10, 0) NULL,
ID_ITEMCONSAVE NUMERIC(10, 0) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_PROCLINH NUMERIC(10, 0) NULL,
DT_PROCENTRSIMUMENSCUST DATETIME NULL,
DT_PADRENTRSIMUMENSCUST DATETIME NULL,
FL_DESPENTRSIMUMENSCUST VARCHAR(2) NULL,
FL_AGRECUSTENTRSIMUMENSCUST CHAR(1) NULL,
FX_ENTRSIMUMENSCUST CHAR(1) NULL,
NR_FATONOBRENTRSIMUMENSCUST NUMERIC(10, 6) NULL,
QN_PESOLIQUENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_CABEENTRSIMUMENSCUST NUMERIC(9, 0) NULL,
QN_PESOMEDIENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_CONSCOMPENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_CONSPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_CONSAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_CONSPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_REALCOMPENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_REALPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_REALAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_REALPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_DESPCOMPENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_DESPPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_DESPAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_DESPPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_COMECOMPENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_COMEPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_COMEAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_COMEPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
VL_CSTENTRAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
VL_CSTCOMEAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_FATOCOMPENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_FATOPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_FATOAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_FATOPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_AGRECOMPENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
QN_AGREPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_AGREAVEENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PC_AGREPARTENTRSIMUMENSCUST NUMERIC(20, 10) NULL,
PRIMARY KEY (ID_ENTRSIMUMENSCUST));
//

CREATE TABLE MatrizComponentes (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA CHAR(4) NULL,
QN_COMPONENTE NUMERIC(20, 10) NULL,
VL_COMPONENTE NUMERIC(20, 10) NULL,
PC_COMPONENTE NUMERIC(20, 10) NULL);
//

CREATE TABLE TMP_REL210_ENTRADA (
ID_ENTRREL210 NUMERIC(10, 0) NOT NULL,
DT_REGIDATAPADR DATETIME NOT NULL,
ID_TIPOAVE NUMERIC(10, 0) NOT NULL,
ID_PROCLINH NUMERIC(10, 0) NOT NULL,
QN_CABECA NUMERIC(10, 0) NOT NULL,
QN_PESOBRUT NUMERIC(20, 6) NULL,
QN_PESOMERMA NUMERIC(20, 6) NULL,
QN_CABEMORT NUMERIC(10, 0) NULL,
QN_PESOMORT_LBS NUMERIC(20, 6) NULL,
QN_CABEDESC NUMERIC(10, 0) NULL,
QN_PESODESC_LBS NUMERIC(20, 6) NULL,
PRIMARY KEY (ID_ENTRREL210));
//

CREATE TABLE VALIDA_DESTINACAO_DIARIA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_DESTVALID NUMERIC(10, 0) NOT NULL,
GN_PERIODO VARCHAR(7) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NOT NULL,
ID_PROCLINH NUMERIC(10, 0) NULL,
DT_DESTPROD DATETIME NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
FL_PRODPROPREGIPROD CHAR(1) NULL,
FL_ESPEMATEEMBA CHAR(2) NULL,
Qn_PesoLiquRegiprod NUMERIC(10, 3) NULL,
DT_DESTORIGDESTVALI DATETIME NULL,
GN_PERIORIGDESTVALI VARCHAR(7) NULL,
ID_PROCLINHORIGDESTVALI NUMERIC(10, 0) NULL,
FL_SOBRDESTVALI CHAR(1) NULL,
QN_CAIXDESTVALI NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_DESTVALID));
//

CREATE TABLE ALMOXARIFADO_ENDEREC_AGRUP (
ID_AGRUENDEALMO NUMERIC(10, 0) NOT NULL,
NM_AGRUENDEALMO VARCHAR(100) NOT NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
FX_AGRUENDEALMO CHAR(1) NOT NULL,
PRIMARY KEY (ID_AGRUENDEALMO));
//

CREATE TABLE INSENSIBILIZADOR (
ID_INSENSIBILIZADOR NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
QN_TENSAO_SAIDA NUMERIC(10, 3) NULL,
QN_TENSAO_SETPOINT NUMERIC(10, 3) NULL,
NM_TENSAO_UNIDADE VARCHAR(50) NULL,
QN_TENSAO_DC NUMERIC(10, 3) NULL,
NM_TENSAO_UNIDADE_LEITURA VARCHAR(50) NULL,
QN_TEMP_AMBIENTE NUMERIC(10, 3) NULL,
QN_FREQUENCIA_SAIDA NUMERIC(10, 3) NULL,
NM_ALARME VARCHAR(50) NULL,
QN_CORRENTE_SAIDA NUMERIC(10, 3) NULL,
NM_UNIDADE_CORRENTE VARCHAR(50) NULL,
NM_ONDA VARCHAR(50) NULL,
QN_LARGURA_PULSO NUMERIC(10, 3) NULL,
QN_QTDE_FRANGOS NUMERIC(10, 3) NULL,
NR_CARGA VARCHAR(25) NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
DT_OCORRENCIA DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL);
//

CREATE TABLE CUSTO_PRODUTO_ANIMAL_D (
EMPRESA VARCHAR(2) NULL,
FILIAL INTEGER NULL,
ID_ANIMPRODCUST NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
GN_PERIANIMPRODCUST VARCHAR(7) NULL,
QN_QUANANIMPRODCUST NUMERIC(10, 0) NULL,
QN_PESOANIMPRODCUST NUMERIC(16, 6) NULL,
VL_COMPANIMPRODCUST NUMERIC(16, 6) NULL,
VL_PRESCOMPANIMPRODCUST NUMERIC(16, 6) NULL,
DT_PADRANIMPRODCUST DATETIME NULL,
PRIMARY KEY (ID_ANIMPRODCUST));
//

CREATE TABLE SELADORA (
ID_SELADORA NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
FL_STATUS CHAR(1) NULL,
FL_FALHA CHAR(1) NULL,
QN_VELOCIDADE NUMERIC(10, 3) NULL,
QN_PACOTE NUMERIC(10, 3) NULL,
NR_CARGA VARCHAR(25) NULL,
DT_REGISTRO DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL,
DT_OCORRENCIA DATETIME NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
FL_PRODEQUIPROC CHAR(1) DEFAULT ('N') NOT NULL);
//

CREATE TABLE MTP_CAIXAS (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
ID_IDENREGIPROD VARCHAR(20) NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_EMBALAGEM NUMERIC(10, 0) NOT NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NOT NULL,
ID_MATEALMO NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA VARCHAR(4) NOT NULL,
DT_REGIPROD DATETIME NOT NULL,
DT_PADRREGIPROD DATETIME NOT NULL,
DT_BALAREGIPROD DATETIME NOT NULL,
ID_BALANCA NUMERIC(10, 0) NOT NULL,
QN_PESOPADRREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PESOLIQUREGIPROD NUMERIC(10, 3) NOT NULL,
FL_STATREGIPROD VARCHAR(2) NOT NULL,
FX_REGIPROD VARCHAR(1) NOT NULL,
QN_TARAEMBAREGIPROD NUMERIC(10, 3) NULL,
ID_TRANREGIPROD NUMERIC(10, 0) NULL,
ID_PEDIVEND NUMERIC(10, 0) NULL,
DT_ENTRTUNEREGIPROD DATETIME NULL,
DT_SAIDTUNEREGIPROD DATETIME NULL,
ID_TUNEPROD NUMERIC(10, 0) NULL,
DT_EXCLREGIPROD DATETIME NULL,
ID_PALEEXPE NUMERIC(10, 0) NULL,
FL_STATREGIPROD_ VARCHAR(2) NULL,
ID_IDENORIGREGIPROD VARCHAR(20) NULL,
QN_TARACOMPREGIPROD NUMERIC(10, 3) NULL,
FL_SITUREGIPROD CHAR(2) NULL,
FL_DISPREGIPROD CHAR(1) NULL,
FL_ORIGREGIPROD CHAR(2) NULL,
ID_USUASIST_REGIPROD NUMERIC(10, 0) NULL,
FL_SIMUREGIPROD CHAR(1) NULL,
FL_PRODPROPREGIPROD CHAR(1) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_ENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_PESOORIGREGIPROD NUMERIC(10, 3) NULL,
ID_CORTLOTEPROD NUMERIC(10, 0) NULL,
NR_LOTERASTREGIPROD VARCHAR(20) NULL,
FL_MODAREGIPROD CHAR(2) NULL,
ID_TURNPROD NUMERIC(10, 0) NULL,
ID_CORTLOTEPROD_PROD NUMERIC(10, 0) NULL,
DT_REFEREGIPROD DATETIME NULL,
DT_CONTREGIPROD DATETIME NULL,
FL_SEQUREGIPROD CHAR(1) NULL,
DT_VALIREGIPROD DATETIME NULL,
ID_IDENREGIPRODANTE VARCHAR(20) NULL,
DT_LOTERASTREGIPROD DATETIME NULL,
ID_PEDIDEVOVEND NUMERIC(10, 0) NULL,
ID_MOTIDEVOVEND NUMERIC(10, 0) NULL,
FL_TOTAREGIPROD CHAR(1) NULL,
ID_BATCPROD NUMERIC(10, 0) NULL,
ID_IDENORIGDESMREGIPROD VARCHAR(20) NULL,
FL_REGITRANREGIPROD CHAR(1) NULL,
DT_ELABREGIPROD DATETIME NULL,
ID_PACKPROD NUMERIC(10, 0) NULL,
DT_DESBREGIPROD DATETIME NULL,
ID_MODEIDEN NUMERIC(10, 0) NULL,
ID_PESAAGRU NUMERIC(10, 0) NULL,
QN_PESOLIQUORIGREGIPROD NUMERIC(10, 3) NULL,
FL_INTELENKREGIPROD VARCHAR(1) NULL,
QN_PRODEMBAREGIPROD NUMERIC(10, 0) NULL,
QN_CAIXREGIPROD NUMERIC(10, 0) NULL,
ID_VARIDEFIEMBA NUMERIC(10, 0) NULL,
DT_UTILPESAAGRUREGIPROD DATETIME NULL,
ID_INVEPROD NUMERIC(10, 0) NULL,
QN_PESOQUEBREGIPROD NUMERIC(10, 3) NULL,
NR_SEQUTURNREGIPROD NUMERIC(10, 0) NULL,
FILIAL_IMPRESSA INTEGER NULL,
EMPRESA_IMPRESSA VARCHAR(2) NULL,
ID_PROCTERMPRODADICMATECONS NUMERIC(10, 0) NULL,
GN_SSCCREGIPROD VARCHAR(20) NULL,
QN_TARAPRIMREGIPROD NUMERIC(10, 3) NULL,
FL_TIPOUNIDREGIPROD CHAR(2) NULL,
ID_FINAVARIDEFIEMBA NUMERIC(10, 0) NULL,
ID_CENTCUST NUMERIC(10, 0) NULL,
ID_ORIGREGIPROD NUMERIC(10, 0) NULL,
ID_DESTREGIPROD NUMERIC(10, 0) NULL,
ID_ITEMUNIDREGIPROD NUMERIC(10, 0) NULL,
QN_TARAPRIMRATEREGIPROD NUMERIC(10, 3) NULL,
FL_SOBRREGIPROD CHAR(1) NULL,
ID_ALMOXARIFADO_PRODUCAO NUMERIC(10, 0) NULL,
ID_ITEMDESTREGIPROD_AUTO NUMERIC(10, 0) NULL,
ID_ETIQUETA NUMERIC(10, 0) NULL,
ID_MULTPROGPROD NUMERIC(10, 0) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL);
//

CREATE TABLE RECIPIENTE (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_RECIPIENTE NUMERIC(10, 0) NOT NULL,
IE_RECIPIENTE VARCHAR(25) NULL,
NM_RECIPIENTE VARCHAR(40) NOT NULL,
ID_TIPORECI NUMERIC(10, 0) NOT NULL,
QN_CAPARECI NUMERIC(16, 4) NOT NULL,
FL_LOCAUTILRECI CHAR(2) NOT NULL,
FL_STATRECI CHAR(2) NOT NULL,
ID_MODEETIQRECI NUMERIC(10, 0) NULL,
FX_RECIPIENTE CHAR(1) NOT NULL,
FL_RECIEMUSO CHAR(1) DEFAULT ('N') NOT NULL,
ID_IDENREGIPROD VARCHAR(20) NULL,
PRIMARY KEY (ID_RECIPIENTE));
//

CREATE TABLE EQUIPAMENTO_CONTA_COZI (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_EQUICONTCOZI NUMERIC(10, 0) NOT NULL,
IE_EQUICONTCOZI VARCHAR(25) NULL,
DT_PADREQUICONTCOZI DATETIME NOT NULL,
DT_MEDIEQUICONTCOZI DATETIME NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
QN_CONTEQUICONTCOZI NUMERIC(10, 0) NOT NULL,
QN_VELOEQUICONTCOZI NUMERIC(10, 0) NULL,
FL_STATEQUICONTCOZI CHAR(2) NULL,
PRIMARY KEY (ID_EQUICONTCOZI));
//

CREATE TABLE COMPONENTE_DIARIO (
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(5, 0) NULL,
ID_DIARCOMP NUMERIC(10, 0) NOT NULL,
ID_REGIDATAPADR NUMERIC(10, 0) NULL,
ID_PRINPARTAVE NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
DT_PADRDIARCOMP DATE NULL,
FL_DESPDIARCOMP VARCHAR(2) NULL,
FL_AGRECUSTDIARCOMP CHAR(1) NULL,
FX_DIARCOOMCUST CHAR(1) NULL,
NR_TURNDIARCOMP NUMERIC(10, 0) NULL,
QN_COMPDIARCOMP NUMERIC(20, 10) NULL,
QN_COMPCOMEDIARCOMP NUMERIC(20, 10) NULL,
QN_CABEDIARCOMP NUMERIC(10, 0) NULL,
VL_KGTOTADIARCOMP NUMERIC(20, 10) NULL,
QN_KGTOTADIARCOMP NUMERIC(20, 10) NULL,
QN_PESODESCDIARCOMP NUMERIC(20, 10) NULL,
VL_TOTADIARCOMP NUMERIC(20, 10) NULL,
QN_PESOINTEDIARCOMP NUMERIC(16, 3) DEFAULT ((0)) NULL,
QN_PESOINTECORRDIARCOMP NUMERIC(16, 3) DEFAULT ((0)) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
QN_PESOCORTDIARCOMP NUMERIC(16, 6) NULL,
VL_KGINTEDIARCOMP NUMERIC(16, 6) NULL,
VL_KGCORTDIARCOMP NUMERIC(16, 6) NULL,
ID_PROCLINH NUMERIC(10, 0) NULL,
PC_ProcLinh NUMERIC(20, 15) NULL,
QN_PESODESCCORTDIARCOMP NUMERIC(16, 6) NULL,
PC_ProcLinhCORT NUMERIC(20, 15) NULL,
PC_COMP NUMERIC(20, 15) NULL,
GN_PERIDIARCOMP VARCHAR(7) NULL,
QN_PESOMEDIDIARCOMP NUMERIC(20, 10) NULL,
VL_KILODESTANTDIARCOMP NUMERIC(20, 10) NULL,
QN_KILODESTANTDIARCOMP NUMERIC(20, 10) NULL,
VL_KILODESTMESDIARCOMP NUMERIC(20, 10) NULL,
QN_KILODESTMESDIARCOMP NUMERIC(20, 10) NULL,
VL_KILOENTRMESDIARCOMP NUMERIC(20, 10) NULL,
QN_KILOENTRMESDIARCOMP NUMERIC(20, 10) NULL,
PRIMARY KEY (ID_DIARCOMP));
//

CREATE TABLE PESAGEM_PONTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_PESAPONT NUMERIC(10, 0) NOT NULL,
NM_PESAPONT VARCHAR(50) NOT NULL,
NM_HOSTPESAPONT VARCHAR(25) NOT NULL,
NR_PORTPESAPONT NUMERIC(10, 0) NOT NULL,
QN_TIMEOUTRESPPESAPONT NUMERIC(10, 0) NOT NULL,
ID_CONFBALA NUMERIC(10, 0) NOT NULL,
FL_ATIVPESAPONT CHAR(1) DEFAULT ('N') NOT NULL,
FX_PESAPONT CHAR(1) DEFAULT ('N') NOT NULL,
PRIMARY KEY (ID_PESAPONT));
//

CREATE TABLE MBS_ITEM (
CD_EMPRESA INTEGER NULL,
CD_FILIAL INTEGER NULL,
CD_ITEM NUMERIC(8, 0) NULL,
NM_ITEM VARCHAR(28) NULL,
NM_ETIQUETA VARCHAR(28) NULL,
NM_ABREVIADO VARCHAR(6) NULL,
CD_GRUPO_ITEM INTEGER NULL,
CD_SUBGRUPO_ITEM INTEGER NULL,
CD_DESTINO_FINAL INTEGER NULL,
ID_TIPO_PESO INTEGER NULL,
QT_DIAS_VALIDADE NUMERIC(6, 1) NULL,
QT_PESO_NOMINAL NUMERIC(11, 3) NULL,
QT_SOBREPESO NUMERIC(11, 3) NULL,
QT_PESO_TARA NUMERIC(11, 3) DEFAULT ((0)) NULL,
QT_PESO_MINIMO NUMERIC(11, 3) NULL,
QT_PESO_MAXIMO NUMERIC(11, 3) NULL,
QT_TOLERANCIA_INF NUMERIC(11, 3) NULL,
QT_TOLERANCIA_SUP NUMERIC(11, 3) NULL,
QT_PESO_EML_PRIMARIA NUMERIC(11, 3) DEFAULT ((0)) NULL,
QT_PESO_EML_SECUNDARIA NUMERIC(11, 3) DEFAULT ((0)) NULL,
QT_ITEM_EML_PRIMARIA INTEGER NULL,
QT_ITEM_EML_SECUNDARIA INTEGER NULL,
QT_ITEM_PALLET INTEGER NULL,
CD_EAN13 VARCHAR(13) NULL,
CD_DUM14 VARCHAR(14) NULL,
CD_BARRAS VARCHAR(20) NULL,
ID_ATIVO INTEGER DEFAULT ((1)) NULL,
ID_VALIDA_RFID INTEGER DEFAULT ((0)) NULL,
ID_VALIDA_PESO INTEGER DEFAULT ((1)) NULL,
NM_ARQUIVO_ETIQUETA VARCHAR(40) NULL,
ID_IMPRIME_ETIQUETA INTEGER DEFAULT ((1)) NULL,
NR_ITEM_CAIXA VARCHAR(10) NULL,
ID_CONFERENCIA INTEGER DEFAULT ((0)) NULL,
NM_RUSSO NVARCHAR(160) NULL,
NM_RUSSO2 NVARCHAR(160) NULL,
NM_ESPANHOL NVARCHAR(160) NULL,
NM_INGLES NVARCHAR(160) NULL,
NM_ARABE NVARCHAR(160) NULL,
QT_CALORIAS VARCHAR(20) NULL,
QT_CALORIAS_VXD INTEGER NULL,
QT_CARBOIDRATOS VARCHAR(10) NULL,
QT_CARBOIDRATOS_VXD INTEGER NULL,
QT_PROTEINAS VARCHAR(10) NULL,
QT_PROTEINAS_VXD INTEGER NULL,
QT_GORDURAS_TOTAIS VARCHAR(10) NULL,
QT_GORDURAS_TOTAIS_VXD INTEGER NULL,
QT_GORDURAS_SATURADAS VARCHAR(10) NULL,
QT_GORDURAS_SATURADAS_VXD INTEGER NULL,
QT_GORDURAS_TRANS VARCHAR(10) NULL,
QT_COLESTEROL VARCHAR(10) NULL,
QT_COLESTEROL_VXD INTEGER NULL,
QT_FIBRA VARCHAR(10) NULL,
QT_FIBRA_VXD INTEGER NULL,
QT_CALCIO VARCHAR(10) NULL,
QT_CALCIO_VXD INTEGER NULL,
QT_FERRO VARCHAR(10) NULL,
QT_FERRO_VXD INTEGER NULL,
QT_SODIO VARCHAR(10) NULL,
QT_SODIO_VXD INTEGER NULL,
DS_INFORMACAO_NUTRIOCIONAL VARCHAR(80) NULL,
DS_TEXTO_SIF VARCHAR(80) NULL,
CD_MARFRIG INTEGER NULL,
NR_CAIXAS INTEGER NULL,
NM_ITEM_SIF VARCHAR(500) NULL,
ID_GERA_PALLET INTEGER DEFAULT ((0)) NULL,
QT_CALORIASVXD VARCHAR(10) NULL,
QT_CARBOIDRATOSVXD VARCHAR(10) NULL,
QT_PROTEINASVXD VARCHAR(10) NULL,
QT_GORDURAS_TOTAISVXD VARCHAR(10) NULL,
QT_GORDURAS_SATURADASVXD VARCHAR(10) NULL,
QT_COLESTEROLVXD VARCHAR(10) NULL,
QT_FIBRAVXD VARCHAR(10) NULL,
QT_CALCIOVXD VARCHAR(10) NULL,
QT_FERROVXD VARCHAR(10) NULL,
QT_SODIOVXD VARCHAR(10) NULL,
ID_PALLET_MANUAL INTEGER DEFAULT ((0)) NULL,
RESERVA1 VARCHAR(50) NULL,
RESERVA2 VARCHAR(50) NULL,
RESERVA3 VARCHAR(50) NULL,
RESERVA4 VARCHAR(50) NULL,
RESERVA5 VARCHAR(50) NULL,
RESERVA6 VARCHAR(50) NULL,
ID_LIBERA_ESTEIRA INTEGER DEFAULT ((0)) NULL,
QT_PESO_ADICIONAL NUMERIC(11, 3) NULL,
CD_MARCA_PRODUTO INTEGER NULL,
CD_FORMATO_LOTE NUMERIC(9, 0) NULL,
QT_GORDURAS_MONOSATURADASVXD VARCHAR(10) NULL,
QT_GORDURAS_MONOSATURADAS VARCHAR(10) NULL,
QT_GORDURAS_POLIINSATURADA VARCHAR(10) NULL,
QT_GORDURAS_POLIINSATURADAVXD VARCHAR(10) NULL,
PECA_ID_VALIDA_PESO INTEGER NULL,
PECA_ID_TIPO_PESO INTEGER NULL,
PECA_QT_PESO_NOMINAL NUMERIC(11, 3) NULL,
PECA_QT_PESO_ADICIONAL NUMERIC(11, 3) NULL,
PECA_QT_PESO_TARA NUMERIC(11, 3) NULL,
PECA_QT_PESO_MINIMO NUMERIC(11, 3) NULL,
PECA_QT_PESO_MAXIMO NUMERIC(11, 3) NULL,
PECA_TOL_INF NUMERIC(11, 3) NULL,
PECA_TOL_SUP NUMERIC(11, 3) NULL,
ID_RPV INTEGER DEFAULT ((0)) NULL,
ROTULO VARCHAR(15) NULL,
ID_TIPO_APT INTEGER DEFAULT ((0)) NULL,
CD_CLASSE_ITEM INTEGER NULL,
ID_KIT_FESTA INTEGER DEFAULT ((0)) NULL,
CD_UND_MED_TRANSPORTE VARCHAR(5) NULL,
ID_USA_ENT INTEGER DEFAULT ((1)) NULL,
ID_USA_SAI INTEGER DEFAULT ((0)) NULL,
CD_ITEM_ALFA VARCHAR(20) NULL,
DS_FORMATO_DATA VARCHAR(10) DEFAULT ('DD/MM/YYYY') NULL,
ID_TIPO_VALIDADE INTEGER DEFAULT ((0)) NULL,
ID_APONTA_PALETIZA INTEGER DEFAULT ((0)) NULL,
DS_REGISTRO_PROCESSADOR VARCHAR(50) NULL,
ID_DATA_BASE_VALIDADE INTEGER DEFAULT ((0)) NULL,
ID_SOLICITA_QT_PECAS INTEGER DEFAULT ((0)) NULL,
ID_UND_MED_IMPRESSAO INTEGER DEFAULT ((0)) NULL,
QT_PESO_DOSAGEM NUMERIC(11, 3) NULL,
QT_PESO_AJUSTE_FINO NUMERIC(11, 3) NULL,
ID_TROCA_PEDIDO_SAIDA INTEGER DEFAULT ((0)) NULL,
QT_CASAS_DECIMAIS_IMPRESSAO INTEGER DEFAULT ((3)) NULL,
ID_SEPARADOR_DECIMAL_IMPRESSAO INTEGER DEFAULT ((0)) NULL,
RESERVA7 VARCHAR(50) NULL,
RESERVA8 VARCHAR(50) NULL,
RESERVA9 VARCHAR(50) NULL,
RESERVA10 VARCHAR(50) NULL,
CD_ITEM_CORPORATIVO VARCHAR(20) NULL,
QT_PASSO_FAIXA NUMERIC(11, 3) NULL,
QT_FAIXA INTEGER DEFAULT ((1)) NULL,
QT_FATOR_APONTAMENTO NUMERIC(5, 2) DEFAULT ((1)) NULL,
ID_CONVERTE_PALLET_VOLUMES INTEGER DEFAULT ((0)) NULL);
//

CREATE TABLE ENTRADA_PRODUTO_IDENTIFICACAO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_IDENENTRPROD NUMERIC(10, 0) NOT NULL,
ID_LEITIDENENTRPROD VARCHAR(20) NOT NULL,
ID_ENTRPROD NUMERIC(10, 0) NOT NULL,
ID_ETIQFORN NUMERIC(10, 0) NULL,
QN_DIGIETIQFORN INTEGER NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_PESOVENDIDENENTRPROD NUMERIC(16, 6) NOT NULL,
QN_TARAEMBAIDENENTRPROD NUMERIC(16, 6) NOT NULL,
DT_PADRIDENENTRPROD DATETIME NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
ID_MATEALMO NUMERIC(10, 0) NOT NULL,
FL_STATIDENENTRPROD CHAR(2) NOT NULL,
PRIMARY KEY (ID_IDENENTRPROD));
//

CREATE TABLE ENTRADA_AVULSA (
EMPRESA CHAR(2) NOT NULL,
FILIAL NUMERIC(5, 0) NULL,
ID_ENTRAVUL NUMERIC(10, 0) NOT NULL,
IE_ENTRAVUL VARCHAR(25) NULL,
DT_ENTRAVUL DATETIME NOT NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
ID_VEICTRAN NUMERIC(10, 0) NULL,
DT_ABERENTRAVUL DATETIME NOT NULL,
ID_USUASIST_ABERENTRAVUL NUMERIC(10, 0) NOT NULL,
DT_FECHENTRAVUL DATETIME NULL,
ID_USUASIST_FECHENTRAVUL NUMERIC(10, 0) NULL,
FL_STATENTRAVUL CHAR(2) NOT NULL,
PRIMARY KEY (ID_ENTRAVUL));
//

CREATE TABLE CONTINGENCIA_CONTROLE (
NR_BALACONT NUMERIC(10, 0) NOT NULL,
DT_ULTISINCPRODCONT DATETIME NULL,
GN_VERSSINCPRODCONT VARCHAR(50) NULL,
DT_ULTISINCCADACONT DATETIME NULL,
GN_VERSSINCCADACONT VARCHAR(50) NULL,
DT_ENVIEMAICONT DATETIME NULL,
DT_ENVIEMAICADACONT DATETIME NULL,
PRIMARY KEY (NR_BALACONT));
//

CREATE TABLE ENTRADA_AVE_VIVA_PEND_DETA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_DETAPENDENTRAVEVIVA NUMERIC(10, 0) NOT NULL,
ID_ENTRAVEVIVA NUMERIC(10, 0) NOT NULL,
ID_ESTAPENDESTRUNIDABAT NUMERIC(10, 0) NOT NULL,
DT_ABERDETAPENDENTRAVEVIVA DATETIME NULL,
DT_FECHDETAPENDENTRAVEVIVA DATETIME NULL,
QN_INICDETAPENDENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_FINADETAPENDENTRAVEVIVA NUMERIC(10, 0) NULL,
QN_MORTDETAPENDENTRAVEVIVA NUMERIC(10, 0) NULL,
FL_STATDETAPENDENTRAVEVIVA CHAR(2) NULL,
GN_OBSEDETAPENDENTRAVEVIVA VARCHAR(4000) NULL,
ID_USUASIST_REGIDETAPEND NUMERIC(10, 0) NULL,
ID_USUASIST_FECHDETAPEND NUMERIC(10, 0) NULL,
QN_MOAUDETAPENDENTRAVEVIVA NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_DETAPENDENTRAVEVIVA));
//

CREATE TABLE TMP_AJUSTE_MATERIAL (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_MATEAJUSTMP NUMERIC(10, 0) NOT NULL,
ID_CUSTMENS NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_REALMATEPRODCUSTMENS NUMERIC(10, 0) NULL,
ID_REALPRODCUSTMENS NUMERIC(10, 0) NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
ID_MATEEMBAFILI NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA VARCHAR(4) NULL,
ID_BATCPROD NUMERIC(10, 0) NULL,
NR_BATCPROD VARCHAR(25) NULL,
FL_TIPOPRODMATEAJUSTMP CHAR(2) NULL,
FL_TIPOREALMANUMATEAJUSTMP CHAR(2) NULL,
QN_PESOLIQUMATEAJUSTMP NUMERIC(16, 6) NULL,
QN_TOTACONSBATCMATEAJUSTMP NUMERIC(16, 6) NULL,
FL_TIPOATUAMATEAJUSTMP CHAR(2) NULL,
PRIMARY KEY (ID_MATEAJUSTMP));
//

CREATE TABLE MATERIAL_SEQUESTRO_ITEM (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ITEMSEQUMATE NUMERIC(10, 0) NOT NULL,
ID_SEQUMATE NUMERIC(10, 0) NOT NULL,
ID_MOVIMATE NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_ITEMSEQUMATE));
//

CREATE TABLE INTERFACE_AGENDAMENTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_AGENINTE NUMERIC(10, 0) NOT NULL,
NM_AGENINTE VARCHAR(50) NOT NULL,
NM_DESCAGENINTE VARCHAR(100) NOT NULL,
FL_ATIVAGENINTE CHAR(1) NOT NULL,
DT_AGENINTE DATETIME NULL,
ID_USUASIST_CRIACAO NUMERIC(10, 0) NULL,
DT_ULTIEXECAGENINTE DATETIME NULL,
NR_SEGUINTEAGENINTE INTEGER NOT NULL,
GN_URLAGENINTE VARCHAR(1000) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_AGENINTE));
//

CREATE TABLE PROD_MENS (
ID BIGINT NULL,
QN_PESOLIQUPRODCUSTMENS NUMERIC(16, 9) NULL,
IE_MATEEMBA VARCHAR(25) NULL);
//

CREATE TABLE PRODUCAO_PADRAO_DIA_SEMANA (
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(10, 0) NULL,
ID_SEMADIAPADRPROD NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA VARCHAR(4) NULL,
QN_SEMADIAPADRPROD NUMERIC(10, 0) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_TURNPROD NUMERIC(10, 0) NULL,
FL_SEMADIAPADRPROD CHAR(3) NULL,
FX_SEMADIAPADRPROD CHAR(1) NULL);
//

CREATE TABLE EQUIPAMENTO_PARADA_EVENTO (
ID_EVENPARAEQUI NUMERIC(10, 0) NOT NULL,
NM_EVENPARAEQUI VARCHAR(60) NOT NULL,
GN_NATUREZAEVENPARAEQUI VARCHAR(2) NOT NULL,
GN_TIPOEFICEVENPARAEQUI VARCHAR(2) NOT NULL,
FL_EVENPROGMEVENPARAEQUI CHAR(1) NOT NULL,
FX_EVENPARAEQUI CHAR(1) NOT NULL,
PRIMARY KEY (ID_EVENPARAEQUI));
//

CREATE TABLE EQUIPAMENTO_TURNO_INTERVALO (
ID_INTETURNEQUI NUMERIC(10, 0) NOT NULL,
ID_TURNEQUI NUMERIC(10, 0) NOT NULL,
GN_HORAINICINTETURNEQUI CHAR(8) NOT NULL,
GN_HORAFINAINTETURNEQUI CHAR(8) NOT NULL,
FX_INTETURNEQUI CHAR(1) NOT NULL,
PRIMARY KEY (ID_INTETURNEQUI));
//

CREATE TABLE MATERIAL_ENTRADA_CONTAGEM (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_CONTENTRMATE NUMERIC(10, 0) NOT NULL,
ID_ENTRMATE NUMERIC(10, 0) NOT NULL,
NR_CONTENTRMATE CHAR(2) NOT NULL,
FL_CONTENTRMATE CHAR(2) NOT NULL,
FL_LIBEQUALCONTENTRMATE CHAR(2) NOT NULL,
FL_LIBELABOCONTENTRMATE CHAR(2) NOT NULL,
DT_CONTENTRMATE DATETIME NOT NULL,
ID_USUASIST_CRIACONT NUMERIC(10, 0) NOT NULL,
DT_ABERCONTENTRMATE DATETIME NULL,
ID_USUASIST_ABERCONT NUMERIC(10, 0) NULL,
DT_FECHCONTENTRMATE DATETIME NULL,
ID_USUASIST_FECHCONT NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_CONTENTRMATE));
//

CREATE TABLE PRODUCAO_PROCESSO (
ID_PROCPROD NUMERIC(10, 0) NOT NULL,
IE_PROCPROD VARCHAR(25) NULL,
NM_PROCPROD VARCHAR(60) NOT NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NOT NULL,
FX_PROCPROD CHAR(1) DEFAULT ('N') NOT NULL,
PRIMARY KEY (ID_PROCPROD));
//

CREATE TABLE PRODUCAO_REGISTRO_CONSUMO_INTERFACE (
ID_INTECONSREGIPROD NUMERIC(10, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_PRODMATEEMBA VARCHAR(6) NULL,
ID_ESTRMATEEMBAREGIPROD INTEGER NULL,
IE_ESTRMATEEMBAREGIPROD VARCHAR(25) NULL,
ID_ALMOXARIFADO_PRODUCAO NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA_MATEPRIM VARCHAR(6) NULL,
ID_MATEEMBAFILI_MATEPRIM NUMERIC(10, 0) NULL,
DT_REGIPROD DATETIME NULL,
DT_PADRREGIPROD DATETIME NULL,
NR_LOTERASTREGIPROD VARCHAR(20) NULL,
QN_PESOLIQUREGIPROD NUMERIC(16, 6) NULL,
QN_PESOPADRREGIPROD NUMERIC(16, 6) NULL,
QN_COMPMATEEMBA NUMERIC(16, 6) NULL,
NR_LOTEMATEEMBA VARCHAR(50) NULL,
FL_OPERINTECONSREGIPROD CHAR(1) NULL,
FL_TIPOINTECONSREGIPROD CHAR(2) NULL,
ID_IDINTECONSREGIPROD NUMERIC(10, 0) NULL,
ID_UNIDMEDI NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_INTECONSREGIPROD));
//

CREATE TABLE PRODUCAO_REGISTRO_ESTOLANC_LOG (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_LOGLANCESTOREGIPROD NUMERIC(10, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
DT_LOGLANCESTOREGIPROD DATETIME NOT NULL,
GN_LOGLANCESTOREGIPROD VARCHAR(4000) NULL,
PRIMARY KEY (ID_LOGLANCESTOREGIPROD));
//

CREATE TABLE INTERFACE_FORNECEDOR_CONTROLE (
IE_FORNECEDOR VARCHAR(25) NULL,
NM_FORNECEDOR VARCHAR(40) NULL,
NM_FANTFORN VARCHAR(40) NULL,
NM_REDUFORN VARCHAR(15) NULL,
NM_LOGRFORN VARCHAR(40) NULL,
NR_LOGRFORN VARCHAR(8) NULL,
NM_BAIRFORN VARCHAR(30) NULL,
NR_CEPFORN VARCHAR(8) NULL,
NM_CIDADE VARCHAR(40) NULL,
NM_ESTADO VARCHAR(40) NULL,
SG_ESTADO VARCHAR(10) NULL,
NM_PAIS VARCHAR(40) NULL,
NR_CNPJFORN VARCHAR(14) NULL,
NR_INSCESTAFORN VARCHAR(20) NULL,
DT_CADAFORN DATETIME NULL,
SINCRONIZADO CHAR(1) DEFAULT ('N') NOT NULL);
//

CREATE TABLE SISTEMA_REPLICACAO (
NM_TABEREPLSIST VARCHAR(50) NOT NULL,
NR_ORDEREPLSIST INTEGER NOT NULL,
FL_TIPOSYNCREPLSIST CHAR(2) NOT NULL,
DT_ULTISINCREPLSIST DATETIME NULL,
GN_LOGSINCREPLSIST VARCHAR(2000) NULL,
GN_FILTREPLSIST VARCHAR(2000) NULL,
DT_ULTIENVIREPLSIST DATETIME NULL,
GN_LOGENVIREPLSIST VARCHAR(2000) NULL,
GN_FILTENVIREPLSIST VARCHAR(2000) NULL,
FL_TIPOMERGREPLSIST CHAR(1) NULL,
QN_REGISINCREPLSIST INTEGER NULL,
FL_UTILTABECONTREPLSIST CHAR(1) DEFAULT ('N') NOT NULL,
FL_METOSYNCDADOREPLSIST CHAR(2) DEFAULT ('DT') NOT NULL,
GN_SCRIPTEXCLREPLSIST VARCHAR(3000) NULL,
GN_GRUPTABEREPLSIST INTEGER DEFAULT ((0)) NOT NULL,
PRIMARY KEY (NM_TABEREPLSIST));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_MP (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_PRODSIMUCUSTMENS NUMERIC(10, 0) NULL,
ID_MPSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
QN_QTDEPRIMMATEMATEEMBA NUMERIC(16, 6) NULL,
FX_MPSIMUCUSTMENS CHAR(1) NULL,
VL_UnitMPSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_MATEMPSIMUCUSTMENS NUMERIC(30, 10) NULL,
PRIMARY KEY (ID_MPSIMUCUSTMENS));
//

CREATE TABLE ANOMALIA_PROVIDENCIA (
ID_PROVANOM NUMERIC(10, 0) NOT NULL,
IE_PROVANOM VARCHAR(25) NOT NULL,
NM_PROVANOM VARCHAR(100) NOT NULL,
PRIMARY KEY (ID_PROVANOM));
//

CREATE TABLE INTERFACE_PRODUCAO (
ID_INTEPROD INTEGER NOT NULL,
IE_FILISIST VARCHAR(15) NOT NULL,
IE_MATEEMBA VARCHAR(25) NOT NULL,
FL_EVENINTEPROD CHAR(2) NOT NULL,
FL_OPERINTEPROD CHAR(1) NOT NULL,
DT_INTEPROD DATETIME NOT NULL,
DT_PADRINTEPROD DATETIME NULL,
QN_PESOLIQUREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PESOBRUTREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PESOPADRREGIPROD NUMERIC(10, 3) NULL,
DT_STATRETOINTEPROD DATETIME NULL,
FL_STATINTEPROD CHAR(2) NULL,
FL_STATRETOINTEPROD CHAR(2) NULL,
NR_TURNO INTEGER NULL,
PRIMARY KEY (ID_INTEPROD));
//

CREATE TABLE MOVIMENTACAO_MIDDLEWARE (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_MIDDMOVI NUMERIC(10, 0) NOT NULL,
DT_MIDDMOVI DATETIME NOT NULL,
GN_MENSMIDDMOVI VARCHAR(100) NOT NULL,
FL_TIPOMIDDMOVI CHAR(2) NOT NULL,
FL_SINCMIDDMOVI CHAR(2) NOT NULL,
ID_CARGEXPE NUMERIC(10, 0) NULL,
IE_PEDIVEND VARCHAR(25) NULL,
ID_PRODMATEEMBA CHAR(4) NULL,
ID_PALEEXPE NUMERIC(10, 0) NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
ID_DEFIEMBA NUMERIC(10, 0) NULL,
ID_VARIDEFIEMBA NUMERIC(10, 0) NULL,
BATCHID NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_MIDDMOVI));
//

CREATE TABLE SIST_TRAD (
ID_TRADSIST NUMERIC(10, 0) NOT NULL,
NM_KEYTRADSIST NVARCHAR(500) NOT NULL,
NM_TAGTRADSIST NVARCHAR(10) NULL,
NM_UNITTRADSIST NVARCHAR(50) NULL,
FL_TIPOTRADSIST NCHAR(1) NOT NULL,
NM_LANGBASETRADSIST NVARCHAR(3000) NOT NULL,
DT_LANGBASETRADSIST DATETIME NOT NULL,
FL_VALIDLANGBASETRADSIST NCHAR(1) NOT NULL,
FX_TRADSIST NCHAR(1) NOT NULL,
NM_LANGINGTRADSIST NVARCHAR(3000) NULL,
DT_LANGINGTRADSIST DATETIME NULL,
ID_USUALANGINGTRADSIST NUMERIC(10, 0) NULL,
FL_CONFLANGINGTRADSIST NCHAR(1) NULL,
DT_CONFLANGINGTRADSIST DATETIME NULL,
ID_USUACONFLANGINGTRADSIST NUMERIC(10, 0) NULL,
NM_LANGINGCLIETRADSIST NVARCHAR(3000) NULL,
DT_LANGINGCLIETRADSIST DATETIME NULL,
ID_USUALANGINGCLIETRADSIST NUMERIC(10, 0) NULL,
NM_LANGESPTRADSIST NVARCHAR(3000) NULL,
DT_LANGESPTRADSIST DATETIME NULL,
ID_USUALANGESPTRADSIST NUMERIC(10, 0) NULL,
FL_CONFLANGESPTRADSIST NCHAR(1) NULL,
DT_CONFLANGESPTRADSIST DATETIME NULL,
ID_USUACONFLANGESPTRADSIST NUMERIC(10, 0) NULL,
NM_LANGESPCLIETRADSIST NVARCHAR(3000) NULL,
DT_LANGESPCLIETRADSIST DATETIME NULL,
ID_USUALANGESPCLIETRADSIST NUMERIC(10, 0) NULL,
NM_LANGMALATRADSIST NVARCHAR(3000) NULL,
DT_LANGMALATRADSIST DATETIME NULL,
ID_USUALANGMALATRADSIST NUMERIC(10, 0) NULL,
FL_CONFLANGMALATRADSIST NCHAR(1) NULL,
DT_CONFLANGMALATRADSIST DATETIME NULL,
ID_USUACONFLANGMALATRADSIST NUMERIC(10, 0) NULL,
NM_LANGMALACLIETRADSIST NVARCHAR(3000) NULL,
DT_LANGMALACLIETRADSIST DATETIME NULL,
ID_USUALANGMALACLIETRADSIST NUMERIC(10, 0) NULL,
FL_CONFLANG CHAR(1) NULL);
//

CREATE TABLE MONITOR_SERVICOS (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_MONISERV NUMERIC(10, 0) NOT NULL,
NM_MONISERV VARCHAR(100) NOT NULL,
NM_HOSTMONISERV VARCHAR(30) NOT NULL,
NR_PORTMONISERV NUMERIC(10, 0) NOT NULL,
FL_ATIVMONISERV CHAR(1) NOT NULL,
FX_MONISERV CHAR(1) NOT NULL,
PRIMARY KEY (ID_MONISERV));
//

CREATE TABLE EQUIPAMENTO_TURNO_DIARIO (
EMPRESA CHAR(2) NOT NULL,
FILIAL NUMERIC(10, 0) NOT NULL,
ID_DIARTURNEQUI NUMERIC(10, 0) NOT NULL,
ID_EQUI NUMERIC(10, 0) NOT NULL,
DT_DIARTURNEQUI DATETIME NULL,
FX_DIARTURNEQUI CHAR(1) NOT NULL,
FL_STATDIARTURNEQUI CHAR(2) NULL,
FL_TIPOEVENDIARTURNEQUI CHAR(2) DEFAULT ('OP') NOT NULL,
PRIMARY KEY (ID_DIARTURNEQUI));
//

CREATE TABLE MATERIAL_SEQUESTRO_ANEXO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ANEXSEQUMATE NUMERIC(10, 0) NOT NULL,
NM_ANEXSEQUMATE VARCHAR(1000) NULL,
GN_ANEXSEQUMATE VARBINARY NULL,
DT_ANEXSEQUMATE DATETIME NULL,
ID_USUASIST NUMERIC(10, 0) NULL,
ID_SEQUMATE NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_ANEXSEQUMATE));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_CUSTMENS NUMERIC(10, 0) NULL,
ID_VERSSIMUCUSTMENS INTEGER NULL,
NM_SIMUCUSTMENS VARCHAR(80) NULL,
IE_SIMUCUSTMENS VARCHAR(25) NULL,
FX_SIMUCUSTMENS CHAR(1) NULL,
FL_STATSIMUCUSTMENS CHAR(2) DEFAULT ('AB') NULL,
PRIMARY KEY (ID_SIMUCUSTMENS));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_FG (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NULL,
ID_FGSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
QN_PESOFGSIMUCUSTMENS NUMERIC(20, 3) NULL,
QN_CABEFGSIMUCUSTMENS INTEGER NULL,
NR_PESOMEDISIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_FGSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_TOTAAVESIMUCUSTMENS NUMERIC(30, 10) NULL,
FX_FGSIMUCUSTMENS CHAR(1) NULL,
ID_LINHTIPOAVE NUMERIC(10, 0) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
PS_PESOFGSIMUCUSTMENS NUMERIC(20, 3) NULL,
PS_PESOMEDISIMUCUSTMENS NUMERIC(30, 10) NULL,
PRIMARY KEY (ID_FGSIMUCUSTMENS));
//

CREATE TABLE PRODUCAO_PROCES_UNID_EQUIP (
ID_EQUIPUNIDPROCPROD NUMERIC(10, 0) NOT NULL,
ID_UNIDPROCPROD NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
DT_EQUIPUNIDPROCPROD DATETIME NULL,
ID_USUASIST_INCLREGI NUMERIC(10, 0) NOT NULL,
FL_CALCPRODUNIDPROCPROD CHAR(1) DEFAULT ('S') NOT NULL,
FL_CALCTURNUNIDPROCPROD CHAR(1) DEFAULT ('S') NOT NULL,
ID_EQUIRESPNOMIUNIDPROCPROD NUMERIC(9, 0) NULL,
ID_EQUIRESPTURNUNIDPROCPROD NUMERIC(9, 0) NULL,
NR_DESLTEMPUNIDPROCPROD NUMERIC(9, 0) NULL,
DT_TEMPDESLOCAUNIDPROCPROD TIME NULL,
PRIMARY KEY (ID_EQUIPUNIDPROCPROD));
//

CREATE TABLE TMP_REL210_DESTINACAO (
ID_DESTREL210 NUMERIC(10, 0) NOT NULL,
DT_REGIDATAPADR DATETIME NOT NULL,
ID_TIPOAVE NUMERIC(10, 0) NOT NULL,
ID_PROCLINH NUMERIC(10, 0) NOT NULL,
QN_PESOLIQUCONSI_LBS NUMERIC(20, 6) NULL,
QN_PESOLIQUNAOCONS_LBS NUMERIC(20, 6) NULL,
QN_PESOLIQUREGIPROD_LBS NUMERIC(20, 6) NULL,
PRIMARY KEY (ID_DESTREL210));
//

CREATE TABLE PRODUCAO_REGISTRO_SEQU_TEMP (
ID_TEMPSEQUREGIPROD NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_PRODMATEEMBA VARCHAR(4) NULL,
DT_TEMPSEQUREGIPROD DATETIME DEFAULT (getdate()) NULL,
FL_TIPOTEMPSEQUREGIPROD CHAR(1) NULL,
DT_PADRTIPOTEMPSEQUREGIPROD DATETIME NULL,
DT_REGIPRODTIPOTEMPSEQUREGIPROD DATETIME NULL,
DT_VALITIPOTEMPSEQUREGIPROD DATETIME NULL,
NR_LOTERASTTIPOTEMPSEQUREGIPROD VARCHAR(20) NULL,
FL_PROCTIPOTEMPSEQUREGIPROD CHAR(1) DEFAULT ('N') NULL,
QN_PESOLIQUTEMPSEQUREGIPROD NUMERIC(16, 3) NULL,
QN_PESOPADRTEMPSEQUREGIPROD NUMERIC(16, 3) NULL,
PRIMARY KEY (ID_TEMPSEQUREGIPROD));
//

CREATE TABLE REJEITO_LENKE_MOTIVO (
ID_REJELENKMOTI NUMERIC(10, 0) NOT NULL,
ID_MOTIREJELENK NUMERIC(10, 0) NULL,
NM_REJELENKMOTI VARCHAR(100) NULL);
//

CREATE TABLE MATRCOMPMENS (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
PC_COMPONENTE NUMERIC(20, 10) NULL);
//

CREATE TABLE PRODUTO_LINHA (
ID_LINHPROD NUMERIC(10, 0) NOT NULL,
FL_LINHPROD CHAR(2) NOT NULL,
NM_LINHPROD VARCHAR(60) NOT NULL,
FX_LINHPROD CHAR(1) NOT NULL);
//

CREATE TABLE PRODUCAO_TUNEL_CONTROLE_HIST (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_HISTCONTTUNEPROD NUMERIC(10, 0) NOT NULL,
ID_CONTTUNEPROD NUMERIC(10, 0) NOT NULL,
ID_USUASIST_HIST NUMERIC(10, 0) NOT NULL,
DT_HISTCONTTUNEPROD DATETIME NULL,
GN_HISTCONTTUNEPROD VARCHAR(2000) NULL,
PRIMARY KEY (ID_HISTCONTTUNEPROD));
//

CREATE TABLE TMP_REL210_PROD_GERAL (
ID_GERAPRODREL210 NUMERIC(10, 0) NOT NULL,
DT_REGIDATAPADR DATETIME NOT NULL,
ID_GRUPPROD NUMERIC(10, 0) NULL,
FL_TIPODESTGRUPPROD CHAR(2) NOT NULL,
ID_PRODMATEEMBA CHAR(4) NOT NULL,
PESO_LBS_PROD NUMERIC(20, 6) NULL,
PRIMARY KEY (ID_GERAPRODREL210));
//

CREATE TABLE CONFCANAREGIPROD (
ID_CANAL INTEGER NULL,
ID_ALMOXARIFADO INTEGER NULL,
ID_ESTRUNIDABAT INTEGER NULL,
DT_PADRREGIPROD DATETIME NULL,
GN_TIPOIDENCANA VARCHAR(20) NULL,
NR_SEQUCANA INTEGER NULL,
GN_DIREPADRCANA VARCHAR(1000) NULL,
ID_BALANCA INTEGER NULL,
NM_MARCBALACANA VARCHAR(20) NULL,
GN_PORTBALACANA VARCHAR(20) NULL,
NR_TAXABALACANA INTEGER NULL,
NR_BITSBALACANA INTEGER NULL,
GN_PARIBALACANA VARCHAR(20) NULL,
NR_PARABALACANA INTEGER NULL,
GN_FLUXBALACANA VARCHAR(20) NULL,
NR_CHECBALACANA INTEGER NULL,
NM_MARCIMPRCANA VARCHAR(20) NULL,
GN_PORTIMPRCANA VARCHAR(20) NULL,
NR_TAXAIMPRCANA INTEGER NULL,
NR_BITSIMPRCANA INTEGER NULL,
GN_PARIIMPRCANA VARCHAR(20) NULL,
NR_PARAIMPRCANA INTEGER NULL,
GN_FLUXIMPRCANA VARCHAR(20) NULL,
NR_CHECIMPRCANA INTEGER NULL,
NR_DARKIMPRCANA INTEGER NULL,
QN_ETIQCANA INTEGER NULL,
GN_TIPOETIQCANA VARCHAR(20) NULL,
GN_LEITOPTICANA VARCHAR(20) NULL,
QN_TEMPDESCBUFFCANA INTEGER NULL,
QN_PERCRESECANA NUMERIC(16, 8) NULL,
ID_SETOPROD INTEGER NULL,
GN_SUFILEITCANA VARCHAR(20) NULL,
GN_SERILEITCANA VARCHAR(20) NULL,
FL_REGIAUTOCANA CHAR(1) NULL,
ID_TUNEPROD INTEGER NULL,
GN_HOSTTCPBALACANA VARCHAR(500) NULL,
NR_PORTTCPBALACANA INTEGER NULL,
GN_TIPOCLIETCPBALACANA VARCHAR(20) NULL,
GN_HOSTTCPIMPRCANA VARCHAR(500) NULL,
NR_PORTTCPIMPRCANA INTEGER NULL,
GN_TIPOCLIETCPIMPRCANA VARCHAR(20) NULL,
GN_HOSTTCPLEITCANA VARCHAR(500) NULL,
NR_PORTTCPLEITCANA INTEGER NULL,
GN_TIPOCLIETCPLEITCANA VARCHAR(20) NULL,
FL_MODACONFBALACANA CHAR(1) NULL,
DT_ELABREGIPROD DATETIME NULL,
FL_AUTOPESACONTBUFFCANA CHAR(1) DEFAULT ('N') NOT NULL,
ID_CENTCUST INTEGER NULL,
ID_LINHDESTAUTO INTEGER NULL,
NM_MARCIMPRCANA2 VARCHAR(20) NULL,
GN_PORTIMPRCANA2 VARCHAR(20) NULL,
GN_HOSTTCPIMPRCANA2 VARCHAR(500) NULL,
NR_PORTTCPIMPRCANA2 INTEGER NULL,
GN_TIPOCLIETCPIMPRCANA2 VARCHAR(22) NULL,
QN_ETIQCANA2 INTEGER NULL,
GN_TIPOETIQCANA2 VARCHAR(20) NULL,
QN_TEMPDESCBUFFCANA2 INTEGER NULL,
NR_TAXAIMPRCANA2 INTEGER NULL,
NR_BITSIMPRCANA2 INTEGER NULL,
GN_PARIIMPRCANA2 VARCHAR(20) NULL,
NR_PARAIMPRCANA2 INTEGER NULL,
GN_FLUXIMPRCANA2 VARCHAR(20) NULL,
NR_CHECIMPRCANA2 INTEGER NULL,
ID_ALMODESTSAIDTUNE INTEGER NULL,
ID_PROCLINH INTEGER NULL,
NM_IMPRETIQVISU VARCHAR(260) NULL,
NM_IMPRETIQVISU2 VARCHAR(260) NULL,
NR_SEQUSSCCCAIXCANA INTEGER NULL,
NR_SEQUSSCCPALECANA INTEGER NULL,
NR_SEQUSSCCMATECANA INTEGER NULL,
NR_SEQUPALECANA INTEGER NULL,
ID_USUASIST INTEGER NULL,
GN_TIPOLEITPRODCANA VARCHAR(20) NULL);
//

CREATE TABLE ETIQUETA_PALETE_AVULSA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_AVULPALEETIQ NUMERIC(10, 0) NOT NULL,
NR_IDENAVULPALEETIQ VARCHAR(18) NOT NULL,
DT_AVULPALEETIQ DATETIME NOT NULL,
IE_AVULPALEETIQ VARCHAR(25) NULL,
ID_MODEETIQAVULPALEETIQ NUMERIC(10, 0) NULL,
QN_EMBAAVULPALEETIQ INTEGER NOT NULL,
DT_ABERAVULPALEETIQ DATETIME NOT NULL,
DT_FECHAVULPALEETIQ DATETIME NOT NULL,
ID_SSCCAVULPALEETIQ VARCHAR(18) NULL,
DT_PADRAVULPALEETIQ DATETIME NOT NULL,
QN_DIASVALIAVULPALEETIQ INTEGER NULL,
QN_PESOLIQUAVULPALEETIQ NUMERIC(16, 3) NULL,
QN_TARAEMBAAVULPALEETIQ NUMERIC(16, 3) NULL,
QN_PESOBASEAVULPALEETIQ NUMERIC(16, 3) NULL,
QN_PESOSTREAVULPALEETIQ NUMERIC(16, 3) NULL,
QN_PESOCANTAVULPALEETIQ NUMERIC(16, 3) NULL,
QN_PESORACKAVULPALEETIQ NUMERIC(16, 3) NULL,
QN_ALTUAVULPALEETIQ NUMERIC(16, 3) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_EMBAAVULPALEETIQ NUMERIC(10, 0) NULL,
DT_CRIAAVULPALEETIQ DATETIME NULL,
ID_USUASIST_CRIA NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_AVULPALEETIQ));
//

CREATE TABLE ENTRTUNE (
SEQ NUMERIC(10, 0) NULL,
UNITID NUMERIC(10, 0) NULL,
ID VARCHAR(16) NULL,
DATAHORALEITURA DATETIME NULL,
VALORENVIOPLC NUMERIC(10, 0) NULL,
PESOLIDO NUMERIC(17, 3) NULL,
ESTADO CHAR(1) NULL);
//

CREATE TABLE PRODUCAO_PROCESSAMENTO_UNIDADE (
ID_UNIDPROCPROD NUMERIC(10, 0) NOT NULL,
IE_UNIDPROCPROD VARCHAR(25) NULL,
NM_UNIDPROCPROD VARCHAR(60) NOT NULL,
FX_UNIDPROCPROD CHAR(1) DEFAULT ('N') NOT NULL,
FL_TIPOUNIDPROCPROD CHAR(2) NOT NULL,
ID_PROCPROD NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_UNIDPROCPROD));
//

CREATE TABLE CUSTO_MENSAL_SIMULADO_PROD (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_PRODSIMUCUSTMENS NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_SIMUCUSTMENS NUMERIC(10, 0) NULL,
QN_PRODMENS NUMERIC(16, 3) NULL,
QN_PESOLIQUPRODMENS NUMERIC(16, 9) NULL,
FX_PRODSIMUCUSTMENS CHAR(1) NULL,
PC_MATEPRIMFRANG NUMERIC(16, 12) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
QN_TEMPKGPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_DESPKGPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_To_MatePrimPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_DESPPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
FL_TIPOPRODSIMUCUSTMENS CHAR(2) NULL,
VL_UPP_KGPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_UnitAdicPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
QN_UPP_PRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_UPP_PRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
QN_TEMPPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_Un_MatePrimPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
QN_UPP_KGPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_TRANKGPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_TRANSPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
VL_ProdAdicPRODSIMUCUSTMENS NUMERIC(30, 10) NULL,
PRIMARY KEY (ID_PRODSIMUCUSTMENS));
//

CREATE TABLE TERMOMETRO (
ID_TERMOMETRO NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
TS00301 FLOAT NULL,
TT00303 FLOAT NULL,
QN_TEMPERATURA NUMERIC(10, 3) NULL,
ID_CARGA_PEND NUMERIC(10, 0) NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
DT_OCORRENCIA DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL);
//

CREATE TABLE CONTA_CONTABEL (
ID_CONTCONT NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
NM_CONTCONT VARCHAR(100) NULL,
IE_CONTCONT VARCHAR(25) NULL,
FX_CONTCONT CHAR(1) NOT NULL,
FL_TIPOCONTCONT CHAR(2) NULL);
//

CREATE TABLE ENTRADA_PRODUTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ENTRPROD NUMERIC(10, 0) NOT NULL,
IE_ENTRPROD VARCHAR(25) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NOT NULL,
DT_ENTRPROD DATETIME NOT NULL,
DT_ABERENTRPROD DATETIME NOT NULL,
ID_USUASIST_ABERENTRPROD NUMERIC(10, 0) NOT NULL,
DT_FECHENTRPROD DATETIME NULL,
ID_USUASIST_FECHENTRPROD NUMERIC(10, 0) NULL,
DT_ENCEENTRPROD DATETIME NULL,
ID_USUASIST_ENCEENTRPROD NUMERIC(10, 0) NULL,
FL_STATENTRPROD CHAR(2) NOT NULL,
FL_ESPEENTRPROD CHAR(2) NOT NULL,
ID_ETIQFORN NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
QN_PESOVENDENTRPROD NUMERIC(16, 6) NULL,
DT_PADRENTRPROD DATETIME NULL,
PRIMARY KEY (ID_ENTRPROD));
//

CREATE TABLE MATERIAL_REQUISICAO_NOTA_FISC (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_FISCNOTAREQUMATE NUMERIC(10, 0) NOT NULL,
ID_REQUMATE NUMERIC(10, 0) NOT NULL,
DT_FISCNOTAREQUMATE DATETIME NULL,
ID_USUASIST_SOLI NUMERIC(10, 0) NOT NULL,
GN_PARASOLIFISCNOTAREQUMATE VARCHAR(200) NULL,
GN_CNPJSOLIFISCNOTAREQUMATE VARCHAR(25) NULL,
GN_CENTEMISFISCNOTAREQUMATE VARCHAR(200) NULL,
GN_DIVIUNIDFISCNOTAREQUMATE VARCHAR(200) NULL,
GN_CODISAPFISCNOTAREQUMATE VARCHAR(25) NULL,
GN_NOMEDESTFISCNOTAREQUMATE VARCHAR(200) NULL,
GN_ENDEDESTFISCNOTAREQUMATE VARCHAR(200) NULL,
GN_MUNIDESTFISCNOTAREQUMATE VARCHAR(40) NULL,
GN_CNPJDESTFISCNOTAREQUMATE VARCHAR(25) NULL,
GN_ESTADESTFISCNOTAREQUMATE VARCHAR(40) NULL,
GN_TIPOFRETFISCNOTAREQUMATE VARCHAR(3) NULL,
ID_TRANFISCNOTAREQUMATE NUMERIC(10, 0) NULL,
GN_TRANFISCNOTAREQUMATE VARCHAR(200) NULL,
VL_COTAFRETFISCNOTAREQUMATE NUMERIC(16, 3) NULL,
GN_OBSETRANFISCNOTAREQUMATE VARCHAR(2000) NULL,
VL_ICMSDOCUFISCNOTAREQUMATE NUMERIC(16, 3) NULL,
GN_NUMEPEDIFISCNOTAREQUMATE VARCHAR(25) NULL,
VL_IPIDOCUFISCNOTAREQUMATE NUMERIC(16, 3) NULL,
GN_PLACTRANFISCNOTAREQUMATE VARCHAR(10) NULL,
GN_OBSEDOCUFISCNOTAREQUMATE VARCHAR(2000) NULL,
GN_NATUOPERFISCNOTAREQUMATE VARCHAR(1000) NULL,
GN_ICMSISENFISCNOTAREQUMATE VARCHAR(2000) NULL,
GN_FRETDOCUFISCNOTAREQUMATE VARCHAR(3) NULL,
GN_TRANDOCUFISCNOTAREQUMATE VARCHAR(200) NULL,
IE_TRANFISCNOTAREQUMATE VARCHAR(25) NULL,
IE_TRANDOCUFISCNOTAREQUMATE VARCHAR(25) NULL,
PRIMARY KEY (ID_FISCNOTAREQUMATE));
//

CREATE TABLE SYNCH_LOG (
GN_DESCERROSYNCLOG VARCHAR(1000) NOT NULL,
GN_NOMEMETOSYNCLOG VARCHAR(100) NOT NULL,
GN_NOMEEXESYNCLOG VARCHAR(100) NOT NULL,
GN_NOMEMAQUSYNCLOGVAR VARCHAR(100) NOT NULL,
DT_ERROSYNCLOG DATETIME DEFAULT (getdate()) NOT NULL);
//

CREATE TABLE PROCESSAMENTO_ERRO (
ID_ERROPROC NUMERIC(10, 0) NOT NULL,
NM_TABEERROPROC VARCHAR(100) NULL,
NM_CHAVERROPROC VARCHAR(100) NULL,
NM_VALOERROPROC VARCHAR(100) NULL,
NM_ERROPROC VARCHAR(4000) NULL,
PRIMARY KEY (ID_ERROPROC));
//

CREATE TABLE AJUSTE_MALTA (
ID_REGIPROD NUMERIC(10, 0) NOT NULL);
//

CREATE TABLE PRODUCAO_REGISTRO_REJEITO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_REGIPRODREJE NUMERIC(10, 0) NOT NULL,
IE_REGIPRODREJE VARCHAR(25) NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
DT_REGIPRODREJE DATETIME NOT NULL,
DT_PADRREGIPRODREJE DATETIME NOT NULL,
DT_INTEREGIPRODREJE DATETIME NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_REJEMOTI NUMERIC(10, 0) NULL,
ID_IDENREGIPRODREJE VARCHAR(20) NULL,
QN_PESOBALAREGIPRODREJE NUMERIC(10, 6) NULL,
QN_TARAREGIPRODREJE NUMERIC(10, 6) NULL,
QN_TOLEMINIREGIPRODREJE NUMERIC(6, 3) NULL,
QN_TOLEMAXIREGIPRODREJE NUMERIC(6, 3) NULL,
QN_PESONOMIREGIPRODREJE NUMERIC(10, 6) NULL,
PRIMARY KEY (ID_REGIPRODREJE));
//

CREATE TABLE ESTOQUE_MOVIMENTACAO_TIPO (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_TIPOMOVIESTO NUMERIC(10, 0) NOT NULL,
NM_TIPOMOVIESTO VARCHAR(40) NULL,
FX_TIPOMOVIESTO CHAR(1) NULL,
IE_TIPOMOVIESTO VARCHAR(25) NULL,
FL_TIPOOPERTIPOMOVIESTO CHAR(2) NULL,
FL_INTETIPOMOVIESTO CHAR(1) NULL,
FL_OPERTIPOMOVIESTO CHAR(1) NULL,
fl_intetipomoviesto1 CHAR(1) NULL,
PRIMARY KEY (ID_TIPOMOVIESTO));
//

CREATE TABLE PRODUCAO_REGISTRO_REPESAG (
ID_REPEREGIPROD NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
ID_USUASIST NUMERIC(10, 0) NOT NULL,
DT_INICREPEREGIPROD DATETIME NOT NULL,
DT_FINAREPEREGIPROD DATETIME NULL,
FX_REPEREGIPROD CHAR(1) NOT NULL,
ID_ALMODESTREPEREGIPROD NUMERIC(10, 0) NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
PRIMARY KEY (ID_REPEREGIPROD));
//

CREATE TABLE EQUIPAMENTO_RESET_HIST_REQU (
ID_EQUIRESEHISTREQU NUMERIC(10, 0) NOT NULL,
ID_EQUIRESE NUMERIC(10, 0) NOT NULL,
DT_EQUIRESEHISTREQU DATETIME NOT NULL,
DT_SOLIEQUIRESEHISTREQU DATETIME NOT NULL,
PRIMARY KEY (ID_EQUIRESEHISTREQU));
//

CREATE TABLE CONTINGENCIA_DATA_CADASTRO (
DT_ULTIALTECADACONT DATETIME NOT NULL);
//

CREATE TABLE PICKING_ALOCACAO (
ID_PEDIVEND NUMERIC(10, 0) NOT NULL,
ID_PALEEXPE NUMERIC(10, 0) NOT NULL,
FL_TIPOALOCPICK CHAR(1) NOT NULL,
PRIMARY KEY (ID_PEDIVEND, ID_PALEEXPE));
//

CREATE TABLE PRODUCAO_REGISTRO_LOTE_IN_BALA (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_BALAINTELOTEREGIPROD NUMERIC(10, 0) NOT NULL,
ID_INTELOTEREGIPROD NUMERIC(10, 0) NOT NULL,
NR_BALANCA NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_BALAINTELOTEREGIPROD));
//

CREATE TABLE PRODUCAO_INVENTARIO_PALETE (
EMPRESA VARCHAR(2) NULL,
FILIAL INTEGER NULL,
ID_PALEINVEPROD NUMERIC(10, 0) NOT NULL,
ID_INVEPROD NUMERIC(10, 0) NULL,
ID_PALEEXPE NUMERIC(10, 0) NULL,
DT_REGIPALEINVEPROD DATETIME NULL,
FX_PALEINVEPROD CHAR(1) NULL,
ID_USUASISTPALEINVEPROD NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_PALEINVEPROD));
//

CREATE TABLE VALOR_PRODUTO_MENSAL (
ID_MENSPRODVALO NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
GN_PERIMENSPRODVALO VARCHAR(7) NULL,
QN_PESOMENSPRODVALO NUMERIC(30, 10) NULL,
VL_MENSPRODVALO NUMERIC(30, 10) NULL,
PC_MENSPRODVALO NUMERIC(30, 10) NULL,
PRIMARY KEY (ID_MENSPRODVALO));
//

CREATE TABLE EXPEDICAO_PALETE_AUDI_PALEIDEN (
ID_PALEEXPEAUDI NUMERIC(10, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
FL_INCOPALEEXPEAUDIIDEN CHAR(1) NOT NULL);
//

CREATE TABLE CAIXAS_PALETES_RUBY (
ID_IDENREGIPROD VARCHAR(50) NULL,
NR_IDENPALEEXPE VARCHAR(50) NULL,
IE_PALEEXPE VARCHAR(50) NULL,
FL_PROCESSADO CHAR(1) DEFAULT ('N') NULL);
//

CREATE TABLE MATERIAL_EMBALAGEM_FAIXA_PESO (
ID_PESOFAIXMATEEMBA NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_PESOFAIXMATEEMBA NUMERIC(16, 3) NULL,
PRIMARY KEY (ID_PESOFAIXMATEEMBA));
//

CREATE TABLE MATERIAL_EMBALAGEM_VALI_ITEM (
EMPRESA CHAR(2) NULL,
FILIAL NUMERIC(10, 0) NULL,
ID_CHAVE NUMERIC(10, 0) NULL,
ID_VALIMATEEMBA NUMERIC(10, 0) NULL,
FL_CONTROLA CHAR(1) NULL,
DIAS INTEGER NULL);
//

CREATE TABLE LOTE_COMPOSTO_INTEGRADO (
NR_LOTECOMP VARCHAR(40) NULL,
FL_STATLOTEINTEG CHAR(1) NULL);
//

CREATE TABLE PROC_MIGR_CHECKLIST (
ID_FORMQUALMETA NUMERIC(10, 0) NOT NULL,
ID_USUASIST NUMERIC(10, 0) NOT NULL,
DT_CHECLISTMIGRPROC DATETIME NOT NULL);
//

CREATE TABLE SISTEMA_REPLICACAO_CONTROLE (
ROWID VARCHAR(36) NOT NULL,
NM_TABECONTREPLSIST VARCHAR(50) NOT NULL,
FL_DELEREGICONTREPLSIST CHAR(1) DEFAULT ('N') NOT NULL,
LASTMODDATE DATETIME DEFAULT (getdate()) NOT NULL,
PRIMARY KEY (ROWID));
//

CREATE TABLE TANQUE (
ID_TANQUE NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
QN_VAZAO_INSTANTANEA NUMERIC(10, 3) NULL,
QN_VAZAO_ACUMULADA NUMERIC(10, 3) NULL,
QN_TEMPERATURA NUMERIC(10, 3) NULL,
QN_TEMPERATURA_SETPOINT NUMERIC(10, 3) NULL,
PC_ABERTURA_VALVULA NUMERIC(10, 4) NULL,
QN_TEMPERATURA_RENOVACAO NUMERIC(10, 3) NULL,
QN_TEMPO NUMERIC(10, 3) NULL,
NR_CARGA VARCHAR(25) NULL,
FL_STATUS CHAR(1) NULL,
QN_VAZAO_SETPOINT NUMERIC(10, 3) NULL,
FIT00507_AF FLOAT NULL,
FIT00508_AF FLOAT NULL,
PC_TEMPERATURA_RENOVACAO NUMERIC(10, 4) NULL,
DT_REGISTRO DATETIME NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
DT_OCORRENCIA DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL);
//

CREATE TABLE GRANJA_PROPRIEDADE_EQUI_PAGA (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_EQUIPAGAPROPGRAN NUMERIC(10, 0) NOT NULL,
ID_PROPGRAN NUMERIC(10, 0) NOT NULL,
ID_EQUIAPAN NUMERIC(10, 0) NOT NULL,
VL_EQUIPAGAPROPGRAN NUMERIC(16, 4) NULL,
FX_EQUIPAGAPROPGRAN CHAR(1) NOT NULL,
PRIMARY KEY (ID_EQUIPAGAPROPGRAN));
//

CREATE TABLE PRODUCAO_PROG_SIMU_ITEM_TIPO (
ID_TIPOITEMSIMUPROGPROD NUMERIC(10, 0) NOT NULL,
IE_TIPOITEMSIMUPROGPROD VARCHAR(5) NOT NULL,
NR_DIAINICTIPOITEMSIMUPROGPROD NUMERIC(10, 0) NOT NULL,
NR_DIAFINATIPOITEMSIMUPROGPROD NUMERIC(10, 0) NOT NULL,
FL_REPLTIPOITEMSIMUPROGPROD CHAR(1) NOT NULL,
FL_USAPESOTIPOITEMSIMUPROGPROD CHAR(1) NULL,
SG_UNIDMEDITIPOITEMSIMUPGPD VARCHAR(3) NULL,
SG_UNIDMEDIINTETIPOITEMSIPGPD VARCHAR(3) NULL,
PRIMARY KEY (ID_TIPOITEMSIMUPROGPROD));
//

CREATE TABLE PRE_INIC (
ID_ESTOREGIPROD NUMERIC(10, 0) NOT NULL,
DT_ESTOREGIPROD DATETIME NOT NULL,
ID_PRODMATEEMBA VARCHAR(4) NOT NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NOT NULL,
QN_CAIXINICFISIESTOREGIPROD NUMERIC(10, 0) NOT NULL,
QN_PSVDINICFISIESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PSLQINICFISIESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_TARAINICFISIESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_CAIXENTRFISIESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDENTRFISIESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQENTRFISIESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARAENTRFISIESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXSAIDFISIESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDSAIDFISIESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQSAIDFISIESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARASAIDFISIESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXINICCONTESTOREGIPROD NUMERIC(10, 0) NOT NULL,
QN_PSVDINICCONTESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PSLQINICCONTESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_TARAINICCONTESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_CAIXENTRCONTESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDENTRCONTESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQENTRCONTESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARAENTRCONTESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXSAIDCONTESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDSAIDCONTESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQSAIDCONTESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARASAIDCONTESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXINICAJUSESTOREGIPROD NUMERIC(10, 0) NOT NULL,
QN_PSVDINICAJUSESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_PSLQINICAJUSESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_TARAINICAJUSESTOREGIPROD NUMERIC(10, 3) NOT NULL,
QN_CAIXENTRAJUSESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDENTRAJUSESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQENTRAJUSESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARAENTRAJUSESTOREGIPROD NUMERIC(10, 3) NULL,
QN_CAIXSAIDAJUSESTOREGIPROD NUMERIC(10, 0) NULL,
QN_PSVDSAIDAJUSESTOREGIPROD NUMERIC(10, 3) NULL,
QN_PSLQSAIDAJUSESTOREGIPROD NUMERIC(10, 3) NULL,
QN_TARASAIDAJUSESTOREGIPROD NUMERIC(10, 3) NULL,
FX_ESTOREGIPROD CHAR(1) NOT NULL,
QN_UNIDINICFISIESTOREGIPROD NUMERIC(10, 0) NULL,
QN_UNIDENTRFISIESTOREGIPROD NUMERIC(10, 0) NULL,
QN_UNIDSAIDFISIESTOREGIPROD NUMERIC(10, 0) NULL,
QN_UNEMINICFISIESTOREGIPROD NUMERIC(10, 0) NULL,
QN_UNEMENTRFISIESTOREGIPROD NUMERIC(10, 0) NULL,
QN_UNEMSAIDFISIESTOREGIPROD NUMERIC(10, 0) NULL);
//

CREATE TABLE USUARIO_EXCECAO_AD (
ID_USUAEXCEAD NUMERIC(10, 0) NOT NULL,
ID_USUARIO INTEGER NOT NULL,
PRIMARY KEY (ID_USUAEXCEAD));
//

CREATE TABLE MATERIAL_ENTRADA_CARGA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_CARGENTRMATE NUMERIC(10, 0) NOT NULL,
IE_CARGENTRMATE VARCHAR(25) NULL,
DT_CARGENTRMATE DATETIME NOT NULL,
ID_VEICTRAN NUMERIC(10, 0) NULL,
ID_TRANMOTOTRAN NUMERIC(10, 0) NULL,
FL_TIPOCARGENTRMATE CHAR(2) NOT NULL,
FL_CARGENTRMATE CHAR(2) NOT NULL,
NR_CONTCARGENTRMATE CHAR(2) NOT NULL,
FL_LIBEQUALCARGENTRMATE CHAR(2) NULL,
FL_LIBELABOCARGENTRMATE CHAR(2) NULL,
ID_USUASIST_CRIACARG NUMERIC(10, 0) NOT NULL,
DT_CRIACARGENTRMATE DATETIME NOT NULL,
DT_ABERCONTCARGENTRMATE DATETIME NULL,
ID_USUASIST_ABERCONTCARG NUMERIC(10, 0) NULL,
DT_FECHCONTCARGENTRMATE DATETIME NULL,
ID_USUASIST_FECHCONTCARG NUMERIC(10, 0) NULL,
DT_FECHCARGENTRMATE DATETIME NULL,
ID_USUASIST_FECHCARG NUMERIC(10, 0) NULL,
FL_SINCCARGENTRMATE CHAR(2) NULL,
DT_SINCCARGENTRMATE DATETIME NULL,
NR_TENTSINCCARGENTRMATE INTEGER NULL,
GN_PLACVEICCARGENTRMATE VARCHAR(25) NULL,
PRIMARY KEY (ID_CARGENTRMATE));
//

CREATE TABLE ETIQUETA_MATERIAL_AVULSA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_AVULMATEETIQ NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
IE_AVULMATEETIQ VARCHAR(25) NULL,
ID_MODEETIQAVULMATEETIQ NUMERIC(10, 0) NULL,
DT_AVULMATEETIQ DATETIME NOT NULL,
GN_LOTEAVULMATEETIQ VARCHAR(40) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
ID_SSCCAVULMATEETIQ VARCHAR(18) NULL,
DT_CRIAAVULMATEETIQ DATETIME NULL,
ID_USUASIST_CRIA NUMERIC(10, 0) NULL,
QN_MATEAVULMATEETIQ NUMERIC(16, 3) NULL,
DT_PRODAVULMATEETIQ DATETIME NULL,
DT_VALIAVULMATEETIQ DATETIME NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_AVULMATEETIQ));
//

CREATE TABLE CHECKLIST_SINCRONISMO_LOG (
ID_LOGSINCCHEC NUMERIC(10, 0) NOT NULL,
ID_SINCCONFCHEC NUMERIC(10, 0) NOT NULL,
ID_LOGSINCCHECCODICHAV NUMERIC(10, 0) NULL,
ID_LOGSINCCHECCODIREFE NUMERIC(10, 0) NULL,
DT_LOGSINCCHEC DATETIME NOT NULL,
GN_MENSLOGSINCCHEC VARCHAR NOT NULL,
PRIMARY KEY (ID_LOGSINCCHEC));
//

CREATE TABLE PRODUCAO_BALANCA_PRODUTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_BALAPROD NUMERIC(10, 0) NOT NULL,
ID_BALANCA NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
FX_BALAPROD CHAR(1) NOT NULL,
PRIMARY KEY (ID_BALAPROD));
//

CREATE TABLE TMP_REL210 (
ID_REL210 NUMERIC(10, 0) NOT NULL,
DT_REGIDATAPADR DATETIME NULL,
FL_TABEREL210 CHAR(2) NULL,
PRIMARY KEY (ID_REL210));
//

CREATE TABLE CADASTRO_UNIDADE_MEDIDA (
UNIDADE_MEDIDA VARCHAR(50) NULL);
//

CREATE TABLE DETECTOR_METAL (
ID_DETECTOR_METAL NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
FL_STATUS INTEGER NULL,
FL_FALHA INTEGER NULL,
QN_TOTAL INTEGER NULL,
DT_REGISTRO DATETIME NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
DT_OCORRENCIA DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL);
//

CREATE TABLE REGISTRO_OCORRENCIA (
ID_OCORREGI NUMERIC(10, 0) NOT NULL,
ID_OCORMOTI NUMERIC(10, 0) NOT NULL,
ID_OCORTIPO NUMERIC(10, 0) NOT NULL,
DT_OCORREGI DATETIME NOT NULL,
GN_HORAOCORREGI CHAR(8) NULL,
ID_USUASIST_OCORREGI NUMERIC(10, 0) NOT NULL,
GN_OCORREGI VARCHAR NULL,
PRIMARY KEY (ID_OCORREGI));
//

CREATE TABLE DataIntegrationMiddleware (
Company CHAR(2) NOT NULL,
Branch INTEGER NOT NULL,
MiddlewareID NUMERIC(10, 0) NOT NULL,
InterfaceID NUMERIC(10, 0) NOT NULL,
ServiceActive CHAR(1) NOT NULL,
ServiceRunning CHAR(1) NULL,
ServiceError CHAR(1) NULL,
LastProcessing DATETIME NULL,
NextProcessing DATETIME NULL,
StartProcessing DATETIME NULL,
EndProcessing DATETIME NULL,
RepeatEvery INTEGER NULL,
ExecuteTime DATETIME NULL,
ProcessingDays CHAR(14) NULL,
CreationUser NUMERIC(10, 0) NULL,
CreationDate DATETIME NULL,
EmailActive CHAR(1) NOT NULL,
EmailRecipients VARCHAR(2000) NULL,
EmailSubject VARCHAR(2000) NULL,
EmailMessage NVARCHAR(1) NULL,
EmailProfile NUMERIC(10, 0) NULL,
EmailPreviousErrorsActive CHAR(1) NOT NULL,
DblinkDatabase VARCHAR(200) NULL,
LocationFiles VARCHAR(200) NULL,
LocationFilesUserName VARCHAR(40) NULL,
LocationFilesPassword VARCHAR(80) NULL,
ConnectionHostName VARCHAR(250) NULL,
ConnectionDatabase VARCHAR(40) NULL,
ConnectionUserName VARCHAR(40) NULL,
ConnectionPassword VARCHAR(80) NULL,
ConnectionPort VARCHAR(4) NULL,
ConnectionCharacterSet VARCHAR(25) NULL,
ConnectionHostName2 VARCHAR(250) NULL,
ConnectionDatabase2 VARCHAR(40) NULL,
ConnectionUserName2 VARCHAR(40) NULL,
ConnectionPassword2 VARCHAR(80) NULL,
ConnectionPort2 VARCHAR(4) NULL,
ConnectionCharacterSet2 VARCHAR(25) NULL,
ProductionWarehouse NUMERIC(10, 0) NULL,
ProductionStructure NUMERIC(10, 0) NULL,
ProductionWeigher NUMERIC(10, 0) NULL,
ProductionSequence NUMERIC(10, 0) NULL,
LooseUnitsWarehouse NUMERIC(10, 0) NULL,
UserID NUMERIC(10, 0) NULL,
TraceabilityLineID VARCHAR(40) NULL,
TraceabilityChillerLineID VARCHAR(40) NULL,
TraceabilityLastID NUMERIC(10, 0) NULL,
PRIMARY KEY (MiddlewareID));
//

CREATE TABLE CHECKLIST_CONF_SINC_ITEM (
ID_ITEMSINCCONFCHEC NUMERIC(10, 0) NOT NULL,
ID_SINCCONFCHEC NUMERIC(10, 0) NOT NULL,
ID_FORMQUALMETAITEM NUMERIC(10, 0) NOT NULL,
NM_COLUDADOITEMSINCCONFCHEC VARCHAR(100) NOT NULL,
NM_COLUDADOAUXITEMSINCCONFCHEC VARCHAR(100) NULL,
PRIMARY KEY (ID_ITEMSINCCONFCHEC));
//

CREATE TABLE ESTOQUE_FECHAMENTO_PARAMETRO (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_PARAFECHESTO NUMERIC(10, 0) NULL,
GN_CODIEXTETIPOPARAFECHESTO CHAR(2) NULL,
FL_ATIVPARAFECHESTO CHAR(1) NULL,
FX_TIPOMFECHESTO CHAR(1) NULL);
//

CREATE TABLE SISTEMA_HINTS (
ID_SISTHINT NUMERIC(10, 0) NOT NULL,
NM_TAGSIST VARCHAR(10) NULL,
NM_QUERY VARCHAR(20) NULL,
NM_HINT VARCHAR(4000) NULL,
EMPRESA VARCHAR(2) NOT NULL,
FILIAL NUMERIC(5, 0) NOT NULL,
PRIMARY KEY (ID_SISTHINT));
//

CREATE TABLE EXPEDICAO_CORRECAO_FECH (
ID_CARGEXPE NUMERIC(10, 0) NULL,
GN_SCRIPT VARCHAR(4000) NULL);
//

CREATE TABLE SISTEMA_ATUALIZACAO_CAMPO (
ID_CAMPATUASIST NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_SISTLOOKTEMPGALP NUMERIC(10, 0) NULL,
ID_SISTLOOKUMIDGALP NUMERIC(10, 0) NULL,
ID_SISTLOOKTEMPEXTE NUMERIC(10, 0) NULL,
ID_SISTLOOKUMIDEXTE NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_CAMPATUASIST));
//

CREATE TABLE PRODUCAO_GRUPO_EXCECAO (
EMPRESA VARCHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_EXCEGRUPPROD NUMERIC(10, 0) NOT NULL,
ID_GRUPPROD NUMERIC(10, 0) NOT NULL,
ID_PROCLINH NUMERIC(10, 0) NOT NULL,
ID_DEFIMATEEMBA NUMERIC(10, 0) NOT NULL,
FX_EXCEGRUPPROD CHAR(1) NOT NULL,
PRIMARY KEY (ID_EXCEGRUPPROD));
//

CREATE TABLE INTERFACE_AGENDAMENTO_DETALHE (
ID_DETAAGENINTE NUMERIC(10, 0) NOT NULL,
ID_AGENINTE NUMERIC(10, 0) NOT NULL,
DT_DETAAGENINTE DATETIME NOT NULL,
DT_CRIADETAAGENINTE DATETIME NOT NULL,
ID_USUASIST_CRIACAO NUMERIC(10, 0) NOT NULL,
DT_EXECDETAAGENINTE DATETIME NULL,
FL_TIPODETAAGENINTE CHAR(1) NULL,
DT_HORAINICDETAAGENINTE DATETIME NULL,
DT_HORAFINADETAAGENINTE DATETIME NULL,
FL_ATIVDETAAGENINTE CHAR(1) NULL,
PRIMARY KEY (ID_DETAAGENINTE));
//

CREATE TABLE PESAGEM_REGISTRO_SAIDA_REJEIT (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_REJEREGIPESASAID NUMERIC(10, 0) NOT NULL,
ID_REGIPESASAID NUMERIC(10, 0) NOT NULL,
ID_USUASIST NUMERIC(10, 0) NOT NULL,
DT_REJEREGIPESASAID DATETIME NOT NULL,
NR_PESAREJEREGIPESASAID INTEGER NOT NULL,
QN_PESOREJEREGIPESASAID NUMERIC(16, 3) NOT NULL,
FL_PESOMANUREJEREGIPESASAID CHAR(1) NOT NULL,
QN_DIFEPESOREJEREGIPESASAID NUMERIC(16, 3) NOT NULL,
FL_TIPOTOLEREJEREGIPESASAID CHAR(1) NOT NULL,
QN_TOLEMAXIREJEREGIPESASAID NUMERIC(16, 3) NOT NULL,
QN_TOLEMINIREJEREGIPESASAID NUMERIC(16, 3) NOT NULL,
PC_TOLEMAXIREJEREGIPESASAID NUMERIC(6, 3) NOT NULL,
PC_TOLEMINIREJEREGIPESASAID NUMERIC(6, 3) NOT NULL,
QN_MAXIPERMREJEREGIPESASAID NUMERIC(16, 3) NOT NULL,
QN_MINIPERMREJEREGIPESASAID NUMERIC(16, 3) NOT NULL,
FX_REJEREGIPESASAID CHAR(1) NOT NULL,
GN_OBSEREJEREGIPESASAID VARCHAR(400) NULL,
PRIMARY KEY (ID_REJEREGIPESASAID));
//

CREATE TABLE MatrizComponentes_validacao (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA CHAR(4) NULL,
QN_COMPONENTE NUMERIC(20, 10) NULL,
VL_COMPONENTE NUMERIC(20, 10) NULL,
PC_COMPONENTE NUMERIC(20, 10) NULL);
//

CREATE TABLE Turno (
Data DATETIME NULL,
Turno VARCHAR(22) NULL,
DataInicio DATETIME NULL,
DataFinal DATETIME NULL,
DataNominalInicio DATETIME NULL,
DataNominalFinal DATETIME NULL,
Nr_Turno INTEGER NULL);
//

CREATE TABLE EXPEDICAO_PALETE_AUDI_LEITURA (
ID_PALEEXPEAUDI NUMERIC(10, 0) NOT NULL,
NR_IDENPALEEXPEAUDILEIT VARCHAR(20) NOT NULL,
PRIMARY KEY (ID_PALEEXPEAUDI, NR_IDENPALEEXPEAUDILEIT));
//

CREATE TABLE MATEMOVI (
ID_MOVIMATE NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
DT_MOVIMATE DATETIME NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NOT NULL,
ID_TIPOMOVIMATE NUMERIC(10, 0) NOT NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
FL_TIPOMOVIMATE CHAR(2) NOT NULL,
FL_OPERMOVIMATE CHAR(1) NOT NULL,
ID_OPERMOVIMATE NUMERIC(10, 0) NOT NULL,
QN_MOVIMATE NUMERIC(16, 6) NOT NULL,
VL_MOVIMATE NUMERIC(15, 4) NULL,
DT_BASEMOVIMATE DATETIME NOT NULL,
NR_LOTEFORNMOVIMATE VARCHAR(50) NULL,
NR_LOTEINTEMOVIMATE VARCHAR(50) NULL,
NR_CODEBARRMOVIMATE VARCHAR(30) NULL,
ID_CENTCUST NUMERIC(10, 0) NULL,
FL_SINCERPMOVIMATE CHAR(1) NULL,
ID_FORNECEDOR_LOTE NUMERIC(10, 0) NULL,
FL_PROCLANCMOVIMATE CHAR(1) NULL,
ID_CCMATEFECHESTO NUMERIC(10, 0) NULL);
//

CREATE TABLE PRODUCAO_REGISTRO_ID_CONSUMO_INTERFACE (
ID_INTECONSREGIPROD NUMERIC(10, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
ID_ESTRMATEEMBAREGIPROD INTEGER NULL,
FL_TIPOINTECONSREGIPROD CHAR(1) NULL,
FL_SINCERPINTECONSREGIPROD CHAR(1) NULL,
DT_SINCERPINTECONSREGIPROD DATETIME NULL,
FL_CONSGERAINTECONSREGIPROD CHAR(1) NULL,
NR_TENTSINCERPINTECONSREGIPROD INTEGER NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_EXECINTECONSREGIPROD NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_INTECONSREGIPROD));
//

CREATE TABLE PRODUCAO_CORTE_CONTABIL (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_CONTCORTPROD NUMERIC(10, 0) NOT NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NOT NULL,
DT_CONTCORTPROD DATETIME NOT NULL,
DT_PROXCONTCORTPROD DATETIME NOT NULL,
FX_CONTCORTPROD CHAR(1) NOT NULL,
FL_ATIVCONTCORTPROD CHAR(1) DEFAULT ('S') NOT NULL,
PRIMARY KEY (ID_CONTCORTPROD));
//

CREATE TABLE CHECKLIST_AGENDAMENTO_LOG (
ID_LOGAGENCHEC NUMERIC(10, 0) NOT NULL,
ID_FORMQUALMETAAGEN NUMERIC(10, 0) NOT NULL,
DT_LOGAGENCHEC DATETIME NOT NULL,
GN_MENSLOGAGENCHEC VARCHAR NOT NULL,
PRIMARY KEY (ID_LOGAGENCHEC));
//

CREATE TABLE RECIPIENTE_MONTAGEM (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_MONTRECI NUMERIC(10, 0) NOT NULL,
ID_RECIPIENTE NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
DT_MONTRECI DATETIME NOT NULL,
DT_REGIMONTRECI DATETIME NOT NULL,
NR_LOTEMONTRECI VARCHAR(25) NOT NULL,
QN_UNIDMONTRECI NUMERIC(10, 0) NOT NULL,
QN_PESOMONTRECI NUMERIC(16, 4) NOT NULL,
FL_STATMONTRECI CHAR(2) NOT NULL,
FX_MONTRECI CHAR(1) NOT NULL,
PRIMARY KEY (ID_MONTRECI));
//

CREATE TABLE INTERFACE_LOTE_ATIVO (
IE_FAZEENTRANIMINTE VARCHAR(25) NOT NULL,
IE_LOTEENTRANIMINTE VARCHAR(25) NOT NULL,
IE_GALPENTRANIMINTE VARCHAR(25) NOT NULL);
//

CREATE TABLE PROGRAMACAO_ALTERACAO_TURNO (
ID_PROGALTETURN NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_UNIDABAT NUMERIC(10, 0) NOT NULL,
DT_PROGALTETURN DATETIME NOT NULL,
FL_TIPOEVENPROGALTETURN CHAR(2) NOT NULL,
GN_DESCPROGALTETURN VARCHAR(1000) NULL,
PRIMARY KEY (ID_PROGALTETURN));
//

CREATE TABLE DISTRIBUIDOR (
EMPRESA VARCHAR(2) NULL,
FILIAL INTEGER NULL,
ID_DISTRIBUIDOR NUMERIC(10, 0) NOT NULL,
IE_DISTRIBUIDOR VARCHAR(25) NULL,
NM_DISTRIBUIDOR VARCHAR(40) NOT NULL,
FX_DISTRIBUIDOR CHAR(1) NULL,
FL_ATIVDIST CHAR(1) NULL,
PRIMARY KEY (ID_DISTRIBUIDOR));
//

CREATE TABLE EXPEDICAO_CARGA_TRANSF_LOG (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_CARGEXPE NUMERIC(10, 0) NULL,
FL_STATCARGEXPE CHAR(2) NULL,
ID_ALMOXARIFADO_ORIG NUMERIC(10, 0) NULL,
ID_ALMOXARIFADO_TRANSF NUMERIC(10, 0) NULL,
FL_TIPOLIBECARGEXPE CHAR(2) NULL,
FL_PADRTRANCARGEXPE CHAR(1) NULL,
DT_LOG DATETIME NULL,
GN_MENS VARCHAR(2000) NULL);
//

CREATE TABLE EQUIPAMENTO_TURNO_DIARIO_MANU (
ID_MANUDIARTURNEQUI NUMERIC(10, 0) NOT NULL,
DT_INICMANUTURN DATETIME NULL,
DT_FINAMANUTURN DATETIME NULL,
GN_SEQUMANUDIARTURNEQUI VARCHAR(20) NULL,
DT_HORAINICMANUDIARTURNEQUI DATETIME NULL,
DT_HORAFINAMANUDIARTURNEQUI DATETIME NULL,
DT_NOMIINICMANUDIARTURNEQUI DATETIME NULL,
DT_NOMIFINAMANUDIARTURNEQUI DATETIME NULL,
FL_INIDIAANTEMANUDIARTURNEQUI CHAR(1) NULL,
DT_INICREALMANUDIARTURNEQUI DATETIME NULL,
DT_TERMREALMANUDIARTURNEQUI DATETIME NULL,
DT_TEMPEXTEMANUDIARTURNEQUI DATETIME NULL,
QN_TEMPMANUTURN INTEGER NULL,
ID_USUASIST NUMERIC(10, 0) NULL,
DT_EXTEINICMANUDIARTURNEQUI DATETIME NULL,
DT_EXTEFINAMANUDIARTURNEQUI DATETIME NULL,
DT_HORAANTEMANUDIARTURNEQUI DATETIME NULL,
PRIMARY KEY (ID_MANUDIARTURNEQUI));
//

CREATE TABLE FORMULARIO_QUALIDADE_LOG (
ID_FORM_QUAL_LOG NUMERIC(10, 0) NOT NULL,
ID_FORMQUAL NUMERIC(10, 0) NOT NULL,
FL_STATFORMQUAL CHAR(2) NOT NULL,
ID_USUASIST_CRIAFORMQUAL NUMERIC(10, 0) NOT NULL,
DT_CRIAFORMQUAL DATETIME NOT NULL,
ID_USUASIST_ALTEFORMQUAL NUMERIC(10, 0) NOT NULL,
DT_ULTIALTEFORMQUAL DATETIME NOT NULL,
ID_USUA_SOBRALTEFORMQUAL NUMERIC(10, 0) NOT NULL,
DT_SOBRULTIALTEFORMQUAL DATETIME NOT NULL,
PRIMARY KEY (ID_FORM_QUAL_LOG));
//

CREATE TABLE PRODUCAO_REGISTRO_TOTAL_DETA (
ID_TOTAREGIPRODDETA NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
DT_TOTAREGIPRODDETA DATETIME NULL,
ID_MATEEMBA NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA VARCHAR(4) NULL,
DT_PADRREGIPROD DATETIME NULL,
ID_ESTRMATEEMBAFILI NUMERIC(10, 0) NULL,
NR_SEQUTURNREGIPROD NUMERIC(10, 0) NULL,
NR_LOTE VARCHAR(25) NULL,
ID_ETIQUETA NUMERIC(10, 0) NULL,
GN_TAGREGIPROD VARCHAR(50) NULL,
QN_PESOTOTAREGIPRODDETA NUMERIC(10, 3) NULL,
QN_TOTAREGIPRODDETA NUMERIC(10, 0) NULL,
QN_PALEEXPE INTEGER NULL,
DT_PROCREGIPRODTOTADETA DATETIME NULL,
DT_ENVITOTAREGIPRODTOTA DATETIME NULL,
ID_FECHPROD NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_TOTAREGIPRODDETA));
//

CREATE TABLE MATERIAL_SEQUESTRO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_SEQUMATE NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_FORNECEDOR NUMERIC(10, 0) NOT NULL,
DT_PREVLIBESEQUMATE DATETIME NULL,
NR_LOTEFORNSEQUMATE VARCHAR(50) NULL,
NR_LOTEINTESEQUMATE VARCHAR(50) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
ID_MOTISEQU NUMERIC(10, 0) NOT NULL,
DT_INICSEQUMATE DATETIME NULL,
ID_USUASIST_INICSEQUMATE NUMERIC(10, 0) NULL,
DT_ENCESEQUMATE DATETIME NULL,
ID_USUASIST_ENCESEQUMATE NUMERIC(10, 0) NULL,
FX_SEQUMATE CHAR(1) NULL,
DT_PRODSEQUMATE DATETIME NULL,
DT_VALISEQUMATE DATETIME NULL,
GN_OBSESEQUMATE VARCHAR(2000) NULL,
PRIMARY KEY (ID_SEQUMATE));
//

CREATE TABLE FORM_QUAL_META_AGENDAMENTO (
ID_FORMQUALMETAAGEN NUMERIC(10, 0) NOT NULL,
ID_FORMQUALMETA NUMERIC(10, 0) NOT NULL,
NM_TITUFORMQUALMETAAGEN VARCHAR(100) NOT NULL,
NM_DESCFORMQUALMETAAGEN VARCHAR(2000) NOT NULL,
FL_ATIVFORMQUALMETAAGEN CHAR(1) NOT NULL,
DT_INICFORMQUALMETAAGEN DATETIME NULL,
DT_FINAFORMQUALMETAAGEN DATETIME NULL,
FL_RECOFORMQUALMETAAGEN CHAR(1) NOT NULL,
GN_DIASFORMQUALMETAAGEN VARCHAR(100) NULL,
NR_TEMPSEGUFORMQUALMETAAGEN NUMERIC(10, 0) NOT NULL,
DT_CRIAFORMQUALMETAAGEN DATETIME NOT NULL,
ID_USUAFORMQUALMETAAGEN NUMERIC(10, 0) NOT NULL,
DT_ULTIEXECFORMQUALMETAAGEN DATETIME NULL,
DT_ULTIALTEFORMQUALMETAAGEN DATETIME NULL,
PRIMARY KEY (ID_FORMQUALMETAAGEN));
//

CREATE TABLE INTERFACE_AGENDAMENTO_PRODUTO (
ID_PRODAGENINTE NUMERIC(10, 0) NOT NULL,
ID_AGENINTE NUMERIC(10, 0) NOT NULL,
DT_CRIAPRODAGENINTE DATETIME NOT NULL,
ID_USUASIST_CRIACAO NUMERIC(10, 0) NOT NULL,
ID_PRODMATEEMBA VARCHAR(6) NOT NULL,
PRIMARY KEY (ID_PRODAGENINTE));
//

CREATE TABLE MATE_EMBA_PESQ_TOUCH_USUASIST (
ID_PESQMATEEMBATOUC NUMERIC(10, 0) NOT NULL,
ID_USUASIST NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
NR_ORDEPESQMATEEMBATOUC INTEGER NOT NULL,
PRIMARY KEY (ID_PESQMATEEMBATOUC));
//

CREATE TABLE MIDIA_CATALOGO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_CATAMIDI NUMERIC(10, 0) NOT NULL,
NM_CATAMIDI VARCHAR(100) NOT NULL,
DT_ULTIATUACATAMIDI DATE NOT NULL,
FX_CATAMIDI CHAR(1) NOT NULL,
PRIMARY KEY (ID_CATAMIDI));
//

CREATE TABLE CONVERSAO_DATA (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_CONVDATA NUMERIC(10, 0) NOT NULL,
DT_DATABASE DATETIME NOT NULL,
FL_CALECONV VARCHAR(10) NOT NULL,
GN_DATACONV NVARCHAR(200) NOT NULL,
PRIMARY KEY (ID_CONVDATA));
//

CREATE TABLE PRODUCAO_REGISTRO_REPESAG_ITEM (
ID_ITEMREPEREGIPROD NUMERIC(10, 0) NOT NULL,
ID_REPEREGIPROD NUMERIC(10, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
FL_STATREGIPROD CHAR(2) NOT NULL,
FX_ITEMREPEREGIPROD CHAR(1) NOT NULL,
ID_ALMOORIGITEMREPEREGIPROD NUMERIC(10, 0) NULL,
ID_ALMODESTITEMREPEREGIPROD NUMERIC(10, 0) NULL,
QN_PSLQANTEITEMREPEREGIPROD NUMERIC(16, 3) NULL,
QN_PSLQAJUSITEMREPEREGIPROD NUMERIC(16, 3) NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
PRIMARY KEY (ID_ITEMREPEREGIPROD));
//

CREATE TABLE PRODUCAO_TUNEL_CONTROLE (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_CONTTUNEPROD NUMERIC(10, 0) NOT NULL,
ID_TUNEPROD NUMERIC(10, 0) NOT NULL,
ID_USUASIST_CRIA NUMERIC(10, 0) NULL,
DT_PREVABERCONTUNEPROD DATETIME NULL,
FL_STATOPERCONTTUNEPROD CHAR(2) NULL,
FL_CONDATUACONTTUNEPROD CHAR(2) NULL,
GN_OBSECONTTUNEPROD VARCHAR(2000) NULL,
FX_CONTTUNEPROD CHAR(1) NULL,
DT_MOVICONTUNEPROD DATETIME NULL,
DT_ABERENTRCONTUNEPROD DATETIME NULL,
DT_FECHENTRCONTUNEPROD DATETIME NULL,
DT_ABERSAIDCONTUNEPROD DATETIME NULL,
DT_FECHSAIDCONTUNEPROD DATETIME NULL,
PRIMARY KEY (ID_CONTTUNEPROD));
//

CREATE TABLE MIMS_STATUS (
ID_STATMIMS NUMERIC(10, 0) NOT NULL,
NM_COLUTABESTATMIMS VARCHAR(100) NULL,
FL_STATMIMS VARCHAR(5) NULL,
DS_STATMIMS VARCHAR(200) NULL,
PRIMARY KEY (ID_STATMIMS));
//

CREATE TABLE CONTROLE (
ID NUMERIC(10, 0) NOT NULL,
DT_PEDI DATETIME NULL,
DATAHORA DATETIME NULL);
//

CREATE TABLE PRODUTOS_LINHA (
ID_LINHPROD NUMERIC(10, 0) NOT NULL,
FL_LINHPROD CHAR(2) NULL,
NM_LINHPROD VARCHAR(50) NULL,
PRIMARY KEY (ID_LINHPROD));
//

CREATE TABLE WEBSERVICE_USERSESSION (
ID_WEBSERVUSERSESS VARCHAR(36) NOT NULL,
ID_USUASIST NUMERIC(10, 0) NOT NULL,
FILIAL INTEGER NOT NULL,
NM_MODUWEBSERVUSERSESS VARCHAR(10) NOT NULL,
DT_EXPIWEBSERVUSERSESS DATETIME NULL,
PRIMARY KEY (ID_WEBSERVUSERSESS));
//

CREATE TABLE MATERIAL_ENTRADA_INTERFA_ITEM (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ITEMINTEENTRMATE NUMERIC(10, 0) NOT NULL,
ID_ENTRMATE NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NOT NULL,
ID_MATEALMO NUMERIC(10, 0) NOT NULL,
QN_ITEMINTEENTRMATE NUMERIC(16, 6) NOT NULL,
QN_CONFITEMINTEENTRMATE NUMERIC(16, 6) NOT NULL,
NR_LOTEFORNITEMINTEENTRMATE VARCHAR(50) NULL,
NR_LOTEINTEITEMINTEENTRMATE VARCHAR(50) NULL,
ID_CENTCUST NUMERIC(10, 0) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
NR_SEQUERPITEMINTEENTRMATE INTEGER NULL,
IE_ITEMINTEENTRMATE VARCHAR(25) NULL,
ID_UNIDMEDI NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_ITEMINTEENTRMATE));
//

CREATE TABLE TMP_REL210_PROD_DEST (
ID_PRODDESTREL210 NUMERIC(10, 0) NOT NULL,
DT_REGIDATAPADR DATETIME NOT NULL,
ID_TIPOAVE NUMERIC(10, 0) NOT NULL,
ID_PROCLINH NUMERIC(10, 0) NOT NULL,
FL_ESTOPRODUDESTMATEEMBA CHAR(1) NULL,
PESO_LBS_PROD_DEST NUMERIC(20, 6) NULL,
PRIMARY KEY (ID_PRODDESTREL210));
//

CREATE TABLE EMBALAGEM_CONTROLE_LOGS (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_LOGSCONTEMBA NUMERIC(10, 0) NOT NULL,
DT_LOGSCONTEMBA DATETIME NOT NULL,
NR_LINHARQULOGSCONTEMBA INTEGER NULL,
GN_NOMEARQULOGSCONTEMBA VARCHAR(400) NULL,
GN_MENSERROLOGSCONTEMBA VARCHAR(1000) NULL,
PRIMARY KEY (ID_LOGSCONTEMBA));
//

CREATE TABLE MATERIAL_EMBALAGEM_EAN14_ADIC (
ID_ADICEA14MATEEMBA NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_QTDEADICEA14MATEEMBA NUMERIC(10, 0) NULL,
GN_CODIADICEA14MATEEMBA VARCHAR(14) NULL,
PRIMARY KEY (ID_ADICEA14MATEEMBA));
//

CREATE TABLE PRODUCAO_REGISTRO_TRANSF_IDEN (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_IDENTRANREGIPROD NUMERIC(10, 0) NOT NULL,
ID_TRANREGIPROD NUMERIC(10, 0) NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
ID_PRODMATEEMBA CHAR(4) NULL,
ID_IDENALMOORIGTRANREGIPROD NUMERIC(10, 0) NULL,
ID_IDENALMODESTTRANREGIPROD NUMERIC(10, 0) NULL,
DT_IDENTRANREGIPROD DATETIME NULL,
PRIMARY KEY (ID_IDENTRANREGIPROD));
//

CREATE TABLE EQUIPAMENTO_TURNO (
ID_TURNEQUI NUMERIC(10, 0) NOT NULL,
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(10, 0) NULL,
ID_EQUI NUMERIC(10, 0) NULL,
GN_SEQUTURNEQUI VARCHAR(20) NULL,
GN_HORAINICTURNEQUI CHAR(8) NULL,
GN_HORAFINATURNEQUI CHAR(8) NULL,
FX_TURNEQUI CHAR(1) NULL,
GN_HORATOLEINICTURNEQUI CHAR(8) NULL,
GN_HORATOLEFINATURNEQUI CHAR(8) NULL,
GN_HORAEXTEINICTURNEQUI CHAR(8) NULL,
GN_HORAEXTEFINATURNEQUI CHAR(8) NULL,
FL_INIDIAANTETURNEQUI CHAR(1) NULL,
GN_TEMPEXTETURNEQUI CHAR(8) NULL,
PRIMARY KEY (ID_TURNEQUI));
//

CREATE TABLE GRAFICO_LINHA (
DATA DATETIME NOT NULL,
DESCRICAO VARCHAR(100) NOT NULL,
VALOR NUMERIC(10, 2) NOT NULL);
//

CREATE TABLE DESEMPILHADOR (
ID_DESEMPILHADOR NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
ID_RFID NUMERIC(10, 0) NULL,
FL_LIBECARG CHAR(1) NULL,
DT_INICIO DATETIME NULL,
DT_FIM DATETIME NULL,
NR_CARGA VARCHAR(25) NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
IE_EXTEEQUIP VARCHAR(25) NULL);
//

CREATE TABLE MIDDLEWARE_SYNC_SERVICE_HIST (
FL_TIPOHISTMESSAGE CHAR(1) NOT NULL,
GN_HISTMESSAGE VARCHAR NOT NULL,
GN_HISTERRORMESSAGE VARCHAR NULL,
DT_HISTMESSAGE DATETIME NOT NULL,
NR_EXEVERSION VARCHAR(20) NOT NULL);
//

CREATE TABLE VALIDA_PRODUCAO_DIARIA (
EMPRESA VARCHAR(2) NULL,
FILIAL INTEGER NULL,
ID_PRODVALID NUMERIC(10, 0) NOT NULL,
GN_PERIODO VARCHAR(7) NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NULL,
ID_PROCLINH NUMERIC(10, 0) NULL,
DT_REGIPROD DATETIME NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
FL_PRODPROPREGIPROD VARCHAR(1) NULL,
FL_ESPEMATEEMBA CHAR(2) NULL,
QN_PESOLIQUREGIPROD NUMERIC(10, 3) NULL,
QN_QTDEREGIPROD NUMERIC(10, 0) NULL,
FL_SOBRREGIPROD CHAR(1) NULL,
PRIMARY KEY (ID_PRODVALID));
//

CREATE TABLE MV_ESTOQUE_ATUAL (
DT_ESTOATUA DATETIME NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_PESOEMBA NUMERIC(38, 0) NULL,
QN_EMBAESTO NUMERIC(38, 0) NULL,
QN_PESOESTO NUMERIC(38, 0) NULL);
//

CREATE TABLE ABATE_UNIDADE_ESTRUTURA_META (
ID_METAESTRUNIDABAT NUMERIC(10, 0) NOT NULL,
ID_ESTRUNIDABAT NUMERIC(10, 0) NOT NULL,
NR_ANOMETAESTRUNIDABAT INTEGER NULL,
PC_OPERJANEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERFEVEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERMARCMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERABRIMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERMAIOMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERJUNHMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERJULHMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERAGOSMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERSETEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPEROUTUMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERNOVEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_OPERDEZEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBJANEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBFEVEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBMARCMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBABRIMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBMAIOMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBJUNHMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBJULHMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBAGOSMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBSETEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBOUTUMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBNOVEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PC_GLOBDEZEMETAESTRUNIDABAT NUMERIC(16, 6) NULL,
PRIMARY KEY (ID_METAESTRUNIDABAT));
//

CREATE TABLE PRODUCAO_REGISTRO_ORIGEM_AVEVIVA (
ID_ORIGAVEVIVAREGIPROD NUMERIC(10, 0) NOT NULL,
FL_TIPOORIGAVEVIVAREGIPROD CHAR(1) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NOT NULL,
ID_ENTRAVEVIVA NUMERIC(10, 0) NULL,
GN_PLACCAMIENTRAVEVIVA VARCHAR(8) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
NM_FORNECEDOR VARCHAR(40) NULL,
NM_MOTOTRAN VARCHAR(40) NULL,
ID_FORNECEDOR_TRANSPORTADOR NUMERIC(10, 0) NULL,
NM_FORNECEDOR_TRANSPORTADOR VARCHAR(40) NULL,
ID_REQUSAIDGRAN NUMERIC(10, 0) NULL,
ID_LOTECRIA NUMERIC(10, 0) NULL,
NM_PROPGRAN VARCHAR(40) NULL,
QN_KMINICENTRAVEVIVA NUMERIC(15, 2) NULL,
DT_SAIDORIGENTRAVEVIVA DATETIME NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
NM_MATERIAL VARCHAR(40) NULL,
QN_CABEENTRAVEVIVA NUMERIC(15, 2) NULL,
QN_KMFINAENTRAVEVIVA NUMERIC(15, 2) NULL,
QN_KMPERCENTRAVEVIVA NUMERIC(15, 2) NULL,
QN_GAIOENTRAVEVIVA NUMERIC(15, 2) NULL,
QN_MORTENTRAVEVIVA NUMERIC(15, 2) NULL,
QN_AVECONTENTRAVEVIVA NUMERIC(15, 2) NULL,
DT_ABERPENDENTRAVEVIVA DATETIME NULL,
DT_FECHPENDENTRAVEVIVA DATETIME NULL,
QN_PESOORIGENTRAVEVIVA NUMERIC(15, 2) NULL,
QN_PESOBRUTENTRAVEVIVA NUMERIC(15, 2) NULL,
DT_ENTRCAMIENTRAVEVIVA DATETIME NULL,
DT_SAIDCAMIENTRAVEVIVA DATETIME NULL,
QN_PESOTARAENTRAVEVIVA NUMERIC(15, 2) NULL,
QN_PESOLIQUENTRAVEVIVA NUMERIC(15, 2) NULL,
ID_ESTAPENDESTRUNIDABAT NUMERIC(10, 0) NULL,
NM_ESTAPENDESTRUNIDABAT VARCHAR(40) NULL,
PRIMARY KEY (ID_ORIGAVEVIVAREGIPROD));
//

CREATE TABLE CHILLER (
ID_CHILLER NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
QN_TEMPERATURA NUMERIC(10, 3) NULL,
QN_VAZAO_INSTANTANEA NUMERIC(10, 3) NULL,
QN_VAZAO_ACUMULADA NUMERIC(10, 3) NULL,
NR_CARGA VARCHAR(25) NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
QN_TEMPERATURA_RENOVACAO NUMERIC(10, 3) NULL,
QN_VAZAO_SETPOINT NUMERIC(10, 3) NULL,
QN_TEMPO NUMERIC(10, 3) NULL,
FL_STATUS CHAR(1) NULL,
PC_TEMPERATURA_RENOVACAO NUMERIC(10, 4) NULL,
DT_REGISTRO DATETIME NULL,
DT_OCORRENCIA DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL,
QN_INDICADOR_VAZAO_ACUM NUMERIC(10, 3) NULL);
//

CREATE TABLE ANOMALIA_PARAMETRO (
ID_PARAANOM NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
IE_CRITAVALPARAANOM VARCHAR(25) NULL,
NM_CRITAVALPARAANOM VARCHAR(100) NULL,
IE_SUBCPARAANOM VARCHAR(25) NULL,
NM_SUBCPARAANOM VARCHAR(100) NULL,
IE_TIPOPARAANOM VARCHAR(25) NULL,
NM_TIPOPARAANOM VARCHAR(100) NULL,
IE_CRITCLASPARAANOM VARCHAR(25) NULL,
NM_CRITCLASPARAANOM VARCHAR(100) NULL,
IE_PROBESPEPARAANOM VARCHAR(25) NULL,
NM_PROBESPEPARAANOM VARCHAR(100) NULL,
IE_PROBDETAPARAANOM VARCHAR(25) NULL,
NM_PROBDETAPARAANOM VARCHAR(100) NULL,
IE_CLASPARAANOM VARCHAR(25) NULL,
NM_CLASPARAANOM VARCHAR(100) NULL,
GN_OBSEPARAANOM VARCHAR(100) NULL,
PRIMARY KEY (ID_PARAANOM));
//

CREATE TABLE PRODUCAO_REGISTRO_REPESAG_BASE (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_BASEREPEREGIPROD NUMERIC(10, 0) NOT NULL,
ID_REPEREGIPROD NUMERIC(10, 0) NOT NULL,
ID_VARIEMBABASEREPEREGIPROD NUMERIC(10, 0) NOT NULL,
QN_VARIEMBABASEREPEREGIPROD NUMERIC(10, 0) NULL,
QN_LIQUPESABASEREPEREGIPROD NUMERIC(16, 3) NULL,
PRIMARY KEY (ID_BASEREPEREGIPROD));
//

CREATE TABLE TIPO_OCORRENCIA (
ID_OCORTIPO NUMERIC(10, 0) NOT NULL,
NM_OCORTIPO VARCHAR(50) NOT NULL,
PRIMARY KEY (ID_OCORTIPO));
//

CREATE TABLE PRODUCAO_FECHAMENTO_CUSTO_DIARIO (
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
ID_DIARCUSTFECHPROD NUMERIC(10, 0) NOT NULL,
ID_CUSTFECHPROD NUMERIC(10, 0) NULL,
DT_DIARCUSTFECHPROD DATETIME NULL,
DT_PROCDIARCUSTFECHPROD DATETIME NULL,
ID_USUASIST_FECHCUSTFECHPROD NUMERIC(10, 0) NULL,
FL_STATDIARCUSTFECHPROD CHAR(2) NULL,
FX_DIARCUSTFECHPROD CHAR(1) NULL,
PRIMARY KEY (ID_DIARCUSTFECHPROD));
//

CREATE TABLE EQUIPAMENTO_ACUMULADOR_DADOS (
ID_DADOACUMEQUI NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
NM_DADOACUMEQUI VARCHAR(100) NOT NULL,
IE_DADOACUMEQUI VARCHAR(25) NULL,
PRIMARY KEY (ID_DADOACUMEQUI));
//

CREATE TABLE TMP_FECHMATE (
ID_MATERIAL NUMERIC(10, 0) NULL,
IE_MATERIAL VARCHAR(25) NULL,
FILIAL NUMERIC(5, 0) NULL,
IE_FILISIST VARCHAR(25) NULL,
DT_MATEESTOFECH DATETIME NULL,
FL_OPERMOVIMATE CHAR(1) NULL,
FL_TIPOMOVIMATE CHAR(2) NULL,
QN_MATEFECHESTO NUMERIC(38, 3) NULL,
NR_LOTEFORNMATEFECHESTO VARCHAR(50) NULL,
ID_PRODMATEEMBA VARCHAR(4) NULL,
IE_MATEEMBA VARCHAR(25) NULL);
//

CREATE TABLE PRODUCAO_PROCESSO_META (
ID_METAPROCPROD NUMERIC(10, 0) NOT NULL,
ID_PROCPROD NUMERIC(10, 0) NOT NULL,
NR_ANOMETAPROCPROD INTEGER NULL,
PC_OPERJANEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERFEVEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERMARCMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERABRIMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERMAIOMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERJUNHMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERJULHMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERAGOSMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERSETEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPEROUTUMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERNOVEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_OPERDEZEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBJANEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBFEVEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBMARCMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBABRIMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBMAIOMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBJUNHMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBJULHMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBAGOSMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBSETEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBOUTUMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBNOVEMETAPROCPROD NUMERIC(16, 6) NULL,
PC_GLOBDEZEMETAPROCPROD NUMERIC(16, 6) NULL,
PRIMARY KEY (ID_METAPROCPROD));
//

CREATE TABLE ENTRADA_AVE_VIVA_DESDOBRAMENTO (
ID_ENTRAVEVIVADESD NUMERIC(10, 0) NOT NULL,
ID_ENTRAVEVIVA NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_LINHTIPOAVE NUMERIC(10, 0) NOT NULL,
QN_CABEENTRAVEVIVADESD NUMERIC(10, 0) NOT NULL,
QN_PESOMEDIENTRAVEVIVADESD NUMERIC(16, 6) NOT NULL,
IE_ORDEPESA VARCHAR(25) NULL,
NR_LOTECOMPORDEPESADESD VARCHAR(40) NULL,
PRIMARY KEY (ID_ENTRAVEVIVADESD));
//

CREATE TABLE CONTADOR_LINHA (
ID_CONTADOR_LINHA NUMERIC(10, 0) NOT NULL,
ID_REFERENCIA NUMERIC(10, 0) NULL,
FL_STATUS VARCHAR(2) NULL,
QN_VELOCIDADE NUMERIC(10, 3) NULL,
QN_GANCHO_CHEIO NUMERIC(10, 0) NULL,
QN_GANCHO_VAZIO NUMERIC(10, 0) NULL,
DT_REGISTRO DATETIME NULL,
NR_CARGA VARCHAR(25) NULL,
FL_PROCESSADO CHAR(1) NULL,
DT_PROCESSADO DATETIME NULL,
NM_EQUIPAMENTO VARCHAR(50) NULL,
DT_OCORRENCIA DATETIME NULL,
IE_EXTEEQUIP VARCHAR(25) NULL);
//

CREATE TABLE CUSTO_COMPONENTE_MENSAL (
ID_MENSCOMPCUST NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
DT_MENSCOMPCUST DATETIME NULL,
ID_TIPOAVE NUMERIC(10, 0) NULL,
ID_PROCLINH NUMERIC(10, 0) NULL,
ID_COMPAVE NUMERIC(10, 0) NULL,
QN_PESOENTRMENSCOMPCUST NUMERIC(30, 10) NULL,
VL_PESOENTRTOTAMENSCOMPCUST NUMERIC(30, 10) NULL,
VL_PESOENTRUNITMENSCOMPCUST NUMERIC(30, 10) NULL,
QN_PESOPRODMENSCOMPCUST NUMERIC(30, 10) NULL,
VL_PESOPRODTOTAMENSCOMPCUST NUMERIC(30, 10) NULL,
VL_PESOPRODUNITMENSCOMPCUST NUMERIC(30, 10) NULL,
PRIMARY KEY (ID_MENSCOMPCUST));
//

CREATE TABLE PRODUCAO_UNIDADE_REJEITO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_PONTO NUMERIC(10, 0) NULL,
ID_PRODUNIDREJE NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
DT_PADRPRODUNIDREJE DATETIME NOT NULL,
ID_REJEMOTI NUMERIC(10, 0) NULL,
DT_PRODUNIDREJE DATETIME NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
QN_PESOPRODUNIDREJE NUMERIC(10, 6) NOT NULL,
QN_TARAPRODUNIDREJE NUMERIC(10, 6) NOT NULL,
QN_TOLEMINIPRODUNIDREJE NUMERIC(6, 3) NOT NULL,
QN_TOLEMAXIPRODUNIDREJE NUMERIC(6, 3) NOT NULL,
PRIMARY KEY (ID_PRODUNIDREJE));
//

CREATE TABLE MATERIAL_REQUISICAO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_REQUMATE NUMERIC(10, 0) NOT NULL,
DT_REQUMATE DATETIME NOT NULL,
FL_STATREQUMATE CHAR(2) NOT NULL,
ID_DESTALMOREQUMATE NUMERIC(10, 0) NULL,
DT_CRIAREQUMATE DATETIME NOT NULL,
ID_USUACRIAREQUMATE NUMERIC(10, 0) NULL,
GN_OBSEREQUMATE VARCHAR(2000) NULL,
GN_OBSENOTAFISCREQUMATE VARCHAR(2000) NULL,
ID_CONTCONT NUMERIC(10, 0) NULL,
ID_TIPOMOVIMATE NUMERIC(10, 0) NULL,
ID_USUASIST_ABERATEN NUMERIC(10, 0) NULL,
ID_USUASIST_FECHATEN NUMERIC(10, 0) NULL,
DT_ABERATENREQUMATE DATETIME NULL,
DT_FECHATENREQUMATE DATETIME NULL,
GN_NAOATENDREQUMATE VARCHAR(1000) NULL,
ID_USUASIST_OBSEATEN NUMERIC(10, 0) NULL,
ID_CENTCUST NUMERIC(10, 0) NULL,
FL_TIPOREQUMATE CHAR(2) NOT NULL,
NR_NOTAFISCREQUMATE VARCHAR(25) NULL,
DT_NOTAFISCREQUMATE DATETIME NULL,
NR_TENTSINCERPREQUMATE INTEGER NULL,
FL_SINCERPREQUMATE CHAR(1) NULL,
FL_STATVALINOTAREQUMATE CHAR(2) NULL,
DT_SINCERPREQUMATE DATETIME NULL,
PRIMARY KEY (ID_REQUMATE));
//

CREATE TABLE IMP_INTEGRADO (
IE_FORNECEDOR VARCHAR(20) NULL,
NM_FORNECEDOR VARCHAR(100) NULL,
NM_FANTFORN VARCHAR(100) NULL,
NM_REDUFORN VARCHAR(30) NULL,
NR_CEPFORN VARCHAR(15) NULL,
ID_TIPOLOGR NUMERIC(10, 0) NULL,
NM_LOGRFORN VARCHAR(100) NULL,
NR_LOGRFORN VARCHAR(20) NULL,
GN_COMPENDEFORN VARCHAR(40) NULL,
NM_CIDADE VARCHAR(60) NULL,
SG_ESTADO VARCHAR(5) NULL,
ID_BAIRRO NUMERIC(10, 0) NULL,
FL_PESSFORN VARCHAR(20) NULL,
NR_CNPJFORN VARCHAR(20) NULL,
NR_INSCESTAFORN VARCHAR(30) NULL,
NM_PROPGRAN VARCHAR(50) NULL,
NR_CNPJGRAN VARCHAR(20) NULL,
NR_INSCESTAGRAN VARCHAR(30) NULL,
ID_CIDADE NUMERIC(10, 0) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL);
//

CREATE TABLE EQUIPAMENTO_TURNO_DIARIO_INT (
ID_INTEDIARTURNEQUI NUMERIC(10, 0) NOT NULL,
ID_ITEMDIARTURNEQUI NUMERIC(10, 0) NOT NULL,
DT_HORAINICINTEDIARTURNEQUI DATETIME NULL,
DT_HORAFINAINTEDIARTURNEQUI DATETIME NULL,
FX_INTEDIARTURNEQUI CHAR(1) NOT NULL,
PRIMARY KEY (ID_INTEDIARTURNEQUI));
//

CREATE TABLE BATCH_MATERIAL (
IE_MATERIAL VARCHAR(25) NULL,
QN_PESOPESABATCPROD NUMERIC(38, 8) NULL,
NR_LOTEPESABATCPROD VARCHAR(20) NULL,
NM_MATERIAL VARCHAR(60) NULL,
NR_CODIBARR VARCHAR(18) NULL,
NR_BATCPROD VARCHAR(11) NULL,
IE_FILISIST VARCHAR(25) NULL,
SG_UNIDMEDI VARCHAR(3) NULL,
NM_UNIDMEDI VARCHAR(40) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
IE_ALMOXARIFADO VARCHAR(25) NULL,
NM_ALMOXARIFADO VARCHAR(40) NULL,
DT_BATCPROD DATETIME NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
ID_BATCPROD NUMERIC(10, 0) NULL,
ID_MATEPRIM NUMERIC(10, 0) NULL);
//

CREATE TABLE MATERIAL_REQUISICAO_ITEM (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ITEMREQUMATE NUMERIC(10, 0) NOT NULL,
ID_REQUMATE NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
FL_STATITEMREQUMATE CHAR(2) NOT NULL,
ID_ORIGALMOITEMREQUMATE NUMERIC(10, 0) NULL,
ID_DESTALMOITEMREQUMATE NUMERIC(10, 0) NULL,
QN_CALCITEMREQUMATE NUMERIC(16, 6) NULL,
QN_SOLIITEMREQUMATE NUMERIC(16, 6) NULL,
QN_ATENITEMREQUMATE NUMERIC(16, 6) NULL,
ID_PROGPROD NUMERIC(10, 0) NULL,
GN_NAOATENDITEMREQUMATE VARCHAR(1000) NULL,
ID_USUASIST_OBSEATEN NUMERIC(10, 0) NULL,
QN_AJUSITEMREQUMATE NUMERIC(16, 3) NULL,
PRIMARY KEY (ID_ITEMREQUMATE));
//

CREATE TABLE INTE_MATERIAL_MANUTENCAO (
ID_MANUMATEINTE NUMERIC(10, 0) NOT NULL,
IE_FILISIST VARCHAR(25) NULL,
DT_MANUMATEINTE DATETIME NULL,
IE_MATERIAL VARCHAR(25) NULL,
NR_LOTEFORNMANUMATEINTE VARCHAR(50) NULL,
NR_LOTEINTEMANUMATEINTE VARCHAR(50) NULL,
FL_OBRILOTEMANUMATEINTE CHAR(2) NULL,
QN_MANUMATEINTE NUMERIC(16, 6) NULL,
FL_OPERMANUMATEINTE CHAR(1) NULL,
VL_MANUMATEINTE NUMERIC(16, 6) NULL,
VL_TOTAMANUMATEINTE NUMERIC(16, 6) NULL,
IE_CENTCUSTINTE NUMERIC(18, 0) NULL,
IE_FORNECEDORINTE NUMERIC(10, 0) NULL,
GN_OBSEMANUMATEINTE VARCHAR(3000) NULL,
DT_INCLMANUMATEINTE DATETIME NULL,
DT_PROCMANUMATEINTE DATETIME NULL,
FL_STATMANUMATEINTE CHAR(2) NULL,
PRIMARY KEY (ID_MANUMATEINTE));
//

CREATE TABLE MATERIAL_CONSUMO_DIFERENCA (
ID_DIFECONSMATE NUMERIC(10, 0) NOT NULL,
EMPRESA CHAR(2) NULL,
FILIAL INTEGER NULL,
DT_REGIPROD DATETIME NULL,
DT_PADRREGIPROD DATETIME NULL,
ID_PRODMATEEMBA VARCHAR(10) NULL,
ID_ESTRMATEEMBAREGIPROD NUMERIC(10, 0) NULL,
NR_LOTERASTREGIPROD VARCHAR(25) NULL,
ID_MATERIAL NUMERIC(10, 0) NULL,
QN_MATEDIFECONSMATE NUMERIC(16, 6) NULL,
ID_UNIDMEDI NUMERIC(10, 0) NULL,
NR_LOTEMATEDIFECONSMATE VARCHAR(50) NULL,
ID_ALMOXARIFADO NUMERIC(10, 0) NULL,
DT_ATUADIFECONSMATE DATETIME NULL,
ID_UNIDMEDI_MATE NUMERIC(10, 0) NULL,
FL_SINCERPDIFECONSMATE CHAR(1) NULL,
NR_TENTSINCERPDIFECONSMATE INTEGER NULL,
DT_SINCERPDIFECONSMATE DATETIME NULL,
ID_MATEEMBAFILI_MATEPRIM NUMERIC(10, 0) NULL,
PRIMARY KEY (ID_DIFECONSMATE));
//

CREATE TABLE DADOS_RETENCAO_HIST (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_HISTRETEDADO NUMERIC(10, 0) NOT NULL,
ID_RETEDADO NUMERIC(10, 0) NOT NULL,
NM_RETEDADO VARCHAR(100) NULL,
FL_ATIVHISTRETEDADO CHAR(1) NOT NULL,
NM_PROCHISTRETEDADO VARCHAR(50) NOT NULL,
NR_DIASHISTRETEDADO INTEGER NOT NULL,
DT_ULTIEXCLHISTRETEDADO DATETIME NULL,
QN_REGIEXCLHISTRETEDADO NUMERIC(10, 0) NULL,
FX_HISTRETEDADO CHAR(1) DEFAULT ('S') NULL,
DT_ALTEHISTRETEDADO DATETIME NULL,
FL_TIPOHISTRETEDADO CHAR(2) NOT NULL,
ID_USUARIO INTEGER NOT NULL,
PRIMARY KEY (ID_HISTRETEDADO));
//

CREATE TABLE PRODUCAO_REGISTRO_ORIG_LOTEEXT (
ID_ORIGEXTEAVEVIVAREGIPROD NUMERIC(10, 0) NOT NULL,
ID_REGIPROD NUMERIC(10, 0) NULL,
ID_ENTRAVEVIVA NUMERIC(10, 0) NULL,
NR_LOTERASTEXTEREGIPROD VARCHAR(40) NULL,
NR_LOTERASTORIGREGIPROD VARCHAR(40) NULL,
NM_LOTERASTORIGREGIPROD VARCHAR(200) NULL,
DT_CRIALOTERASTORIGREGIPROD DATETIME NULL,
DT_ATIVLOTERASTORIGREGIPROD DATETIME NULL,
DT_EXPOLOTERASTORIGREGIPROD DATETIME NULL,
FL_METOLOTERASTORIGREGIPROD CHAR(1) NULL,
PRIMARY KEY (ID_ORIGEXTEAVEVIVAREGIPROD));
//

CREATE TABLE CONT_BACK (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_ITEMCONTENTRMATE NUMERIC(10, 0) NOT NULL,
ID_CARGENTRMATE NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
NR_LOTEFORNITEMCONTENTRMATE VARCHAR(50) NULL,
NR_LOTEINTEITEMCONTENTRMATE VARCHAR(50) NULL,
ID_FORNECEDOR NUMERIC(10, 0) NULL,
QN_ITEMCONTENTRMATE NUMERIC(16, 6) NOT NULL,
QN_ITEMCONTENTRMATE1 NUMERIC(16, 6) NOT NULL,
QN_ITEMCONTENTRMATE2 NUMERIC(16, 6) NOT NULL,
QN_ITEMCONTENTRMATE3 NUMERIC(16, 6) NOT NULL,
FL_STATITEMCONTENTRMATE CHAR(2) NOT NULL,
FL_INSEITEMCONTENTRMATE CHAR(1) NULL,
FL_DETAITEMCONTENTRMATE CHAR(1) NULL,
GN_NUMEPLANITEMCONTENTRMATE VARCHAR(200) NULL,
GN_NUMENOTAITEMCONTENTRMATE VARCHAR(200) NULL,
ID_ITEMCONTENTRMATE_AGRU NUMERIC(10, 0) NULL,
QN_CONFITEMCONTENTRMATE NUMERIC(16, 6) NULL,
DT_PRODITEMCONTENTRMATE DATETIME NULL,
DT_VALIITEMCONTENTRMATE DATETIME NULL,
FL_LAUDITEMCONTENTRMATE CHAR(1) NULL);
//

CREATE TABLE TELAS_CAMPOS_CONFIGURACAO (
ID_CONFCAMPTELA NUMERIC(10, 0) NOT NULL,
NM_CONFCAMPTELA VARCHAR(100) NOT NULL,
PRIMARY KEY (ID_CONFCAMPTELA));
//

CREATE TABLE FORMULARIO_QUALIDADE_DESBLOQUEIO (
ID_FORMQUALDESB NUMERIC(10, 0) NOT NULL,
ID_FORMQUALMETA NUMERIC(10, 0) NULL,
ID_FORMQUAL NUMERIC(10, 0) NULL,
ID_USUALIBEFORMQUALDESB NUMERIC(10, 0) NULL,
DT_LIBEFORMQUALDESB DATETIME NULL,
ID_REFEQUALMETA NUMERIC(10, 0) NULL,
GN_OBSFORMQUALDESB VARCHAR(1000) NULL,
GN_MOTIBLOQFORMQUALDESB VARCHAR(100) NULL);
//

CREATE TABLE EQUIPAMENTO_PRODUCAO_PRODUTO (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_PRODPRODEQUI NUMERIC(10, 0) NOT NULL,
ID_EQUIPAMENTO NUMERIC(10, 0) NOT NULL,
ID_MATEEMBA NUMERIC(10, 0) NOT NULL,
DT_INICPRODPRODEQUI DATETIME NOT NULL,
FX_PRODPRODEQUI CHAR(1) NOT NULL,
PRIMARY KEY (ID_PRODPRODEQUI));
//

CREATE TABLE EXPEDICAO_PALETE_AUDITORIA (
EMPRESA VARCHAR(2) NULL,
FILIAL NUMERIC(5, 0) NULL,
ID_PALEEXPEAUDI NUMERIC(10, 0) NOT NULL,
DT_PALEEXPEAUDI DATETIME NOT NULL,
ID_USUASIST NUMERIC(10, 0) NOT NULL,
ID_PALEEXPE NUMERIC(10, 0) NOT NULL,
PRIMARY KEY (ID_PALEEXPEAUDI));
//

CREATE TABLE MATERIAL_FORNECEDOR (
EMPRESA CHAR(2) NOT NULL,
FILIAL INTEGER NOT NULL,
ID_FORNMATE NUMERIC(10, 0) NOT NULL,
ID_MATERIAL NUMERIC(10, 0) NOT NULL,
ID_FORNECEDOR NUMERIC(10, 0) NOT NULL,
IE_MATEFORNMATE VARCHAR(25) NOT NULL,
FL_AUTOFORNMATE CHAR(1) NOT NULL,
DT_INCLFORNMATE DATETIME NULL,
FX_FORNMATE CHAR(1) NOT NULL,
NR_PERIANALPRIMRECEFORNMATE NUMERIC(10, 0) NULL,
NR_PERIANALCONFFORNMATE NUMERIC(10, 0) NULL,
NR_PERIANALNAOCONFFORNMATE NUMERIC(10, 0) NULL,
FL_ATIVFORNMATE CHAR(1) DEFAULT ('S') NOT NULL,
IE_FORNMATE VARCHAR(25) NULL,
PRIMARY KEY (ID_FORNMATE));
//

CREATE TABLE MOTIVO_OCORRENCIA (
ID_OCORMOTI NUMERIC(10, 0) NOT NULL,
NM_OCORMOTI VARCHAR(50) NOT NULL,
PRIMARY KEY (ID_OCORMOTI));
//

ALTER TABLE PRODUCAO_PROGRAMACAO_ITEM ADD [IE_ITEMPROGPROD] VARCHAR  (25)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TURNO ADD [ID_TIPOAVE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD [ID_TRANUSUASISTTRANREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD [ID_TRANUSUAABERTRANREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD [GN_OBSETRANREGIPROD] VARCHAR  (2000)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD [DT_TRANFECHTRANREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD [DT_TRANABERTRANREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD [ID_TRANUSUAFECHTRANREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PEDIDO_VENDA_ITEM_COMPLEMENTO ADD [GN_LOTECOMPITEMPEDIVEND] VARCHAR  (20)  NULL  
//

ALTER TABLE PEDIDO_VENDA_ITEM_COMPLEMENTO ADD [GN_COAGLOTECOMPITEMPEDIVEND] VARCHAR  (20)  NULL  
//

ALTER TABLE PEDIDO_VENDA_ITEM_COMPLEMENTO ADD [QN_LOTECOMPITEMPEDIVEND] NUMERIC  (8,3)  NULL  
//

ALTER TABLE PEDIDO_VENDA_ITEM_COMPLEMENTO ADD [DT_FABRLOTECOMPITEMPEDIVEND] DATETIME  NULL  
//

ALTER TABLE PEDIDO_VENDA_ITEM_COMPLEMENTO ADD [DT_VALILOTECOMPITEMPEDIVEND] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_SIMULACAO ADD [GN_ERROSIMUPROGPROD] VARCHAR  (4000)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_SIMULACAO ADD [GN_ARQUSOLSIMUPROGPROD] VARCHAR  (2000)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA_TURNO ADD [QN_MOAUTURNENTRAVEVIVA] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA_TURNO ADD [ID_ESTAPENDESTRUNIDABAT] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_TRATAMENTO ADD [IE_TRATMATE] VARCHAR  (25)  NULL  
//

ALTER TABLE SCT_EMPRESA ADD [COMPANYID] UNIQUEIDENTIFIER  NULL  
//

ALTER TABLE SCT_EMPRESA ADD [FX_EMPRESA] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SCT_EMPRESA ADD [CREATEDAT] DATETIME  NULL  DEFAULT (GETDATE()) 
//

ALTER TABLE PRODUCAO_REINTEGRACAO ADD [FL_AUTOREINPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SCT_FILIAL ADD [FX_FILIAL] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SCT_FILIAL ADD [BRANCHID] UNIQUEIDENTIFIER  NULL  
//

ALTER TABLE SCT_FILIAL ADD [CREATEDAT] DATETIME  NULL  DEFAULT (GETDATE()) 
//

ALTER TABLE MBS_APONTAMENTO ADD [QT_PESO_MINIMO] NUMERIC  (11,3)  NULL  
//

ALTER TABLE MBS_APONTAMENTO ADD [QT_PESO_MAXIMO] NUMERIC  (11,3)  NULL  
//

ALTER TABLE MBS_APONTAMENTO ADD [DS_GS1_CUSTOMIZADO1] VARCHAR  (30)  NULL  
//


ALTER TABLE PROD_PROG_SIMU_MERC_MATE_EMBA ADD [QN_DOWNSIZEMATEEMBAMESIPRPD] NUMERIC  (20,10)  NULL  
//

ALTER TABLE SCT_GRUPO ADD [IE_GRUPO] VARCHAR  (50)  NULL  
//

ALTER TABLE SCT_GRUPO ADD [ID_SCTGRUPO] INT   NULL  
//

ALTER TABLE SCT_GRUPO ADD [FX_GRUPO] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SCT_GRUPO_EMPRFILI ADD [FX_GRUPO_EMPRFILI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SCT_GRUPO_EMPRFILI ADD [ID_GRUPEMPRFILI] INT   NULL  
//

ALTER TABLE PRODUCAO_PALETIZACAO_PONTO ADD [FL_RESTPRODPALEPONT] CHAR  (1)  NULL  
//

ALTER TABLE PRODUCAO_PALETIZACAO_PONTO ADD [IE_PRODPALEPONT] VARCHAR  (25)  NULL  
//

ALTER TABLE MATERIAL_MOVIMENTACAO ADD [DT_VALIMOVIMATE] DATETIME  NULL  
//

ALTER TABLE MATERIAL_MOVIMENTACAO ADD [DT_PRODMOVIMATE] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_PROG_SIMU_RESULTADO ADD [QN_DOWNSIZERESUSIMUPROGPROD] NUMERIC  (20,10)  NULL  
//

ALTER TABLE SCT_JANELA ADD [FL_PADREXIBINFOFILIJANE] CHAR  (1)  NULL  
//

ALTER TABLE SCT_JANELA ADD [FX_JANELA] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_SEQUESTRO ADD [FILIAL] INT   NULL  
//

ALTER TABLE PRODUCAO_SEQUESTRO ADD [EMPRESA] CHAR  (2)  NULL  
//

ALTER TABLE PRODUCAO_SEQUESTRO ADD [GN_PERIRASTSEQUPROD] VARCHAR  (10)  NULL  
//

ALTER TABLE PRODUCAO_SEQUESTRO ADD [FL_PROCENVIERPSEQUPROD] CHAR  (1)  NULL  
//

ALTER TABLE SCT_REC_JANELA ADD [FX_REC_JANELA] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PROD_PROG_SIMU_LINH_MATE_EMBA ADD [QN_DOWNSIZEMATEEMBALINHSIPRPD] NUMERIC  (20,10)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [ID_CENTCUST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [FL_SINCMIDDMULTPROGPROD] CHAR  (2)  NOT NULL DEFAULT ('NS') 
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [DT_ELABMULTPROGPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [GN_OBSEMIDDMAREMULTPROGPROD] VARCHAR  (1000)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [ID_ALMODESTMULTPROGPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [QN_REQUMULTPROGPROD] NUMERIC  (16,3)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [FL_STATMIDDMAREMULTPROGPROD] CHAR  (2)  NOT NULL DEFAULT ('AT') 
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [FL_SINCMIDDMAREMULTPROGPROD] CHAR  (2)  NOT NULL DEFAULT ('NS') 
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [ID_ESTRMATEEMBAMULTPROGPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD [IE_MULTPROGPROD] VARCHAR  (25)  NULL  
//

ALTER TABLE SCT_RECURSO ADD [FX_RECURSO] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_PROGRAMACAO_SIMU_ITEM ADD [ID_DEMAINTEITEMSIMUPROGPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_SIMU_ITEM ADD [PC_REPRDEMAITEMSIMUPROGPROD] NUMERIC  (30,25)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_SIMU_ITEM ADD [QN_DEMAAUTOITEMSIMUPROGPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_SIMU_ITEM ADD [IE_TIPOITEMSIMUPROGPROD] VARCHAR  (5)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_SIMU_ITEM ADD [PC_ATENDEMAITEMSIMUPROGPROD] NUMERIC  (30,25)  NULL  
//

ALTER TABLE SCT_USUARIO ADD [FX_USUARIO] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SCT_USUARIO ADD [CREATEDAT] DATETIME  NULL  DEFAULT (GETDATE()) 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_IDENBLOQTUNESEQUPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PERMALTELOTEIMPRPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXCLEMPETRANPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_LIMIDATAPADRPARASISTREID] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_TIPOCONFCANAPRODPARASIST] CHAR  (2)  NOT NULL DEFAULT ('UW') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_DATABASEPRODCARDPARASIST] CHAR  (2)  NOT NULL DEFAULT ('DP') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXCLPALEPRAGENTRPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_ETIQCOMPREGIPRODPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_QTDEDIASCARDPROPPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_IMPRLOTECERTEMBAPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NM_ENDEDOMIPARASIST] VARCHAR  (100)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_RECAPESOALTEEMBAPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NM_PREFADMIPARASIST] VARCHAR  (25)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_QTDEDIASCARDTERCPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_IDENQUALTUNESEQUPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PERMENCESISTPENDPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_LIBEORDEPESADESCPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_VALIPESOEXPEVARIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [ID_MENSPERFEMAIFILIPARASIST] INT   NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PREEAUTOLOTERASTPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_VALILACRREPEPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_MOTIDESTPRODFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_MOSTCONTMAIOPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_CONFMOTOPRIMPESAPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_REPEAGRUPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_NOTAFISCREQUMATEPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [ID_CODIETIQERROFAMIPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_FRETCOMPENTRAVESPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_UTILEMBAREUTPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_INFOCODIEXTEP275PARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [ID_CODIETIQERROBALAPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_UTILPADRCOREEXPEPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [QN_MAXIRECOSISTLOOKPARASIST] NUMERIC  (10,0)  NOT NULL DEFAULT ((1000)) 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_LIMIDTRETRRECUPARASISTREID] NUMERIC  (10,0)  NULL  DEFAULT ((0)) 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [ID_CODIETIQERROLEITPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [ID_BLOQPRODMATEEMBAPARASIST] VARCHAR  (10)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_ULTIVEICORIGFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [GN_LINHPROCGERALOTEPARASIST] VARCHAR  (2000)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PERMUTILMODOCONTPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_BASECALCTEMPJEJUPARASIST] CHAR  (2)  NOT NULL DEFAULT ('IP') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [GN_MATEPRIMCLASMATEPARASIST] VARCHAR  (200)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_CAPTAUTOPESOTCPPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXIBQTDEUNITREGIENTPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_LANCFORATURNABATPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_BAIXPALESEQUEXPEPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_ENVICARGWMSTERCPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_ALTECORREGIPRODPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PERMREGISEMPREIDENPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_NUMEUNICGTAPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [QN_TEMPSINCCONTFILIPARASIST] NUMERIC  (9,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_LIMIDTRETRRECUPARASIST] NUMERIC  (10,0)  NULL  DEFAULT ((0)) 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_TIPOPROCAUTOPENDPARASIST] CHAR  (2)  NOT NULL DEFAULT ('CM') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_ZEROESQUPRODPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [QN_PROCIMPRETIQPARASIST] NUMERIC  (10,0)  NOT NULL DEFAULT ((1)) 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NM_PREFLOCAPARASIST] VARCHAR  (25)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXCLIDENSEQUINVEPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_ALTEPESAAVULPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_STATEXCLAUTOFILIPARASIST] CHAR  (2)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_LIMIDATARETRPARASISTREID] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_INFOADICCARGEMBAPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_BASEPESOLIQUENTRPARASIST] CHAR  (2)  NOT NULL DEFAULT ('BE') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_IDENETIQCOMPPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_IMPRNUMECERTEMBADCQPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PERMDEVOEXCLINVEPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXPEDATAELABFUTUPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [QN_LIMIETIQIMPRPARASIST] NUMERIC  (10,0)  NOT NULL DEFAULT ((0)) 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [PC_QUEBPADRENTRAVESPARASIST] NUMERIC  (16,3)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_TIPOCONTPLACCOMPPARASIST] CHAR  (2)  NOT NULL DEFAULT ('CC') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NM_PREFGRUPPARASIST] VARCHAR  (25)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXIBPESOBASEPALEPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_VISUPEDIOUTRUSUAPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_MAXIQUADGALPESPEPARASIST] INT   NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXIBEMBABASEEXPEPARASIST] CHAR  (1)  NOT NULL DEFAULT ('C') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_REIDEMBAESTOFECHPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_INTEWMSTERCPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_LIMIIDADENTRAVEVIVAPARASIST] NUMERIC  (10,0)  NOT NULL DEFAULT ((100)) 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXCLCARGPRIMPESAPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_CONTMSRASTFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PESAMANUREGIDESC] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [QN_DIGICODIPRODPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_MODEETIQPARAPREIDENPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_TARACAVAEXPEPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [GN_MASCENDEPARASIST] VARCHAR  (25)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [GN_MODEEMBADCQPARASIST] CHAR  (1)  NOT NULL DEFAULT ('1') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [ID_METOAPANPADRPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_UTILNOVOCHECLISTPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_SINCCONTAPOSLOGIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_TIPOAUTEPERMPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [QN_TOLEVALIRECEFILIPARASIST] NUMERIC  (5,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NR_QTDEDIGIEXIBGTAPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_MANTBOLECORRNFEPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [NM_ENDEEDITRELAPARASIST] VARCHAR  (200)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_DATABASEPRODREPRPARASIST] CHAR  (2)  NOT NULL DEFAULT ('DP') 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [GN_MODEETIQCONSPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PERMCNPJDUPLPARASIST] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXECTOTAPROGMULTPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_PERMTRANENTRTUNEPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_VALICORTCONTPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_REALTERCPESAPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_CARRPERFGRUPUSUAPARASIST] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXIBMOTIMOVIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_EXIBINFOORDEPROGPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO ADD [FL_TIPOVERIORAVFILIPARASIST] CHAR  (2)  NULL  
//

ALTER TABLE SCT_USUARIO_EMPRFILI ADD [ID_USUAEMPRFILI] INT   NULL  
//

ALTER TABLE SCT_USUARIO_EMPRFILI ADD [FX_USUARIO_EMPRFILI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE FORNECEDOR ADD [GN_GS1FORN] VARCHAR  (25)  NULL  
//

ALTER TABLE BAIRRO ADD [DISTRICTID] UNIQUEIDENTIFIER  NOT NULL DEFAULT (NEWID()) 
//

ALTER TABLE BAIRRO ADD [CREATEDAT] DATETIME  NULL  
//

ALTER TABLE EXPEDICAO_CARGA_IDENTIFICACAO ADD [FL_REPEIDENCARGEXPE] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PESAGEM_AGRUPADA ADD [NR_LOTERASTPESAAGRU] VARCHAR  (25)  NULL  
//

ALTER TABLE PESAGEM_AGRUPADA ADD [ID_PALEEXPE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MARCA ADD [GN_IMAGMARC] VARBINARY  (MAX)  NULL  
//

ALTER TABLE CLIENTE_GERAL ADD [GN_EDI_MUTU_CLIE] VARCHAR  (15)  NULL  
//

ALTER TABLE CLIENTE_GERAL ADD [GN_EDI_SEND_CLIE] VARCHAR  (15)  NULL  
//

ALTER TABLE CUSTO_DIARIO_PRODUTO ADD [FL_SINCPRODDIARCUST] CHAR  (2)  NULL  DEFAULT ('AS') 
//

ALTER TABLE PRODUCAO_TUNEL ADD [FL_CONTOPERTUNEPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_TUNEL ADD [GN_TEMPTUNERESFTUNEPROD] CHAR  (5)  NULL  
//

ALTER TABLE PRODUCAO_TUNEL ADD [GN_TEMPTUNECONGTUNEPROD] CHAR  (5)  NULL  
//

ALTER TABLE PRODUCAO_TUNEL ADD [FL_RESTCONDTUNEPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_FILIAL ADD [NM_GRUPLOCAFILISIST] VARCHAR  (100)  NULL  
//

ALTER TABLE SISTEMA_FILIAL ADD [GN_URLWEBSERVFILISIST] VARCHAR  (200)  NULL  
//

ALTER TABLE DISTRIBUICAO_CENTRO ADD [ID_ALMOXARIFADO_DEVOLUCAO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ADD [ID_TRANREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ADD [DT_ENVIMOVIREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ADD [ID_ALMOXARIFADO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ADD [FL_SINCMIDDMOVIREGIPROD] CHAR  (2)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ADD [ID_ALMOXARIFADO_ORIG] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ADD [ID_PALEEXPE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ADD [ID_ALMOXARIFADO_DEST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PESAGEM_GAIOLA ADD [FL_TIPOPESAANIMGAIOPESA] CHAR  (2)  NULL  
//

ALTER TABLE PESAGEM_GAIOLA ADD [ID_USUAVINCENTRGAIOPESA] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PESAGEM_GAIOLA ADD [IE_LOTEGAIOPESA] VARCHAR  (40)  NULL  
//

ALTER TABLE PESAGEM_GAIOLA ADD [DT_VINCENTRGAIOPESA] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_BALANCA ADD [ID_CENTCUST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_BALANCA ADD [FL_FILTRPRODCUSTBALAPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_USUARIO ADD [NM_IMPRETIQVISUUSUASIST2] VARCHAR  (260)  NULL  
//

ALTER TABLE SISTEMA_USUARIO ADD [ID_CONFDISP] VARCHAR  (20)  NULL  
//

ALTER TABLE SISTEMA_USUARIO ADD [LOGINIDUSUASIST] VARCHAR  (50)  NULL  
//

ALTER TABLE SISTEMA_USUARIO ADD [NM_IMPRETIQVISUUSUASIST1] VARCHAR  (260)  NULL  
//

ALTER TABLE MATERIAL ADD [FL_BLOQTEMPMATE] CHAR  (1)  NULL  
//

ALTER TABLE MATERIAL ADD [GN_MOTIISENANVIMATE] VARCHAR  (255)  NULL  
//

ALTER TABLE MATERIAL ADD [BKP_IE_MATE] VARCHAR  (15)  NULL  
//

ALTER TABLE MATERIAL ADD [VL_PRECMAXICONSMATE] NUMERIC  (16,2)  NULL  
//

ALTER TABLE MATERIAL ADD [FL_OBRILOFMATE] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE MATERIAL ADD [GN_CODIANVIMATE] VARCHAR  (13)  NULL  
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD [DT_VALITRANMATEALMO] DATETIME  NULL  
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD [FL_SINCERPTRANALMOMATE] CHAR  (1)  NULL  
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD [DT_SINCERPTRANALMOMATE] DATETIME  NULL  
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD [NR_TENTSINCERPTRANALMOMATE] INT   NULL  
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD [DT_PRODTRANMATEALMO] DATETIME  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [ID_USUAMOVIPALEEXPE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [GN_JANEMOVIPALEEXPE] VARCHAR  (100)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [GN_MSGEMOVIPALEEXPE] VARCHAR  (100)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [FL_SINCMIDDMOVIPALEEXPE] CHAR  (2)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [ID_PEDIVENDMOVIPALEEXPE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [ID_EXPECARGMOVIPALEEXPE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [QN_EMBAANTEMOVIPALEEXPE] DECIMAL  (16,4)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [FL_STATUSMOVIPALEEXPE] CHAR  (2)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE_MOVIMENTACAO ADD [QN_EMBAATUAMOVIPALEEXPE] DECIMAL  (16,4)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_ENTRADA ADD [ID_FECHTRANMOTOTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE CRIACAO_LOTE_PCC01Q_DOCU ADD [FL_CONFDOCUPCCQLOTECRIA] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE BELL_CURVE_INTE ADD [IE_GRADINTECURVBELL] VARCHAR  (25)  NULL  
//

ALTER TABLE BELL_CURVE_INTE ADD [NR_LOTEINTECURVBELL] VARCHAR  (40)  NULL  
//

ALTER TABLE BELL_CURVE_INTE ADD [IE_LOTEINTECURVBELL] VARCHAR  (40)  NULL  
//

ALTER TABLE BELL_CURVE_INTE ADD [FL_GRADINTECURVBELL] CHAR  (1)  NOT NULL DEFAULT ('A') 
//

ALTER TABLE BELL_CURVE_INTE ADD [ID_EQUIPAMENTO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ALMOXARIFADO ADD [FL_CAPAESTOALMO] CHAR  (1)  DEFAULT ('S') NULL 
//

ALTER TABLE ALMOXARIFADO ADD [FL_ENVIESCOINVEALMO] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE ALMOXARIFADO ADD [FL_PRINALMO] CHAR  (1)  NULL  
//

ALTER TABLE ALMOXARIFADO ADD [QN_PALEESTOALMO] NUMERIC  (16,6)  NULL  
//

ALTER TABLE ALMOXARIFADO ADD [QN_CAPAESTOALMO] NUMERIC  (16,6)  NULL  
//

ALTER TABLE ALMOXARIFADO ADD [ID_ALMOXARIFADO_PRINCIPAL] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ALMOXARIFADO ADD [FL_PERMTRANALMO] CHAR  (2)  NOT NULL DEFAULT ('AM') 
//

ALTER TABLE ALMOXARIFADO ADD [FL_PERMMOVIALMO] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD [FL_TARACAVAREGIPESASAID] CHAR  (1)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD [GN_PLACCAVAREGIPESASAID] VARCHAR  (8)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD [QN_TARACAVABRUTREGIPESASAID] NUMERIC  (16,3)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD [QN_TARACAVATARAREGIPESASAID] NUMERIC  (16,3)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD [GN_PLACCAVATARAREGIPESASAID] VARCHAR  (8)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD [ID_FECHTRANMOTOTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD [GN_PLACCAVABRUTREGIPESASAID] VARCHAR  (8)  NULL  
//

ALTER TABLE AVE_TIPO ADD [ID_LINHPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ALMOXARIFADO ADD [ID_UNIDMEDIMATEALMO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ALMOXARIFADO ADD [QN_PADRFORNMATEALMO] NUMERIC  (16,6)  NULL  
//

ALTER TABLE PESAGEM_REGISTRO_TRANSFER ADD [ID_FECHTRANMOTOTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULT_IMPO ADD [DT_ELABMULTPROGPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULT_IMPO ADD [NM_ESTRCOMPMATEEMBA] VARCHAR  (20)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULT_IMPO ADD [IE_CENTCUST] VARCHAR  (25)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULT_IMPO ADD [IE_MULTPROGPROD] VARCHAR  (25)  NULL  
//

ALTER TABLE ABAT_UNID_ESTR_PENDURA_ESTACAO ADD [FL_MEDEESTAPENDESTRUNIDABAT] CHAR  (1)  NULL  
//

ALTER TABLE ABAT_UNID_ESTR_PENDURA_ESTACAO ADD [IE_ESTAPENDESTRUNIDABAT] VARCHAR  (25)  NULL  
//

ALTER TABLE ABAT_UNID_ESTR_PENDURA_ESTACAO ADD [FL_REDIESTAPENDESTRUNIDABAT] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE ABAT_UNID_ESTR_PENDURA_ESTACAO ADD [ID_EQUIPAMENTO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ABAT_UNID_ESTR_PENDURA_ESTACAO ADD [FL_TIINESTAPENDESTRUNIDABAT] CHAR  (2)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_MATE_PRIM ADD [QN_QTDEPRIMMATEMATEEMBA_ERP] NUMERIC  (16,6)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_MATE_PRIM ADD [ID_UNIDMEDI_ERP] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_COMPOSICAO ADD [QN_COMPMATEEMBA_ERP] NUMERIC  (16,6)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_COMPOSICAO ADD [FL_ATIVCOMPMATEEMBA] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE MATERIAL_EMBALAGEM_COMPOSICAO ADD [PC_REFUMATEEMBA] NUMERIC  (16,3)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_COMPOSICAO ADD [ID_UNIDMEDI_ERP] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PESAGEM_TICKET ADD [NM_MOTOFECHTICKPESA] VARCHAR  (60)  NULL  
//

ALTER TABLE PESAGEM_TICKET ADD [NM_MOTOTICKSEGUPESA] VARCHAR  (60)  NULL  
//

ALTER TABLE PESAGEM_TICKET ADD [ID_MOTOTRANSEGUPESA] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PROD_PROG_SIMU_LINH_CARG_ME ADD [QN_DOWNSIZEMATEEMBACALISIPRPD] NUMERIC  (20,10)  NULL  
//

ALTER TABLE TRP017_IDENTIFICACAO_PRODUCAO ADD [QN_EMBADESMREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE TRP017_PEDIDO_TRANSFERENCIA ADD [ID_VEICTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE ADD [FL_SINCMIDDPALEEXPE] CHAR  (2)  NOT NULL DEFAULT ('NS') 
//

ALTER TABLE EXPEDICAO_PALETE ADD [QN_PRODEMBAPALEEXPE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE ADD [ID_BALANCA] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_PALETE ADD [GN_SEQUEXTEPALEEXPE] VARCHAR  (25)  NULL  
//

ALTER TABLE TRP017_PEDIDOS ADD [ID_VEICTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE INSPECAO_LOTE_RESULTADO ADD [GN_LABORESPRESULOTEINSP] VARCHAR  (200)  NULL  
//

ALTER TABLE INSPECAO_LOTE_RESULTADO ADD [GN_CSNDCPOARESULOTEINSP] VARCHAR  (100)  NULL  
//

ALTER TABLE INSPECAO_LOTE_RESULTADO ADD [GN_LABOANALRESULOTEINSP] VARCHAR  (200)  NULL  
//

ALTER TABLE INSPECAO_LOTE_RESULTADO ADD [GN_LABOLAUDRESULOTEINSP] VARCHAR  (200)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_AUTOSEMBATCFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_TROCANIMFILIPARASIST] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_SEQUEXTEPALEFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_REGIPRODBALAOEEFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_MODEFECHCUSTFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_EXIGPERIFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [GN_URLWSCONTCARGFILIPARASIST] VARCHAR  (500)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [ID_MOVITRANOUTRFILIPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_MOTIDESTPRODFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_BATCAUTOPRODFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_OBRIALMOPALEFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [NR_CANAPADRFILIPARASIST] NUMERIC  (9,0)  NOT NULL DEFAULT ((1)) 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_FECHESTOINTEERPFILIPARASIST] CHAR  (1)  DEFAULT ('S') NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_CONTLOFMATEFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_PERMTRANSEQUFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_OBRICONTMATEFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_ETIQDESIVISUFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_BLOQLEITERROFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [NR_MODEETSQPALEFILIPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [ID_MODEETIQMATEFILIPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [QN_TEMPSINCCONTFILIPARASIST] NUMERIC  (9,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_SSLWSCONTCARGFILIPARASIST] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_ZEROESQUPRODPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [ID_MOVIMANUSAIDFILIPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_QUALCONTMATEFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_METOTROCLOTEPARASISTFILI] CHAR  (2)  NOT NULL DEFAULT ('PR') 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [ID_MOVIBAIXDIREFILIPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_EXIBTELAAJUSFILIPARASIST] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [QN_TOLEAJUSTARAFILIPARASIST] NUMERIC  (16,3)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_PERMTRANEMPEFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [QN_DIASSINCCHECKFILIPARASIST] NUMERIC  (10,0)  NOT NULL DEFAULT ((3)) 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_RATEDESCESTAFILIPARASIST] CHAR  (1) DEFAULT ('N') NOT NULL
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_BASECALCTEMPGALPPARASIST] CHAR  (2) DEFAULT ('IP') NOT NULL
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [GN_LINKBANCERPFILIPARASIST] VARCHAR  (200)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_OBRIDATAVALIFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_FECHPALEAUTOFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_PERMSEQUPALEFILIPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_STATPRIMPESAORDEPESA] CHAR  (2)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_BLOQIMPRONLINEFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_DESTLAUDAGUAFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [DT_INICEXPOPRODFILIPARASIST] DATETIME  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [QN_DIASFILTMIDDFILIPARASIST] INT   NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_LABOCONTMATEFILIPARASIST] CHAR  (1)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_ESTRPRODPREIFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [ID_PACKPRODPADR] NUMERIC  (10,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [QN_TOLEVALIRECEFILIPARASIST] NUMERIC  (5,0)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_TRANLOFMATEFILIPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_GERADESTDEVOFILIPARASIST] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_LOTESECUPREIDENFILIPARASIST] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_TIPOAJUSFILIPARASIST] CHAR  (2)  NULL  DEFAULT ('ES') 
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [FL_TIPOVERIORAVFILIPARASIST] CHAR  (2)  NULL  
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD [ID_MOVIMANUENTRFILIPARASIST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE FORM_QUAL_META_ITEM_ANALISE ADD [GN_CONFFINAFORMQUALMETAITANAL] VARCHAR  (200)  NULL  
//

ALTER TABLE OPERACAO_TIPO ADD [FL_DEDUICMSBASECOFITIPOOPER] CHAR  (1) DEFAULT ('N') NOT NULL 
//

ALTER TABLE OPERACAO_TIPO ADD [FL_DEDUICMSBASEPISTIPOOPER] CHAR  (1) DEFAULT ('N') NOT NULL 
//

ALTER TABLE FORM_QUAL_META_ITEM_EXCL ADD [FL_MULTVALOFORMQUALMETAITEM] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE FORM_QUAL_META_ITEM_EXCL ADD [FL_IDENCOLUFORMQUALMETAITEM] VARCHAR  (32)  NULL  
//

ALTER TABLE INSPECAO_PARAMETROS_PRODUTO ADD [FL_GRUPPRODPARAINSP] CHAR  (1) DEFAULT ('T')  NOT NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_DESTINACAO ADD [ID_DEVOVENDDIRE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_DESTINACAO ADD [ID_PEDIDEVOVEND] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_DESTINACAO ADD [DT_CONTDESTREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_DESTINACAO ADD [FL_SINCMIDDDESTREGIPROD] CHAR  (2)  NOT NULL DEFAULT ('NS') 
//

ALTER TABLE FORMULARIO_QUALIDADE ADD [GN_IDENMOBIFORMQUAL] VARCHAR  (38)  NOT NULL DEFAULT (NEWID()) 
//

ALTER TABLE FORMULARIO_QUALIDADE ADD [GN_HASHFORMQUAL] VARCHAR  (38)  NOT NULL DEFAULT (NEWID()) 
//

ALTER TABLE FORMULARIO_QUALIDADE ADD [FL_BLOQFORMQUAL] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE MATERIAL_FILIAL ADD [ID_ALMOXARIFADO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_DESCARTE ADD [FL_REGIDIVIDESCPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_DESCARTE ADD [ID_ESTAPENDESTRUNIDABAT] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_TAGS_ETIQ ADD [GN_IMAGTAGSETIQMATEEMBA] VARBINARY  (MAX)  NULL  
//

ALTER TABLE PRODUCAO_DESCARTE_MOTIVO ADD [FL_ATIVMOTIDESCPROD] CHAR  (1)  DEFAULT ('S') NOT NULL 
//
ALTER TABLE FORMULARIO_QUALIDADE_META ADD [ID_FORMQUALMETACAMPCUST1] NUMERIC  (10,0)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [ID_FORMQUALMETACAMPCUST4] NUMERIC  (10,0)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [IE_FORMQUALMETA] VARCHAR  (25)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [FL_OBRIFORMQUALMETA] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [FL_IDENTABEITEMFORMQUALMETA] VARCHAR  (32)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [ID_FORMQUALMETACAMPCUST2] NUMERIC  (10,0)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [ID_FORMQUALMETACAMPCUST3] NUMERIC  (10,0)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [GN_MENSFORMQUALMETA] VARCHAR  (200)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [FL_GERABLOQFORMQUALMETA] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [ID_FORMQUALMETACAMPCUST5] NUMERIC  (10,0)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD [GN_SCRIBLOQFORMQUALMETA] VARCHAR  (MAX)  NULL  
//

ALTER TABLE FORMULARIO_QUALIDADE_META_ITEM ADD [FL_MULTVALOFORMQUALMETAITEM] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE FORMULARIO_QUALIDADE_META_ITEM ADD [FL_IDENCOLUFORMQUALMETAITEM] VARCHAR  (32)  NULL  
//

ALTER TABLE NOTA_FISCAL_ITEM ADD [GN_LOTEITEMNOTAFISC] VARCHAR  (20)  NULL  
//

ALTER TABLE NOTA_FISCAL_ITEM ADD [QN_LOTEITEMNOTAFISC] NUMERIC  (8,3)  NULL  
//

ALTER TABLE NOTA_FISCAL_ITEM ADD [DT_FABRLOTEITEMNOTAFISC] DATETIME  NULL  
//

ALTER TABLE NOTA_FISCAL_ITEM ADD [DT_VALILOTEITEMNOTAFISC] DATETIME  NULL  
//

ALTER TABLE NOTA_FISCAL_ITEM ADD [GN_CODIAGRELOTEITEMNOTAFISC] VARCHAR  (20)  NULL  
//

ALTER TABLE NOTA_FISCAL_ITEM ADD [VL_ICMSDIFEITEMNOTAFISC] NUMERIC  (16,3)  NULL  
//

ALTER TABLE CIDADE ADD [CITYID] UNIQUEIDENTIFIER  NOT NULL DEFAULT (NEWID()) 
//

ALTER TABLE CIDADE ADD [CREATEDAT] DATETIME  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [FL_CONSTURNEQUI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EQUIPAMENTO ADD [GN_SQLCONSULTMREGIPROCAUTOEQUI] VARCHAR  (2000)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [NR_TOLEPRODNOMIEQUI] NUMERIC  (16,6)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [GN_SQLUPDASTATREGIPROCEQUI] VARCHAR  (2000)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [QN_COMPEQUI] NUMERIC  (16,3)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [FL_CALCTAXAOCUPEQUI] CHAR  (1)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [FL_EXIBAPENPRODCONF] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EQUIPAMENTO ADD [FL_CAPAPONDEQUI] CHAR  (1)  NULL  DEFAULT ('P') 
//

ALTER TABLE EQUIPAMENTO ADD [QN_CAPAMINIEQUI] NUMERIC  (16,6)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [QN_LARGEQUI] NUMERIC  (16,3)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [ID_MOTIPERDDESEEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [ID_MOTIHORAEXTREQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [NR_TEMPMAXIMICRPARAEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [ID_EQUIGRUP] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [GN_SQLCONSREGIPROCEQUI] VARCHAR  (2000)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [ID_MOTIMICRPARAEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [ID_MOTIPARAFORATURNEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [GN_CONFVERIPESO] VARCHAR  (1)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [ID_UNIDMEDIDIMEEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [FL_TIPOBELLCURVEQUI] CHAR  (1)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [QN_ALTUEQUI] NUMERIC  (16,3)  NULL  
//

ALTER TABLE EQUIPAMENTO ADD [NR_TEMPMINIPERDADESEEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA_TURNO_TIPO ADD [NR_SEQUTURNTIPOTURNAVEVIVAENTR] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_CONTADOR_VELOCIDAD ADD [QN_REGICONTEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_CONTADOR_VELOCIDAD ADD [QN_VELOCONTEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_CONTADOR_VELOCIDAD ADD [NR_TURNVELOCONTEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE DOENCA_TIPO ADD [FL_RESPTIPODOEN] CHAR  (1)  NULL  
//

ALTER TABLE DOENCA_TIPO ADD [IE_TIPODOEN] VARCHAR  (25)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA ADD [ID_TRANMOTOTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA ADD [ID_VEICTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA ADD [DT_PADRENTRMATE] DATETIME  NULL  
//

ALTER TABLE MATERIAL_ENTRADA ADD [ID_FORNECEDOR_TRANSPORTADOR] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA ADD [DT_SAIDENTRMATE] DATETIME  NULL  
//

ALTER TABLE MATERIAL_ENTRADA ADD [ID_CARGENTRMATE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA ADD [GN_PLANCEGAENTRMATE] VARCHAR  (25)  NULL  
//

ALTER TABLE CLASSIFICACAO_FISCAL ADD [FL_NFEENVIMEDICLASFISC] CHAR  (1)  NULL  
//

ALTER TABLE PRODUCAO_CARCACA_INTE ADD [IE_LOTEINTECARCPROD] VARCHAR  (40)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_REPOSITORIO ADD [ID_RECIPIENTE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_REPOSITORIO ADD [ID_TOTAREGIPRODDETA] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_REPOSITORIO ADD [DT_ENVIREPOREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_REPOSITORIO ADD [ID_FECHPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_REPOSITORIO ADD [ID_PACKPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE INTE_PRODUCAO_BATCH_SAP ADD [FL_TIPOCONSMATE] VARCHAR  (2)  NOT NULL DEFAULT ('CO') 
//

ALTER TABLE VEICULO_TIPO ADD [FL_TIPOPESAANIMTIPOVEIC] CHAR  (2)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_EQUIP_ITEM ADD [FL_ORIGITEMEQUIREGIPROD] CHAR  (2)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_EQUIP_ITEM ADD [DT_FINAITEMEQUIREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_EQUIP_ITEM ADD [DT_INICITEMEQUIREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_EQUIP_ITEM ADD [ID_PRODMATEEMBA] VARCHAR  (6)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA_ITEM ADD [FL_LAUDITEMENTRMATE] CHAR  (1)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA_ITEM ADD [NR_DOCUITEMENTRMATE] VARCHAR  (20)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA_ITEM ADD [DT_VALIITEMENTRMATE] DATETIME  NULL  
//

ALTER TABLE MATERIAL_ENTRADA_ITEM ADD [QN_CONFITEMENTRMATE] NUMERIC  (16,6)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA_ITEM ADD [ID_FORNECEDOR] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ENTRADA_ITEM ADD [DT_PRODITEMENTRMATE] DATETIME  NULL  
//

ALTER TABLE CRIACAO_LOTE_INTEGRACAO ADD [QN_ANIMALOJINTELOTECRIA] NUMERIC  (10,0)  NOT NULL DEFAULT ((0)) 
//

ALTER TABLE CRIACAO_LOTE_INTEGRACAO ADD [FL_LANCDADOREMUINTELOTECRIA] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE CRIACAO_LOTE_INTEGRACAO ADD [QN_GANHPESODIARINTELOTECRIA] NUMERIC  (15,2)  NOT NULL DEFAULT ((0)) 
//

ALTER TABLE CRIACAO_LOTE_INTEGRACAO ADD [QN_CONVALIMINTELOTECRIA] NUMERIC  (15,2)  NOT NULL DEFAULT ((0)) 
//

ALTER TABLE PRODUCAO_TURNO ADD [FL_INIDIAANTETURNPROD] CHAR  (1)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_FECH ADD [FL_GERAFECHDIARCUST_GERACOMP] CHAR  (2)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_FECH ADD [DT_FECHESTOREGIPROD_CAST] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_FECH ADD [DT_GERAFECHDIARCUST_GERACOMP] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_FECH ADD [DT_SINCESTOFECH] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_FECH ADD [FL_REPRFECHESTOREGIPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_FECH ADD [FL_STATSINCESTOFECH] CHAR  (2)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [ID_ORIGREGIPARAEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [ID_DIARTURNPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [GN_PROTEVENREGIPARAEQUI] VARCHAR  (25)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [FL_EXIBREGIPARAEQUI] CHAR  (1)  DEFAULT ('S') NOT NULL 
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [FL_CLASREGIPARAEQUI] CHAR  (1)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [NR_SEQUTURNREGIPARAEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [GN_OBSEEVENREGIPARAEQUI] VARCHAR  (2000)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA ADD [FL_ORIGREGIPARAEQUI] CHAR  (2)  NULL  
//

ALTER TABLE PRODUCAO_FECHAMENTO ADD [FL_PROCFECHPROD] VARCHAR  (1)  NULL  
//

ALTER TABLE PRODUCAO_FECHAMENTO ADD [DT_TOTADADOFECHPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_FECHAMENTO ADD [FL_ATIVFECHPROD] VARCHAR  (1)  NULL  
//

ALTER TABLE PRODUCAO_FECHAMENTO ADD [DT_PADRREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_FECHAMENTO ADD [GN_NUMELOTEPROCFECHPROD] VARCHAR  (50)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_LANC ADD [QN_TENTERPLANCESTOREGIPROD] INT   NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_LANC ADD [DT_SINCERPLANCESTOREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_LANC ADD [ID_SINCERPLANCESTOREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_LANC ADD [ID_LANCESTOREGIPROD_ORIGEM] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_TURNO_DIARIO_ITEM ADD [FL_INIDIAANTEITEMDIARTURNPROD] CHAR  (1)  NULL  
//

ALTER TABLE EMBALAGEM_DEFINICAO_VARIACAO ADD [PC_TOLEACIMVARIDEFIEMBA] NUMERIC  (16,3)  NULL  
//

ALTER TABLE EMBALAGEM_DEFINICAO_VARIACAO ADD [QN_PESOTOLEACIMVARIDEFIEMBA] NUMERIC  (16,3)  NULL  
//

ALTER TABLE EMBALAGEM_DEFINICAO_VARIACAO ADD [QN_PESOTOLEABAIVARIDEFIEMBA] NUMERIC  (16,3)  NULL  
//

ALTER TABLE EMBALAGEM_DEFINICAO_VARIACAO ADD [PC_TOLEABAIVARIDEFIEMBA] NUMERIC  (16,3)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA_MOTIVO ADD [FL_MICRPARAMOTIPARAEQUI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EQUIPAMENTO_PARADA_MOTIVO ADD [FL_PROTOBRIMOTIPARAEQUI] CHAR  (1)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA_MOTIVO ADD [FL_LANCMOTIPARAEQUI] CHAR  (1)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA_MOTIVO ADD [ID_PAIMOTIPARAEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_PARADA_MOTIVO ADD [ID_EVENPARAEQUI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MEDICAMENTO ADD [NM_PRINATIV] VARCHAR  (30)  NULL  
//

ALTER TABLE MEDICAMENTO ADD [QN_CARE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MEDICAMENTO ADD [IE_PRINATIV] VARCHAR  (30)  NULL  
//

ALTER TABLE PRODUCAO_BATCH ADD [ID_USUASISTFECHPRODBATCPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_BATCH ADD [GN_TAGJANEFECHPRODBATCPROD] VARCHAR  (10)  NULL  
//

ALTER TABLE PRODUCAO_BATCH ADD [FL_TIPOFECHPRODBATCPROD] CHAR  (1)  NULL  
//

ALTER TABLE PRODUCAO_BATCH ADD [DT_FECHPRODBATCPROD] DATETIME  NULL  
//

ALTER TABLE ABATE_UNIDADE_ESTR_LINH_REDI ADD [FX_REDILINHESTRUNIDABAT] CHAR  (1)  NULL  
//

ALTER TABLE MATERIAL_MANUTENCAO ADD [ID_UNIDMEDI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_MANUTENCAO ADD [DT_VALIMANUMATE] DATETIME  NULL  
//

ALTER TABLE MATERIAL_MANUTENCAO ADD [DT_PRODMANUMATE] DATETIME  NULL  
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD [NR_PRODVOLUEQUIPROD] NUMERIC  (16,6)  NULL  
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD [ID_UNIDMEDI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD [NR_PRODNOMIEQUIPROD] NUMERIC  (16,6)  NULL  
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD [ID_PRODVOLUUNIDMEDI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD [ID_MATERIAL] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD [NR_TOLEPRODNOMIEQUIPROD] NUMERIC  (16,6)  NULL  
//

ALTER TABLE TRANSPORTADOR_MOTORISTA ADD [FL_TIPOMOTOTRAN] CHAR  (2)  NOT NULL DEFAULT ('MT') 
//

ALTER TABLE TRANSPORTADOR_MOTORISTA ADD [GN_PASSMOTOTRAN] VARCHAR  (10)  NULL  
//

ALTER TABLE TRANSPORTADOR_MOTORISTA ADD [NR_CNHMOTOTRAN] VARCHAR  (25)  NULL  
//

ALTER TABLE PV_VENDA_DEVOLUCAO ADD [ID_VEICTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PV_VENDA_DEVOLUCAO ADD [FL_STATREGIPROD] VARCHAR  (2)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [DT_FECHCONTREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [ID_USUASIST_SAIDTUNEREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [QN_EMBADESMREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [NR_LOTERASTTERCREGIPROD] VARCHAR  (25)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [QN_PESOTOLEMINIREGIPROD] NUMERIC  (10,6)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [ID_RECIPIENTE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [QN_PESOTOLEMAXIREGIPROD] NUMERIC  (10,6)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [ID_FECHPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [ID_MOTIMOVIREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [ID_USUASIST_ENTRTUNEREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [NR_LOTERASTEXTEREGIPROD] VARCHAR  (25)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO ADD [GN_PERIRASTREGIPROD] VARCHAR  (10)  NULL  
//

ALTER TABLE PV_VENDA_DEVOLUCAO_DIRETA ADD [DT_FECHDIREDEVOVEND] DATETIME  NULL  
//

ALTER TABLE PV_VENDA_DEVOLUCAO_DIRETA ADD [ID_VEICTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PV_VENDA_DEVOLUCAO_DIRETA ADD [FL_GERADESTDIREDEVOVEND] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE ESTOQUE_RETROATIVO ADD [ID_SESSRETRESTO] NUMERIC  (10,0) NULL
//

ALTER TABLE ABATE_UNIDADE_ESTRUTURA ADD [QN_RETRDIASCORTESTRUNIDABAT] INT   NULL  
//

ALTER TABLE ABATE_UNIDADE_ESTRUTURA ADD [FL_CONTCORTBASEESTRUNIDABAT] CHAR  (2)  NULL  
//

ALTER TABLE ABATE_UNIDADE_ESTRUTURA ADD [QN_FUTUDIASCORTESTRUNIDABAT] INT   NULL  
//

ALTER TABLE ALMOXARIFADO_ENDEREC ADD [ID_AGRUENDEALMO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PEDIDO_DEVOLUCAO_VENDA ADD [FL_GERADESTPEDIDEVOVEND] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PEDIDO_DEVOLUCAO_VENDA ADD [ID_ALMODEVOPEDIDEVOVEND] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EMPRESA_FILIAL_LOCAL ADD [DT_RELAESTOLOCAFILIEMPR] DATETIME  NULL  
//

ALTER TABLE TAB_PRO125_DESTREPR ADD [NM_LINHPROD] VARCHAR  (50)  NULL  
//

ALTER TABLE TAB_PRO125_DESTREPR ADD [IE_MATEEMBA] VARCHAR  (25)  NULL  
//

ALTER TABLE TAB_PRO125_PRODREGI ADD [NM_LINHPROD] VARCHAR  (50)  NULL  
//

ALTER TABLE TAB_PRO125_PRODREGI ADD [IE_MATEEMBA] VARCHAR  (25)  NULL  
//

ALTER TABLE MATERIAL_INVENTARIO_ITEM ADD [DT_VALIITEMINVEMATE] DATETIME  NULL  
//

ALTER TABLE MATERIAL_INVENTARIO_ITEM ADD [DT_PRODITEMINVEMATE] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_DESTINACAO_MOTIVO ADD [FL_PROCMOTIDESTPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_DESTINACAO_MOTIVO ADD [FL_OUTRPADRMOTIDESTPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_DESTINACAO_MOTIVO ADD [FL_CONSMOTIDESTPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_DESTINACAO_MOTIVO ADD [FL_PROCPADRMOTIDESTPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_DESTINACAO_MOTIVO ADD [FL_CONSPADRMOTIDESTPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_DESTINACAO_MOTIVO ADD [FL_OUTRMOTIDESTPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE REGRA_FISCAL_ITEM ADD [FL_DEDUICMSBASECOFITEMREGRFISC] CHAR  (1) DEFAULT ('N') NOT NULL 
//

ALTER TABLE REGRA_FISCAL_ITEM ADD [FL_DEDUICMSBASEPISITEMREGRFISC] CHAR  (1) DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_REGISTRO_MATERIAL ADD [DT_VALIMATEREGIPROD] DATETIME  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MATERIAL ADD [ID_ALMMOXARIFADO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_MATERIAL ADD [DT_PRODMATEREGIPROD] DATETIME  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD [QN_UNDTARADEFIMATEEMBA] NUMERIC  (10,6)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD [FL_AGRUPRODPALEDEFIMATEEMBA] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD [PC_UNDTOLEMINIDEFIMATEEMBA] NUMERIC  (6,3)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD [FL_UNDTIPOPESODEFIMATEEMBA] CHAR  (1)  NOT NULL DEFAULT ('F') 
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD [PC_UNDTOLEMAXIDEFIMATEEMBA] NUMERIC  (6,3)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD [QN_UNDCAPANOMIDEFIMATEEMBA] NUMERIC  (10,6)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD [FL_PERMREGIINTEDEFIMATEEMBA] CHAR  (1)  NULL  
//

ALTER TABLE RELATORIO ADD [GN_ARQURELA] VARBINARY  (MAX)  NULL  
//

ALTER TABLE SEQUESTRO_MOTIVO ADD [FL_PERMDESTMOTISEQU] CHAR  (1)  NULL  
//
ALTER TABLE PEDIDO_ENTRADA_ITEM_COMP ADD [GN_COAGLOTECOMPITEMPEDIENTR] VARCHAR  (20)  NULL  
//

ALTER TABLE PEDIDO_ENTRADA_ITEM_COMP ADD [DT_FABRLOTECOMPITEMPEDIENTR] DATETIME  NULL  
//

ALTER TABLE PEDIDO_ENTRADA_ITEM_COMP ADD [GN_LOTECOMPITEMPEDIENTR] VARCHAR  (20)  NULL  
//

ALTER TABLE PEDIDO_ENTRADA_ITEM_COMP ADD [DT_VALILOTECOMPITEMPEDIENTR] DATETIME  NULL  
//

ALTER TABLE PEDIDO_ENTRADA_ITEM_COMP ADD [QN_LOTECOMPITEMPEDIENTR] NUMERIC  (8,3)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [FL_CONTEXCEPALEMATEEMBAFILI] CHAR  (1) DEFAULT ('S')  NOT NULL 
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [FL_SEQUAUTOPRODMATEEMBAFILI] CHAR  (1) DEFAULT ('N')  NOT NULL 
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [PC_UNDTOLEMAXIDEFIMATEEMBAFILI] NUMERIC  (6,3)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [QN_UNDCAPANOMIDEFIMATEEMBAFILI] NUMERIC  (10,6)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [FL_EXIGLOTEEMBUMATEEMBAFILI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [QN_UNDTARADEFIMATEEMBAFILI] NUMERIC  (10,6)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [FL_INTEPALEPRODMATEEMBAFILI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [GN_GRADMATEEMBAFILI] VARCHAR  (5)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [PC_UNDTOLEMINIDEFIMATEEMBAFILI] NUMERIC  (6,3)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [NR_LIMIDATAPADRMATEEMBAFILI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [NR_LIMIDATARETRMATEEMBAFILI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [FL_UTILEMBAREUTMATEEMBAFILI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [ID_MOTISEQUAUTOMATEEMBAFILI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [QN_REPEREGIPRODMATEEMBAFILI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [FL_UNDTIPOPESODEFIMATEEMBAFILI] CHAR  (1)  NOT NULL DEFAULT ('F') 
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD [FL_RESTEMBAPALEMATEEMBAFILI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE INTER_TUNE_EDATA ADD [GN_MENSERROTUNE] VARCHAR  (4000)  NULL  
//

ALTER TABLE INTER_TUNE_EDATA ADD [DT_MENSERROTUNE] DATETIME  NULL  
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD [FL_ERROIMPREMBAINDI] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD [GN_PERICONTEMBAINDI] VARCHAR  (25)  NULL  
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD [GN_MENSERROIMPREMBAINDI] VARCHAR  (2000)  NULL  
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD [GN_OBSECONTEMBAINDI] VARCHAR  (10)  NULL  
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD [ID_SSCCCONTEMBAINDI] VARCHAR  (18)  NULL  
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD [FL_PREVISUETIQCONTEMBAINDI] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD [GN_LOTEEMBUCONTEMBAINDI] VARCHAR  (25)  NULL  
//

ALTER TABLE ESTOQUE_CONSOLIDADO ADD [IE_MATEEMBA] VARCHAR  (25)  NULL  
//

ALTER TABLE INTER_TUNE_EDATA_REJEIT ADD [GN_MENSREJE] VARCHAR  (MAX)  NULL  
//

ALTER TABLE ALMOXARIFADO_TIPO ADD [IE_TIPOALMO] VARCHAR  (25)  NULL  
//

ALTER TABLE ETIQUETA_DESIGN ADD [FL_UTILCODISSCCDESIETIQ] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_REGISTRO_MOVI_TIPO ADD [ID_CCTIPOMOVIREGIPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE CRIACAO_LOTE_VISITA ADD [ID_CATAMIDI] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [ID_ENTRAVEVIVA_ORIG] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [ID_USUASIST_INICDESC] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_INICENTRINSEENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_TIPOPESAANIMENTRAVEVIVA] CHAR  (2)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [NR_QUADENTRAVEVIVA] INT   NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_INICDESCENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [QN_MORTAUTOENTRAVEVIVA] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [ID_BOXGALPESPE] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_METOINICDESCENTRAVEVIVA] CHAR  (1)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_SINCDESCENTRAVEVIVA] CHAR  (2)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [GN_SERIGTAENTRAVEVIVA] VARCHAR  (5)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_ALTEGALPENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_TERMDESCENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [NR_SEGUEQUIAPANENTRAVEVIVA] VARCHAR  (15)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [ID_GRUPENTRAVEVIVA] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [VL_PERCCARGDESCPROD] NUMERIC  (10,2)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [QN_PESOMEDIPROGENTRAVEVIVA] NUMERIC  (10,2)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_METOTERMDESCENTRAVEVIVA] CHAR  (1)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [ID_USUASIST_TERMDESC] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_ABERPENDSISTENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_FECHPENDSISTENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [ID_FECHTRANMOTOTRAN] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [ID_USUASIST_ALTEGALP] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_INICSAIDINSEENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_SINCMIDDENTRAVEVIVA] CHAR  (2)  NOT NULL DEFAULT ('NS') 
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [QN_PESOQUEBPADRENTRAVEVIVA] NUMERIC  (16,3)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_SINCMIDDDESCENTRAVEVIVA] CHAR  (2)  NOT NULL DEFAULT ('NS') 
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_BASECALCJEJUENTRAVEVIVA] CHAR  (2)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_TERMENTRINSEENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [IE_LOTEENTRAVEVIVA] VARCHAR  (40)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [DT_TERMSAIDINSEENTRAVEVIVA] DATETIME  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_METOINSEENTRAVEVIVA] CHAR  (2)  NULL  
//

ALTER TABLE ENTRADA_AVE_VIVA ADD [FL_APLIPERCQUEBPADRENTRAVEVIVA] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_REGISTRO_ORIG_AVEVIVA ADD [IE_INTELOTECRIA] VARCHAR  (40)  NULL  
//

ALTER TABLE PRODUCAO_GRUPO ADD [FL_IGNOTIPOAVEGRUPPROD] CHAR  (1)  DEFAULT ('N') NULL 
//

ALTER TABLE ESTOQUE_FECHAMENTO_ITEM ADD [FL_ALTEFILIITEMFECHESTO] CHAR  (1)  NULL  
//

ALTER TABLE ESTOQUE_FECHAMENTO_ITEM ADD [ID_ESTRMATEEMBAFECHESTO] NUMERIC  (10,0)  NULL  
//

ALTER TABLE MATERIAL_ORIGEM ADD [IE_ORIGMATE] VARCHAR  (25)  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [ID_USUASIST_DEVOCARG] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [QN_PESOMEDIPREVANIMORDEPESA] NUMERIC  (13,3)  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [DT_RECECRPORDEPESA] DATETIME  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [NR_CODICAMIRFIDORDEPESA] VARCHAR  (50)  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [DT_CONTORDEPESA] DATETIME  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [ID_VEICTRANCOMP] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [GN_DESCDISTPROPORDEPESA] VARCHAR  (20)  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [DT_DEVOCARGORDEPESA] DATETIME  NULL  
//

ALTER TABLE PESAGEM_ORDEM ADD [NR_SEGUEQUIAPANORDETRAN] VARCHAR  (15)  NULL  
//

ALTER TABLE ESTOQUE_FECHAMENTO_MATE ADD [FL_ALTEFILIMATEFECHESTO] CHAR  (1)  NULL  
//

ALTER TABLE TIPO_EQUIPAMENTO ADD [FL_EQUITIPO] CHAR  (2)  NOT NULL DEFAULT ('OU') 
//

ALTER TABLE PRODUCAO_INVENTARIO_IDEN ADD [FL_REPEIDENINVEPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_INVENTARIO_IDEN ADD [FL_SEQUINVEPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_REGISTRO_TR_ITEM ADD [FL_REPEITEMTRANREGIPROD] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PRODUCAO_REGISTRO_TR_ITEM ADD [FL_IDENSEQUITEMTRANREGIPROD] CHAR  (1)  NULL  
//

ALTER TABLE EXPEDICAO_CARGA ADD [FL_PICKINICSYSTLOGICARGEXPE] CHAR  (2)  NULL  
//

ALTER TABLE EXPEDICAO_CARGA ADD [FL_VEICPRONCARRCARGEXPE] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EXPEDICAO_CARGA ADD [DT_LIBEVEICCARRCARGEXPE] DATETIME  NULL  
//

ALTER TABLE EXPEDICAO_CARGA ADD [FL_PERMEXPESEQUTOTACARGEXPE] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EXPEDICAO_CARGA ADD [FL_SINCMIDDCARGEXPE] CHAR  (2)  NOT NULL DEFAULT ('NS') 
//

ALTER TABLE EXPEDICAO_CARGA ADD [ID_USUASIST_LIBEVEICCARR] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_CARGA ADD [FL_EXPEDIRECARGEXPE] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EXPEDICAO_CARGA ADD [ID_USUASIST_EXPEDATAELABFUTU] NUMERIC  (10,0)  NULL  
//

ALTER TABLE EXPEDICAO_CARGA ADD [FL_EXPEDATAELABFUTUCARGEXPE] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE EXPEDICAO_CARGA ADD [NR_ORDECHEGCARGEXPE] INT   NULL  
//

ALTER TABLE PRODUCAO_INVENTARIO_ITEM ADD [QN_UNIDTUNEITEMINVEPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_INVENTARIO_ITEM ADD [QN_PESOTRANITEMINVEPROD] NUMERIC  (16,3)  NULL  
//

ALTER TABLE PRODUCAO_INVENTARIO_ITEM ADD [QN_EMBATRANITEMINVEPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_INVENTARIO_ITEM ADD [QN_UNIDTRANITEMINVEPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_INVENTARIO_ITEM ADD [QN_EMBATUNEITEMINVEPROD] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_INVENTARIO_ITEM ADD [QN_PESOTUNEITEMINVEPROD] NUMERIC  (16,3)  NULL  
//

ALTER TABLE PEDIDO_VENDA_EXCLUSAO ADD [ID_DISTRIBUIDOR] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD [FL_UTILCODISSCCVERSDESIETIQ] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD [GN_CODIREFEVERSDESIETIQ] VARCHAR  (100)  NULL  
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD [NM_VERSDESIETIQ] VARCHAR  (500)  NULL  
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD [ID_USUASIST_PUBL] NUMERIC  (10,0)  NULL  
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD [FL_ATIVVERSDESIETIQ] CHAR  (1)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TOTAL ADD [ID_CENTCUST] NUMERIC  (10,0)  NULL  
//

ALTER TABLE PRODUCAO_REGISTRO_TOTAL ADD [DT_ELABMULTPROGPROD] DATETIME  NULL  
//

ALTER TABLE ABATE_META ADD [NR_MESMETAABAT] INT   NOT NULL 
//

ALTER TABLE ABATE_META ADD [NR_ANOMETAABAT] INT   NOT NULL 
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS10PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS03PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS09PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [DT_IMPRINVOPEDIVEND] DATETIME  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS07PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS02PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [DT_IMPRORDEENTRPEDIVEND] DATETIME  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS08PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS05PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS06PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_TEXT0001PEDIVEND] VARCHAR  (100)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS01PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PEDIDO_VENDA ADD [FL_CONSPEDIVEND] CHAR  (1)  DEFAULT ('N') NOT NULL 
//

ALTER TABLE PEDIDO_VENDA ADD [GN_CONS04PEDIVEND] VARCHAR  (250)  NULL  
//

ALTER TABLE PRODUCAO_PROGRAMACAO ADD [IE_PROGPROD] VARCHAR  (25)  NULL  
//

ALTER TABLE SCT_USUARIO ADD CONSTRAINT UNQ_USUASISTSCT UNIQUE (ID_USUARIO);
//

ALTER TABLE DADOS_RETENCAO ADD CONSTRAINT FK_RETEDADO_USUASCT FOREIGN KEY (ID_USUARIO) REFERENCES SCT_USUARIO(ID_USUARIO);
//

ALTER TABLE SISTEMA_USUARIO ADD CONSTRAINT UNQ_USUASISTID UNIQUE (ID_USUASIST);
//

ALTER TABLE CLIENTE_DESBLOQ_HIST ADD CONSTRAINT FK_HISTDESBCLIE_USUA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC [SP_ExcluiEstatisticas] 'VL_COMPDIARCONSCUST', 'CUSTO_CONSTITUICAO_DIARIA';
//

ALTER TABLE CUSTO_CONSTITUICAO_DIARIA ALTER COLUMN VL_COMPDIARCONSCUST NUMERIC(20, 10);
//

ALTER TABLE MATERIAL_EMBALAGEM_LPROC_COMPO ADD CONSTRAINT FK_MATEEMBALINHCOMP_USUASISTAL FOREIGN KEY (ID_USUASIST_ALTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_EMBALAGEM_LPROC_COMPO ADD CONSTRAINT FK_MATEEMBALINHCOMP_USUASISTIN FOREIGN KEY (ID_USUASIST_INCL)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE GERA_PESQ_TOUCH_USUASIST ADD CONSTRAINT FK_USUATOUCPESQGERA_USUA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM_ITEM ADD CONSTRAINT FK_MATEENTRCONTITEM_ENTRCARG FOREIGN KEY (ID_CARGENTRMATE)REFERENCES MATERIAL_ENTRADA_CARGA(ID_CARGENTRMATE);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM_ITEM ADD CONSTRAINT FK_MATEENTRCONTITEM_FORN FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM_ITEM ADD CONSTRAINT FK_MATEENTRCONTITEM_MATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE ENTRADA_AVE_VIVA_TURNO_DETA ADD CONSTRAINT FK_DETAPEND_DETATURN FOREIGN KEY (ID_DETAPENDENTRAVEVIVA)REFERENCES ENTRADA_AVE_VIVA_PEND_DETA(ID_DETAPENDENTRAVEVIVA);
//

ALTER TABLE ENTRADA_AVE_VIVA_TURNO_DETA ADD CONSTRAINT FK_ENTRAVEVIVA_DETATURN FOREIGN KEY (ID_ENTRAVEVIVA)REFERENCES ENTRADA_AVE_VIVA(ID_ENTRAVEVIVA);
//

ALTER TABLE ETIQUETA_LACRE_SECUNDARIA ADD CONSTRAINT FK_ETIQLACRSECU_SISTUSUA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_PO ADD CONSTRAINT FK_POSIMUCUSTMENS FOREIGN KEY (ID_POSTOPER)REFERENCES POSTO_OPERATIVO(ID_POSTOPER);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_PO ADD CONSTRAINT FK_POSTPOSIMUCUSTMENS FOREIGN KEY (ID_POSTOPER)REFERENCES POSTO_OPERATIVO(ID_POSTOPER);
//


ALTER TABLE CRIACAO_LOTE_PCC01Q ADD CONSTRAINT FK_USUASISTCRIA_PCCQLOTECRIA FOREIGN KEY (ID_USUASIST_CRIAPCCQ)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC [SP_ExcluiEstatisticas] 'GN_VALODICISTATSIST', 'SISTEMA_STATUS_DICIONARIO';
//

ALTER TABLE SISTEMA_STATUS_DICIONARIO ALTER COLUMN GN_VALODICISTATSIST VARCHAR(1);
//

EXEC [SP_ExcluiEstatisticas] 'VL_MENSDESPOPER', 'INTE_DESPESA_OPERACIONAL_MENSAL_SAP';
//

ALTER TABLE INTE_DESPESA_OPERACIONAL_MENSAL_SAP ALTER COLUMN VL_MENSDESPOPER NUMERIC(16, 3);
//

ALTER TABLE MONITOR_SERVICOS_INTERFACE ADD CONSTRAINT FK_MONISERVINTE_CUSTCONS FOREIGN KEY (ID_CUSTCONS)REFERENCES CONSULTA_BI_CUSTOM(ID_CUSTCONS);
//

ALTER TABLE MONITOR_SERVICOS_INTERFACE ADD CONSTRAINT FK_MONISERVINTE_MONISERV FOREIGN KEY (ID_MONISERV)REFERENCES MONITOR_SERVICOS(ID_MONISERV);
//

ALTER TABLE RECIPIENTE_TIPO ADD CONSTRAINT FK_TIPORECI_UNIDMEDI FOREIGN KEY (ID_UNIDMEDI)REFERENCES UNIDADE_MEDIDA(ID_UNIDMEDI);
//

ALTER TABLE CRIACAO_LOTE_PCC01Q_DOCU ADD CONSTRAINT FK_USUASIST_DOCUPCCQLOTECRIA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE LIBERACAO_CARGA_SOLICITACAO ADD CONSTRAINT FK_USUAAUTO_SOLILIBECARG FOREIGN KEY (ID_USUASIST_AUTORIZ)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE LIBERACAO_CARGA_SOLICITACAO ADD CONSTRAINT FK_USUASOLI_SOLILIBECARG FOREIGN KEY (ID_USUASIST_SOLICIT)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC [SP_ExcluiEstatisticas] 'VL_CUSTTOTA', 'INTERFACE_CUSTMENSPROD';
//

ALTER TABLE INTERFACE_CUSTMENSPROD ALTER COLUMN VL_CUSTTOTA NUMERIC(16, 6);
//

ALTER TABLE PESAGEM_GAIOLA_ITEM ADD CONSTRAINT FK_ITEMGAIOPESA_USUASIST FOREIGN KEY (ID_USUAITEMGAIOPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_UNIDADE ADD CONSTRAINT FK_EQUIPAMENTOPRODUNID FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE PRODUCAO_UNIDADE ADD CONSTRAINT FK_MATEEMBAPRODUNID FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

EXEC [SP_ExcluiEstatisticas] 'VL_COMPDESTCUST', 'CUST_DEST_COMP';
//

ALTER TABLE CUST_DEST_COMP ALTER COLUMN VL_COMPDESTCUST NUMERIC(26, 18);
//

ALTER TABLE MATERIAL_EMBALAGEM_FAIPE_FILI ADD CONSTRAINT FK_MATEEMBA_PESOFAIXMATEILI FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE reportcriterion ADD CONSTRAINT FK_reportcriterion_report FOREIGN KEY (reportid)REFERENCES report(reportid);
//

ALTER TABLE SCT_USUARIO ADD CONSTRAINT UNQ_USUASISTIDUPDATE UNIQUE (geaccountidupdate);
//

ALTER TABLE reportcriterion ADD CONSTRAINT FK_reportcriterion_SCT_USUARIO FOREIGN KEY (geaccountidupdate)REFERENCES SCT_USUARIO(geaccountidupdate);
//

ALTER TABLE PEDIDO_VENDA_REMESSA ADD CONSTRAINT FK_PEDIVENDREME_USUASIST FOREIGN KEY (ID_USUASIST_GERAREMEPEDIVEND)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO_SIMU ADD CONSTRAINT FK_ID_COMPAVEDIASIMU FOREIGN KEY (ID_COMPAVE)REFERENCES AVE_COMPONENTE(ID_COMPAVE);
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO_SIMU ADD CONSTRAINT FK_ID_ESTRUNIDABATDIASIMU FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO_SIMU ADD CONSTRAINT FK_ID_PRINPARTAVEDIASIMU FOREIGN KEY (ID_PRINPARTAVE)REFERENCES AVE_PARTE_PRINCIPAL(ID_PRINPARTAVE);
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO_SIMU ADD CONSTRAINT FK_ID_PROCLINH_DESTDIASIMU FOREIGN KEY (ID_PROCLINH_DEST)REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH);
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO_SIMU ADD CONSTRAINT FK_ID_PROCLINH_ORIGDIASIMU FOREIGN KEY (ID_PROCLINH_ORIG)REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH);
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO_SIMU ADD CONSTRAINT FK_ID_TIPOAVEDIASIMU FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE PEDIDO_ENTRADA ADD CONSTRAINT FK_PEDIENTR_USUASISTCADA FOREIGN KEY (ID_USUASIST_CONSCADA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE DESTINATARIO ADD CONSTRAINT FK_USUASIST_DEST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC [SP_ExcluiEstatisticas] 'NR_DIASPADRVENCVALIMATEEMBA', 'MATERIAL_EMBALAGEM_VALIDADE';
//

ALTER TABLE MATERIAL_EMBALAGEM_VALIDADE ALTER COLUMN NR_DIASPADRVENCVALIMATEEMBA NUMERIC(4, 0);
//

DROP STATISTICS CONTROLE_BARREIRA_INTEGRA.FILIAL
//

ALTER TABLE CONTROLE_BARREIRA_INTEGRA ALTER COLUMN FILIAL INTEGER;
//

ALTER TABLE CONTROLE_BARREIRA_INTEGRA ADD CONSTRAINT FK_INTEBARRCONT_USUARIO FOREIGN KEY (ID_USUARIO)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE BELL_CURVE_INTE ADD CONSTRAINT FK_BELLCURVEINTE_USUASIST FOREIGN KEY (ID_USUASISTINTECURVBELL)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CLIENTE_BLOQUEIO ADD CONSTRAINT FK_USASISTCLIEBLOQ FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC [SP_ExcluiEstatisticas] 'VL_CUSTITEMFECHESTO', 'ESTOQUE_FECHAMENTO_ITEM';
//

ALTER TABLE ESTOQUE_FECHAMENTO_ITEM ALTER COLUMN VL_CUSTITEMFECHESTO NUMERIC(15, 6);
//

ALTER TABLE MATERIAL_FORNECEDOR_CODIGO ADD CONSTRAINT FK_CODIFORNMATE_FORN FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE MATERIAL_FORNECEDOR_CODIGO ADD CONSTRAINT FK_CODIFORNMATE_MATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE PRODUCAO_REINTEGRACAO WITH NOCHECK ADD CONSTRAINT FK_USUASISTABER_REINPROD FOREIGN KEY (ID_USUASIST_ABER)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REINTEGRACAO WITH NOCHECK ADD CONSTRAINT FK_USUASISTFECH_REINPROD FOREIGN KEY (ID_USUASIST_FECH)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_BATCH_PESAGEM ADD CONSTRAINT FK_PRODBATCPESA_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE RECIPIENTE_MONTAGEM_MOVIMENTO ADD CONSTRAINT FK_RECIMONTMOVI_EQUIPAMENTO FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE RECIPIENTE_MONTAGEM_MOVIMENTO ADD CONSTRAINT FK_RECIMONTMOVI_MONTREDI FOREIGN KEY (ID_MONTRECI)REFERENCES RECIPIENTE_MONTAGEM(ID_MONTRECI);
//

ALTER TABLE RECIPIENTE_MONTAGEM_MOVIMENTO ADD CONSTRAINT FK_RECIMONTMOVI_PRODEQUIITEM FOREIGN KEY (ID_ITEMEQUIREGIPROD)REFERENCES PRODUCAO_REGISTRO_EQUIP_ITEM(ID_ITEMEQUIREGIPROD);
//

ALTER TABLE BELL_CURVE_INTE_GRADE ADD CONSTRAINT FK_INTECURVBELL FOREIGN KEY (ID_INTECURVBELL)REFERENCES BELL_CURVE_INTE(ID_INTECURVBELL);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_CC ADD CONSTRAINT FK_CENTCUSTSIMUCUSTMENS FOREIGN KEY (ID_CENTCUST)REFERENCES CUSTO_CENTRO(ID_CENTCUST);
//

ALTER TABLE COMISSAO_LANCAMENTO ADD CONSTRAINT FK_COMILANC_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EQUIPAMENTO_CONTADOR ADD CONSTRAINT FK_EQUICONT_ENTRAVEVIVA FOREIGN KEY (ID_ENTRAVEVIVA)REFERENCES ENTRADA_AVE_VIVA(ID_ENTRAVEVIVA);
//

ALTER TABLE EQUIPAMENTO_CONTADOR ADD CONSTRAINT FK_EQUICONT_EQUI FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE EQUIPAMENTO_CONTADOR ADD CONSTRAINT FK_EQUICONT_USUASISTFINA FOREIGN KEY (ID_USUASIST_FINA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EQUIPAMENTO_CONTADOR ADD CONSTRAINT FK_EQUICONT_USUASISTINIC FOREIGN KEY (ID_USUASIST_INIC)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_ENTRADA ADD CONSTRAINT FK_FECHMOTO_REGIPESAENTR FOREIGN KEY (ID_FECHTRANMOTOTRAN)REFERENCES TRANSPORTADOR_MOTORISTA_TRANSP(ID_TRANMOTOTRAN);
//

ALTER TABLE PESAGEM_REGISTRO_ENTRADA ADD CONSTRAINT FK_PESAENTR_AUTOUSUASIST FOREIGN KEY (ID_USUASIST_AUTORIZANTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_ENTRADA ADD CONSTRAINT FK_PESAENTR_PRIMUSUASIST FOREIGN KEY (ID_USUASIST_PRIMPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_ENTRADA ADD CONSTRAINT FK_PESAENTR_SEGUUSUASIST FOREIGN KEY (ID_USUASIST_SEGUPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_ENTRADA ADD CONSTRAINT FK_PESAENTR_TARAUSUASIST FOREIGN KEY (ID_USUASIST_AUTOTARA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_FECHAMENTO ADD CONSTRAINT FK_FECHREGIPROD_USUA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

DROP INDEX IDX_PRODKILOTRANCUST_PROD ON CUSTO_TRANSFORMACAO_KILO_PROD;
//

EXEC SP_ExcluiEstatisticas 'VL_PRODKILOTRANCUST', 'CUSTO_TRANSFORMACAO_KILO_PROD'
//

ALTER TABLE CUSTO_TRANSFORMACAO_KILO_PROD ALTER COLUMN VL_PRODKILOTRANCUST NUMERIC(16, 6);
//

CREATE INDEX IDX_PRODKILOTRANCUST_PROD 
    ON CUSTO_TRANSFORMACAO_KILO_PROD (ID_KILOTRANCUST, ID_MATEEMBA) 
			INCLUDE (VL_PRODKILOTRANCUST)
//

ALTER TABLE MOTIVO_PARADA_DURACAO ADD CONSTRAINT FK_DURAPARAMOTI_EQUI FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE MOTIVO_PARADA_DURACAO ADD CONSTRAINT FK_DURAPARAMOTI_MOTIPARAEQUI FOREIGN KEY (ID_MOTIPARAEQUI)REFERENCES EQUIPAMENTO_PARADA_MOTIVO(ID_MOTIPARAEQUI);
//

ALTER TABLE MOTIVO_PARADA_DURACAO ADD CONSTRAINT FK_DURAPARAMOTI_TIPOEQUI FOREIGN KEY (ID_EQUITIPO)REFERENCES TIPO_EQUIPAMENTO(ID_EQUITIPO);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA_USUARIO ADD CONSTRAINT FK_MATEENTRCARGUSUA_CARGENTR FOREIGN KEY (ID_CARGENTRMATE)REFERENCES MATERIAL_ENTRADA_CARGA(ID_CARGENTRMATE);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA_USUARIO ADD CONSTRAINT FK_MATEENTRCARGUSUA_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_CONSHORAEQUIUTIL', 'UTILIDADE_EQUIPAMENTO'
//

ALTER TABLE UTILIDADE_EQUIPAMENTO ALTER COLUMN VL_CONSHORAEQUIUTIL NUMERIC(16, 3);
//

ALTER TABLE CHECKLIST_CONF_SINCRONISMO ADD CONSTRAINT FK_SINCCONFCHEC_FORMQUALMETA FOREIGN KEY (ID_FORMQUALMETA)REFERENCES FORMULARIO_QUALIDADE_META(ID_FORMQUALMETA);
//

ALTER TABLE LINHA_PROCESSAMENTO_DEST ADD CONSTRAINT FK_DEFIMATEEMBA FOREIGN KEY (ID_DEFIMATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE LINHA_PROCESSAMENTO_DEST ADD CONSTRAINT FK_ID_LINHPROC01 FOREIGN KEY (ID_PROCLINH)REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH);
//

ALTER TABLE LINHA_PROCESSAMENTO_DEST ADD CONSTRAINT FK_ID_TIPOAVE01 FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE LINHA_PROCESSAMENTO_DEST ADD CONSTRAINT FK_ID_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE LINHA_PROCESSAMENTO_DEST ADD CONSTRAINT FK_TURNOPROD FOREIGN KEY (ID_TURNPROD)REFERENCES PRODUCAO_TURNO(ID_TURNPROD);
//

DROP STATISTICS CUSTO_COMPONENTE_DIARIO.FILIAL;
//

DROP INDEX IDX_DIARCOMPCUST_CRIAPROD ON CUSTO_COMPONENTE_DIARIO;
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN FILIAL NUMERIC(5, 0);
//

EXEC SP_ExcluiEstatisticas 'VL_KGTOTADIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN VL_KGTOTADIARCOMPCUST NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTADIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN VL_TOTADIARCOMPCUST NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'QN_PESODESCDIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN QN_PESODESCDIARCOMPCUST NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'QN_PESOCORTDIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN QN_PESOCORTDIARCOMPCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_KGINTEDIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN VL_KGINTEDIARCOMPCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_KGCORTDIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN VL_KGCORTDIARCOMPCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_KILODESTANTDIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN VL_KILODESTANTDIARCOMPCUST NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_KILODESTMESDIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN VL_KILODESTMESDIARCOMPCUST NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_KILOENTRMESDIARCOMPCUST', 'CUSTO_COMPONENTE_DIARIO'
//

ALTER TABLE CUSTO_COMPONENTE_DIARIO ALTER COLUMN VL_KILOENTRMESDIARCOMPCUST NUMERIC(20, 10);
//

CREATE INDEX IDX_DIARCOMPCUST_CRIAPROD
ON [CUSTO_COMPONENTE_DIARIO] ([EMPRESA],[FILIAL],[DT_PADRDIARCOMPCUST])
INCLUDE ([ID_COMPAVE],[NR_TURNDIARCOMPCUST],[QN_KGTOTADIARCOMPCUST],[ID_TIPOAVE], [QN_PESOINTEDIARCOMPCUST],
		 [QN_PESOCORTDIARCOMPCUST],[VL_KGINTEDIARCOMPCUST],[ID_ESTRUNIDABAT],[ID_PROCLINH])
//

EXEC SP_ExcluiEstatisticas 'VL_ITEMTABECUST', 'INTERFACE_TABELA_CUSTO'
//

ALTER TABLE INTERFACE_TABELA_CUSTO ALTER COLUMN VL_ITEMTABECUST NUMERIC(21, 8);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_BOXGALPESPE_ENTRAVEVIVA FOREIGN KEY (ID_BOXGALPESPE)REFERENCES ESPERA_GALPAO_BOX(ID_BOXGALPESPE);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ENTRAVEVIVA_USUAALTEGALP FOREIGN KEY (ID_USUASIST_ALTEGALP)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ENTRAVEVIVA_USUAINICDESC FOREIGN KEY (ID_USUASIST_INICDESC)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ENTRAVEVIVA_USUASIST FOREIGN KEY (ID_USUASIST_AUTOTARA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ENTRAVEVIVA_USUASISTINICDESC FOREIGN KEY (ID_USUASIST_INICDESC)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA WITH NOCHECK ADD CONSTRAINT FK_ENTRAVEVIVA_USUASISTPEND FOREIGN KEY (ID_USUASIST_PESOPEND)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ENTRAVEVIVA_USUASISTTERMDESC FOREIGN KEY (ID_USUASIST_TERMDESC)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ENTRAVEVIVA_USUATERMDESC FOREIGN KEY (ID_USUASIST_TERMDESC)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_FECHMOTO_ENTRAVEVIVA FOREIGN KEY (ID_FECHTRANMOTOTRAN)REFERENCES TRANSPORTADOR_MOTORISTA_TRANSP(ID_TRANMOTOTRAN);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ID_ESTAPENDESTRUNIDABAT FOREIGN KEY (ID_ESTAPENDESTRUNIDABAT)REFERENCES ABAT_UNID_ESTR_PENDURA_ESTACAO(ID_ESTAPENDESTRUNIDABAT);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_VALIDESBGALP_ENTRAVEVIVA FOREIGN KEY (ID_USUASIST_VALIDESBGALP)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA ADD CONSTRAINT FK_ENTRAVEMOTOTRAN FOREIGN KEY (ID_TRANMOTOTRAN)REFERENCES TRANSPORTADOR_MOTORISTA_TRANSP(ID_TRANMOTOTRAN);
//

EXEC SP_ExcluiEstatisticas 'VL_ENTRAVEVIVA', 'ENTRADA_AVE_VIVA'
//

ALTER TABLE ENTRADA_AVE_VIVA ALTER COLUMN VL_ENTRAVEVIVA NUMERIC(20, 10);
//

ALTER TABLE PRODUCAO_MEDICAO_VISCERA ADD CONSTRAINT FK_VISCPRODMEDI_PRODMEDI FOREIGN KEY (ID_PONTPROD)REFERENCES PRODUCAO_PONTO(ID_PONTPROD);
//

EXEC SP_ExcluiEstatisticas 'FL_SINCMATEEMBA', 'MATERIAL_EMBALAGEM_SINC'
//

ALTER TABLE MATERIAL_EMBALAGEM_SINC ALTER COLUMN FL_SINCMATEEMBA VARCHAR;
//

ALTER TABLE PRODUCAO_SEQUESTRO ALTER COLUMN GN_SEQUTURNREGIPROD VARCHAR(50);
//

ALTER TABLE ENTRADA_AVULSA_IDENTIFICACAO ADD CONSTRAINT FK_IDENENTRAVUL_ENTRAVUL FOREIGN KEY (ID_ENTRAVUL)REFERENCES ENTRADA_AVULSA(ID_ENTRAVUL);
//

ALTER TABLE ENTRADA_AVULSA_IDENTIFICACAO ADD CONSTRAINT FK_IDENENTRAVUL_MATEEMBA FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE ENTRADA_AVULSA_IDENTIFICACAO ADD CONSTRAINT FK_IDENENTRAVUL_REGIPROD FOREIGN KEY (ID_REGIPROD)REFERENCES PRODUCAO_REGISTRO(ID_REGIPROD);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNECEDOR_USUASIST FOREIGN KEY (ID_USUASIST_WEB)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNATIVECON FOREIGN KEY (ID_ATIVECON)REFERENCES ATIVIDADE_ECONOMICA(ID_ATIVECON);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNBAIR FOREIGN KEY (ID_BAIRRO)REFERENCES BAIRRO(ID_BAIRRO);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNCIDA FOREIGN KEY (ID_CIDADE)REFERENCES CIDADE(ID_CIDADE);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNPAGAFORM FOREIGN KEY (ID_FORMPAGA)REFERENCES FORMA_PAGAMENTO(ID_FORMPAGA);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNTIPOFORN FOREIGN KEY (ID_TIPOFORN)REFERENCES FORNECEDOR_TIPO(ID_TIPOFORN);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNTRATAFORN FOREIGN KEY (ID_TRATFORN)REFERENCES FORNECEDOR_TRATAMENTO(ID_TRATFORN);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNTIPOLOGR FOREIGN KEY (ID_TIPOLOGR)REFERENCES LOGRADOURO_TIPO(ID_TIPOLOGR);
//

ALTER TABLE FORNECEDOR ADD CONSTRAINT FK_FORNTIPOVEND FOREIGN KEY (ID_TIPOVEND)REFERENCES VENDA_TIPO(ID_TIPOVEND);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ESTR ADD CONSTRAINT FK_ESTR_SIMUMENSCUST FOREIGN KEY (ID_SIMUCUSTMENS)REFERENCES CUSTO_MENSAL_SIMULADO(ID_SIMUCUSTMENS);
//

ALTER TABLE ANOMALIA_REGISTRO ADD CONSTRAINT FK_ANOMREGI_MATERIAL FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE ANOMALIA_REGISTRO ADD CONSTRAINT FK_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE ANOMALIA_REGISTRO ADD CONSTRAINT FK_MATERIAL_REGIANOM FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE ANOMALIA_REGISTRO ADD CONSTRAINT FK_PARAANOM FOREIGN KEY (ID_PARAANOM)REFERENCES ANOMALIA_PARAMETRO(ID_PARAANOM);
//

ALTER TABLE ANOMALIA_REGISTRO ADD CONSTRAINT FK_PROVANOM FOREIGN KEY (ID_PROVANOM)REFERENCES ANOMALIA_PROVIDENCIA(ID_PROVANOM);
//

ALTER TABLE ANOMALIA_REGISTRO ADD CONSTRAINT FK_USUASIST_CRIACAO FOREIGN KEY (ID_USUASIST_CRIACAO)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ANOMALIA_REGISTRO ADD CONSTRAINT FK_USUASIST_JUSTIFICATIVA FOREIGN KEY (ID_USUASIST_JUSTIFICATIVA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM_ERP ADD CONSTRAINT FK_FORNECEDOR_ERPITEMREQUMATE FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM_ERP ADD CONSTRAINT FK_MATERIAL_ERPITEMREQUMATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM_ERP ADD CONSTRAINT FK_REQUMATE_ERPITEMREQUMATE FOREIGN KEY (ID_REQUMATE)REFERENCES MATERIAL_REQUISICAO(ID_REQUMATE);
//

EXEC SP_ExcluiEstatisticas 'PC_PISITEMREGRFISC', 'REGRA_FISCAL_ITEM'
//

ALTER TABLE REGRA_FISCAL_ITEM ALTER COLUMN PC_PISITEMREGRFISC NUMERIC(7, 4);
//

EXEC SP_ExcluiEstatisticas 'PC_COFIITEMREGRFISC', 'REGRA_FISCAL_ITEM'
//

ALTER TABLE REGRA_FISCAL_ITEM ALTER COLUMN PC_COFIITEMREGRFISC NUMERIC(7, 4);
//

ALTER TABLE MATERIAL_GRUPO_FIFO ADD CONSTRAINT FK_GRUPMATEFIFO_GRUPMATE FOREIGN KEY (ID_GRUPMATE)REFERENCES MATERIAL_GRUPO(ID_GRUPMATE);
//

ALTER TABLE INSPECAO_PARAMETROS_PROD_GRUP ADD CONSTRAINT FK_GRUPPRODPARAINSP_GRUP FOREIGN KEY (ID_GRUPINSP)REFERENCES INSPECAO_GRUPO(ID_GRUPINSP);
//

ALTER TABLE INSPECAO_PARAMETROS_PROD_GRUP ADD CONSTRAINT FK_GRUPPRODPARAINSP_PROD FOREIGN KEY (ID_PRODPARAINSP)REFERENCES INSPECAO_PARAMETROS_PRODUTO(ID_PRODPARAINSP);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM_ETIQ ADD CONSTRAINT FK_MATEENTRCONTETIQ_CARGENTR FOREIGN KEY (ID_CARGENTRMATE)REFERENCES MATERIAL_ENTRADA_CARGA(ID_CARGENTRMATE);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM_ETIQ ADD CONSTRAINT FK_MATEENTRCONTETIQ_CONTITEM FOREIGN KEY (ID_ITEMCONTENTRMATE)REFERENCES MATERIAL_ENTRADA_CONTAGEM_ITEM(ID_ITEMCONTENTRMATE);
//

EXEC SP_ExcluiEstatisticas 'VL_MATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_MATERIAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_MATERIAL ALTER COLUMN VL_MATEPRODCUSTMENS NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD CONSTRAINT FK_MULTPROGPROD_CENTCUST FOREIGN KEY (ID_CENTCUST)REFERENCES CUSTO_CENTRO(ID_CENTCUST);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_OP_PROD ADD CONSTRAINT FK_PRODPO_POSTOPER FOREIGN KEY (ID_POSTOPER)REFERENCES POSTO_OPERATIVO(ID_POSTOPER);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_OP_PROD ADD CONSTRAINT FK_PRODPO_PRODSIMUCUSTMENS FOREIGN KEY (ID_PRODSIMUCUSTMENS)REFERENCES CUSTO_MENSAL_SIMULADO_PROD(ID_PRODSIMUCUSTMENS);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_OP_PROD ADD CONSTRAINT FK_PRODPO_SIMUCUSTMENS FOREIGN KEY (ID_SIMUCUSTMENS)REFERENCES CUSTO_MENSAL_SIMULADO(ID_SIMUCUSTMENS);
//

ALTER TABLE PRODUCAO_INVENTARIO_IDEN WITH NOCHECK ADD CONSTRAINT FK_USUASIST_IDENINVEPROD FOREIGN KEY (ID_USUASIST_IDENINVEPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CAMPOS_CONFIGURACAO ADD CONSTRAINT FK_CONFCAMPTELA_CONFCAMP FOREIGN KEY (ID_CONFCAMPTELA)REFERENCES TELAS_CAMPOS_CONFIGURACAO(ID_CONFCAMPTELA);
//

EXEC SP_ExcluiEstatisticas 'VL_CARGSALA', 'CARGO_SALARIO'
//

ALTER TABLE CARGO_SALARIO ALTER COLUMN VL_CARGSALA NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_BASECARGSALA', 'CARGO_SALARIO'
//

ALTER TABLE CARGO_SALARIO ALTER COLUMN VL_BASECARGSALA NUMERIC(16, 3);
//

ALTER TABLE CAMPOS_CONFIGURACAO_ITEM ADD CONSTRAINT FK_CONFCAMP_ITEMCONFCAMP FOREIGN KEY (ID_CONFCAMP)REFERENCES CAMPOS_CONFIGURACAO(ID_CONFCAMP);
//

ALTER TABLE PRODUCAO_DESCARTE ADD CONSTRAINT FK_DESCPROD_USUASISTLIBMTEC FOREIGN KEY (ID_USUASISTLIBEMTEC)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_PECAMANUHISTEQUI', 'EQUIPAMENTO_HIST'
//

ALTER TABLE EQUIPAMENTO_HIST ALTER COLUMN VL_PECAMANUHISTEQUI NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_NOVOHISTEQUI', 'EQUIPAMENTO_HIST'
//

ALTER TABLE EQUIPAMENTO_HIST ALTER COLUMN VL_NOVOHISTEQUI NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_RESIHISTEQUI', 'EQUIPAMENTO_HIST'
//

ALTER TABLE EQUIPAMENTO_HIST ALTER COLUMN VL_RESIHISTEQUI NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_VALOMEDIMANUHISTEQUI', 'EQUIPAMENTO_HIST'
//

ALTER TABLE EQUIPAMENTO_HIST ALTER COLUMN VL_VALOMEDIMANUHISTEQUI NUMERIC(16, 3);
//

ALTER TABLE EMBALAGEM_COLETA ADD CONSTRAINT FK_USUAAUTORIZANTE_COLEEMBA FOREIGN KEY (ID_USUASIST_AUTORIZANTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EMBALAGEM_COLETA ADD CONSTRAINT FK_USUAPRIMPESA_COLEEMBA FOREIGN KEY (ID_USUASIST_PRIMPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EMBALAGEM_COLETA ADD CONSTRAINT FK_USUASEGUPESA_COLEEMBA FOREIGN KEY (ID_USUASIST_SEGUPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_PROGRAMA_EQUIPAMENTO ADD CONSTRAINT FK_PRODPROGEQUI_EQUIPAMENTO FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE CIENCIA_REGISTRO_OCORRENCIA ADD CONSTRAINT FK_OCORREGICIEN_OCORREGI FOREIGN KEY (ID_OCORREGI)REFERENCES REGISTRO_OCORRENCIA(ID_OCORREGI);
//

ALTER TABLE CIENCIA_REGISTRO_OCORRENCIA ADD CONSTRAINT FK_OCORREGICIEN_USUASISTCRIA FOREIGN KEY (ID_USUASIST_OCORREGICIEN)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE SISTEMA_ATUALIZACAO_LOG ADD CONSTRAINT FK_LOGATUASIST_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_REPOSCTEMPR ON SCT_EMPRESA (companyid);
//

CREATE INDEX IDX_REPOSCTFILI ON SCT_FILIAL(branchid);
//

CREATE INDEX IDX_REPOSCTUSUA ON SCT_USUARIO(geaccountidupdate);
//

ALTER TABLE PRODUCAO_PROCES_UNID_META ADD CONSTRAINT FK_UNIDMETAPROCPROD FOREIGN KEY (ID_UNIDPROCPROD)REFERENCES PRODUCAO_PROCESSAMENTO_UNIDADE(ID_UNIDPROCPROD);
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

EXEC SP_ExcluiEstatisticas 'FL_CONSCUSTTIPOAVE', 'AVE_TIPO'
//

ALTER TABLE AVE_TIPO ALTER COLUMN FL_CONSCUSTTIPOAVE CHAR(1);
//

EXEC SP_ExcluiEstatisticas 'VL_VALOMATE', 'INTERFACE_MATEPREC'
//

ALTER TABLE INTERFACE_MATEPREC ALTER COLUMN VL_VALOMATE NUMERIC(16, 3);
//

ALTER TABLE RECIPIENTE_TIPO_PRODUTO ADD CONSTRAINT FK_TIPORECIPROD_PRODUTO FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE RECIPIENTE_TIPO_PRODUTO ADD CONSTRAINT FK_TIPORECIPROD_TIPORECI FOREIGN KEY (ID_TIPORECI)REFERENCES RECIPIENTE_TIPO(ID_TIPORECI);
//

ALTER TABLE PRODUCAO_UNIDADE_AGRUPADA ADD CONSTRAINT FK_EQUIPAMENTOPRODUNIDAGRUP FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE PRODUCAO_UNIDADE_AGRUPADA ADD CONSTRAINT FK_MATEEMBAPRODUNIDAGRUP FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE FORM_QUAL_META_USUARIO ADD CONSTRAINT FK_FORMQUALMETAUSUA_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDI_USUASIST_AUTOCORTCONT FOREIGN KEY (ID_USUASIST_AUTOCORTCONT)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_PEDIVEND_CROSDOCKPEDIVEND ON PEDIDO_VENDA (ID_CENTDIST_CROSDOCKPEDIVEND)
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVEND_USUASIST_AUTOCRED FOREIGN KEY (ID_USUASIST_AUTOCRED)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVEND_USUASIST_DESM FOREIGN KEY (ID_USUASIST_DESM)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVEND_USUASISTCADA FOREIGN KEY (ID_USUASIST_CONSCADA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVEND_USUASISTINVO FOREIGN KEY (ID_USUASISTINVOPEDIVEND)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVEND_USUASISTORDEENTR FOREIGN KEY (ID_USUASISTORDEENTRPEDIVEND)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDGERACLIE FOREIGN KEY (ID_CLIENTE)REFERENCES CLIENTE_GERAL(ID_CLIENTE);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDINSTCOBR FOREIGN KEY (ID_INSTCOBR)REFERENCES COBRANCA_INSTRUCAO(ID_INSTCOBR);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDSITUCOBR FOREIGN KEY (ID_SITUCOBR)REFERENCES COBRANCA_SITUACAO(ID_SITUCOBR);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDTIPOCOBR FOREIGN KEY (ID_TIPOCOBR)REFERENCES COBRANCA_TIPO(ID_TIPOCOBR);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDCONT FOREIGN KEY (ID_CONTA)REFERENCES CONTA(ID_CONTA);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDCARGEXPE FOREIGN KEY (ID_CARGEXPE)REFERENCES EXPEDICAO_CARGA(ID_CARGEXPE);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDFORMPAGA FOREIGN KEY (ID_FORMPAGA)REFERENCES FORMA_PAGAMENTO(ID_FORMPAGA);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDTIPOLOGI FOREIGN KEY (ID_TIPOLOGI)REFERENCES LOGISTICA_TIPO(ID_TIPOLOGI);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDTIPOVEND FOREIGN KEY (ID_TIPOPEDIVEND)REFERENCES PEDIDO_VENDA_TIPO(ID_TIPOPEDIVEND);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDUSUASIST FOREIGN KEY (ID_USUASIST_AUTOPEDIVEND)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_PEDIVENDUSUASIST ON PEDIDO_VENDA (ID_USUASIST_DIGIPEDIVEND);
//

ALTER TABLE PEDIDO_VENDA ADD CONSTRAINT FK_PEDIVENDVENDID FOREIGN KEY (ID_VENDEDOR)REFERENCES VENDEDOR(ID_VENDEDOR);
//

EXEC SP_ExcluiEstatisticas 'FL_CONSFINAPEDIVEND', 'PEDIDO_VENDA'
//

ALTER TABLE PEDIDO_VENDA ALTER COLUMN FL_CONSFINAPEDIVEND CHAR(1);
//

EXEC SP_ExcluiEstatisticas 'VL_CONSHORAHISTEQUIUTIL', 'UTILIDADE_EQUIPAMENTO_HIST'
//

ALTER TABLE UTILIDADE_EQUIPAMENTO_HIST ALTER COLUMN VL_CONSHORAHISTEQUIUTIL NUMERIC(16, 3);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_AD ADD CONSTRAINT FK_ADSIMUCUSTMENS FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

EXEC SP_ExcluiEstatisticas 'FL_EXIBOBSEPEDIPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN FL_EXIBOBSEPEDIPARASIST CHAR(2);
//

EXEC SP_ExcluiEstatisticas 'FL_GERACNPJPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN FL_GERACNPJPARASIST CHAR(2);
//

EXEC SP_ExcluiEstatisticas 'FL_ENVIORDEPESAMTECHPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN FL_ENVIORDEPESAMTECHPARASIST CHAR(2);
//

EXEC SP_ExcluiEstatisticas 'GN_VALIENTRPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN GN_VALIENTRPARASIST CHAR(2);
//

EXEC SP_ExcluiEstatisticas 'FL_VALITRANCONFPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN FL_VALITRANCONFPARASIST CHAR(2);
//

EXEC SP_ExcluiEstatisticas 'FL_DATABASEINVEPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN FL_DATABASEINVEPARASIST CHAR(1);
//

EXEC SP_ExcluiEstatisticas 'ID_MOTISEQU', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN ID_MOTISEQU NUMERIC(9, 0);
//

EXEC SP_ExcluiEstatisticas 'FL_ENTRAUTOTRANPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN FL_ENTRAUTOTRANPARASIST CHAR(2);
//

EXEC SP_ExcluiEstatisticas 'GN_PLACPADRPESAAVULPARASIST', 'SISTEMA_PARAMETRO'
//

ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN GN_PLACPADRPESAAVULPARASIST CHAR(10);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_DO ADD CONSTRAINT FK_DOSIMUCUSTMENS_CUSTMENS FOREIGN KEY (ID_DESPOPER)REFERENCES DESPESA_OPERACIONAL(ID_DESPOPER);
//

ALTER TABLE EXPEDICAO_CARGA ADD CONSTRAINT FK_EXPE_USUASIST_AUTOCORTCONT FOREIGN KEY (ID_USUASIST_AUTOCORTCONT)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_USUAVALIBALACARGEXPE ON EXPEDICAO_CARGA (ID_USUASIST_VALIBALA);
//

CREATE INDEX IDX_USUASISTMONTCARGEXPE ON EXPEDICAO_CARGA (ID_USUASIST_MONTAGEM);
//

ALTER TABLE EXPEDICAO_CARGA ADD CONSTRAINT FK_CARGEXPEPROGITEM FOREIGN KEY (ID_ITEMPROGCAMI)REFERENCES CAMINHAO_PROGRAMACAO_ITEM(ID_ITEMPROGCAMI);
//

ALTER TABLE EXPEDICAO_CARGA ADD CONSTRAINT FK_CARGEXPECLASCARG FOREIGN KEY (ID_CLASCARGEXPE)REFERENCES EXPEDICAO_CARGA_CLASSIFICACAO(ID_CLASCARGEXPE);
//

ALTER TABLE EXPEDICAO_CARGA ADD CONSTRAINT FK_CARGEXPEMOTOTRAN FOREIGN KEY (ID_TRANMOTOTRAN)REFERENCES TRANSPORTADOR_MOTORISTA_TRANSP(ID_TRANMOTOTRAN);
//

ALTER TABLE EXPEDICAO_CARGA ADD CONSTRAINT FK_CARGEXPEVEICTRAN FOREIGN KEY (ID_VEICTRAN)REFERENCES TRANSPORTADOR_VEICULO(ID_VEICTRAN);
//

ALTER TABLE ESPERA_GALPAO_BOX ADD CONSTRAINT FK_ESPEGALPBOX FOREIGN KEY (ID_GALPESPE)REFERENCES ESPERA_GALPAO(ID_GALPESPE);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_MV ADD CONSTRAINT FK_MVSIMUCUSTMENS_CUSTMENS FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE EQUIPAMENTO_TURNO_DIARIO_ITEM ADD CONSTRAINT FK_ITEMDIARTURN_DIARTURN FOREIGN KEY (ID_DIARTURNEQUI)REFERENCES EQUIPAMENTO_TURNO_DIARIO(ID_DIARTURNEQUI);
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD CONSTRAINT FK_MATEALMOTRANSORIG FOREIGN KEY (ID_MATEALMO_ORIGEM)REFERENCES MATERIAL_ALMOXARIFADO(ID_MATEALMO);
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD CONSTRAINT FK_MATEALMOTRANSDEST FOREIGN KEY (ID_MATEALMO_DESTINO)REFERENCES MATERIAL_ALMOXARIFADO(ID_MATEALMO);
//

ALTER TABLE MATERIAL_ALMOXARIFADO_TRANSFER ADD CONSTRAINT FK_MATEALMOTRANSUSUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_ESTOQUE_LANC ADD CONSTRAINT FK_ID_LANCESTOREGIPROD_ORIGEM FOREIGN KEY (ID_LANCESTOREGIPROD_ORIGEM)REFERENCES PRODUCAO_REGISTRO_ESTOQUE_LANC(ID_LANCESTOREGIPROD);
//

ALTER TABLE EQUIPAMENTO_PARADA_MOTIVO ADD CONSTRAINT FK_MOTIPARAEQUI_EVENPARAEQUI FOREIGN KEY (ID_EVENPARAEQUI)REFERENCES EQUIPAMENTO_PARADA_EVENTO(ID_EVENPARAEQUI);
//

ALTER TABLE EQUIPAMENTO_PARADA_MOTIVO ADD CONSTRAINT FK_MOTIPARAEQUI_MOTIPARAEQUI FOREIGN KEY (ID_PAIMOTIPARAEQUI)REFERENCES EQUIPAMENTO_PARADA_MOTIVO(ID_MOTIPARAEQUI);
//

ALTER TABLE MATERIAL_ALMO_DESCMATEPROD ADD CONSTRAINT FK_DESCMATEALMO_USUAALTE FOREIGN KEY (ID_USUASIST_ALTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ALMO_DESCMATEPROD ADD CONSTRAINT FK_DESCMATEALMO_USUACRIA FOREIGN KEY (ID_USUASIST_CRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ALMO_DESCMATEPROD ADD CONSTRAINT FK_DESCMATEPRODALMO_USUASIST FOREIGN KEY (ID_USUASIST_DESCPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ESTOQUE_CONSOLIDADO ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

EXEC SP_ExcluiEstatisticas 'VL_CUSTPROD', 'ESTOQUE_CONSOLIDADO'
//

ALTER TABLE ESTOQUE_CONSOLIDADO ALTER COLUMN VL_CUSTPROD NUMERIC(16, 3);
//

ALTER TABLE PESAGEM_REGISTRO_TRANSFER ADD CONSTRAINT FK_FECHMOTO_REGIPESATRAN FOREIGN KEY (ID_FECHTRANMOTOTRAN)REFERENCES TRANSPORTADOR_MOTORISTA_TRANSP(ID_TRANMOTOTRAN);
//

ALTER TABLE PESAGEM_REGISTRO_TRANSFER ADD CONSTRAINT FK_PESATRAN_AUTOUSUASIST FOREIGN KEY (ID_USUASIST_AUTORIZANTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_TRANSFER ADD CONSTRAINT FK_PESATRAN_PRIMUSUASIST FOREIGN KEY (ID_USUASIST_PRIMPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_TRANSFER ADD CONSTRAINT FK_PESATRAN_SEGUUSUASIST FOREIGN KEY (ID_USUASIST_SEGUPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_TRANSFER ADD CONSTRAINT FK_PESATRAN_TARAUSUASIST FOREIGN KEY (ID_USUASIST_AUTOTARA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE INTER_TUNE_EDATA ALTER COLUMN CODI VARCHAR(150);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ENTRADA ADD CONSTRAINT FK_ENTRSIMUMENSCUST_ESTRUNIDABAT FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ENTRADA ADD CONSTRAINT FK_ID_COMPAVE02 FOREIGN KEY (ID_COMPAVE)REFERENCES AVE_COMPONENTE(ID_COMPAVE);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ENTRADA ADD CONSTRAINT FK_ID_CONSAVE02 FOREIGN KEY (ID_CONSAVE)REFERENCES AVE_CONSTITUICAO(ID_CONSAVE);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ENTRADA ADD CONSTRAINT FK_ID_ITEMCONSAVE02 FOREIGN KEY (ID_ITEMCONSAVE)REFERENCES AVE_CONSTITUICAO_ITEM(ID_ITEMCONSAVE);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ENTRADA ADD CONSTRAINT FK_ID_LINHTIPOAVE02 FOREIGN KEY (ID_LINHTIPOAVE)REFERENCES AVE_TIPO_LINHAGEM(ID_LINHTIPOAVE);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ENTRADA ADD CONSTRAINT FK_ID_PRINPARTAVE02 FOREIGN KEY (ID_PRINPARTAVE)REFERENCES AVE_PARTE_PRINCIPAL(ID_PRINPARTAVE);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_ENTRADA ADD CONSTRAINT FK_TIPOAVE02 FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIACAMATIPO FOREIGN KEY (ID_TIPOCAMACRIA)REFERENCES CRIACAO_TIPO_CAMA(ID_TIPOCAMACRIA);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAPAGAFORM FOREIGN KEY (ID_FORMPAGA)REFERENCES FORMA_PAGAMENTO(ID_FORMPAGA);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAFORN FOREIGN KEY (ID_FORNECEDOR_INTEGRADO)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAPROPGRAN FOREIGN KEY (ID_PROPGRAN)REFERENCES GRANJA_PROPRIEDADE(ID_PROPGRAN);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAABERGRAN FOREIGN KEY (ID_TECNGRAN_ABERLOTECRIA)REFERENCES GRANJA_TECNICO(ID_TECNGRAN);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIATECNGRAN FOREIGN KEY (ID_TECNGRAN)REFERENCES GRANJA_TECNICO(ID_TECNGRAN);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAGRUPINTE FOREIGN KEY (ID_GRUPINTE)REFERENCES INTEGRACAO_GRUPO(ID_GRUPINTE);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAAUTOUSUA FOREIGN KEY (ID_USUASIST_AUTOENCELOTECRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAENCELOTE FOREIGN KEY (ID_USUASIST_ENCELOTECRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAFECHLOTE FOREIGN KEY (ID_USUASIST_FECHLOTECRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CRIACAO_LOTE ADD CONSTRAINT FK_LOTECRIAUSUALOTECRIA FOREIGN KEY (ID_USUASIST_CRIALOTECRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EQUIPAMENTO ADD CONSTRAINT FK_EQUI_DIME_UNIDMEDI FOREIGN KEY (ID_UNIDMEDIDIMEEQUI)REFERENCES UNIDADE_MEDIDA(ID_UNIDMEDI);
//

ALTER TABLE EQUIPAMENTO ADD CONSTRAINT FK_GRUP_EQUI FOREIGN KEY (ID_EQUIGRUP)REFERENCES GRUPO_EQUIPAMENTO(ID_EQUIGRUP);
//

ALTER TABLE EQUIPAMENTO ADD CONSTRAINT FK_MOTIPARAFORATURNEQUI FOREIGN KEY (ID_MOTIPARAFORATURNEQUI)REFERENCES EQUIPAMENTO_PARADA_MOTIVO(ID_MOTIPARAEQUI);
//

ALTER TABLE TMP_REL210_ENTRADA ADD CONSTRAINT FK_REL210ENTR_ID_PROCLIH FOREIGN KEY (ID_PROCLINH)REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH);
//

ALTER TABLE TMP_REL210_ENTRADA ADD CONSTRAINT FK_REL210ENTR_ID_TIPOAVE FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE ENTRADA_AVE_VIVA_TURNO ADD CONSTRAINT FK_ENTRAVEVIVAPENDESTRUNIDABAT FOREIGN KEY (ID_ESTAPENDESTRUNIDABAT)REFERENCES ABAT_UNID_ESTR_PENDURA_ESTACAO(ID_ESTAPENDESTRUNIDABAT);
//

ALTER TABLE ESTOQUE_RETROATIVO ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

ALTER TABLE PRODUCAO_PROCESSO ADD CONSTRAINT FK_ESTRUNIDABAT_PROCPROD FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

CREATE INDEX IDX_PESAORDE_USUASIST ON PESAGEM_ORDEM(ID_USUASIST);
//

ALTER TABLE PESAGEM_ORDEM ADD CONSTRAINT FK_ORDEPESA_USUASISTLIBEENTR FOREIGN KEY (ID_USUASISTLIBEENTR)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_ORDEM ADD CONSTRAINT FK_ORDEPESA_USUASISTLIBESAID FOREIGN KEY (ID_USUASISTLIBESAID)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_ORDEPESAUSUASISTCANC ON PESAGEM_ORDEM (ID_USUASISTCANC);
//

ALTER TABLE PESAGEM_ORDEM ADD CONSTRAINT FK_USUASIST_DEVOCARG_ORDEPESA FOREIGN KEY (ID_USUASIST_DEVOCARG)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_ORDEM ADD CONSTRAINT FK_USUASIST_SOLIDESBGALP FOREIGN KEY (ID_USUASIST_SOLIDESBGALP)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_ORDEM ADD CONSTRAINT FK_USUASIST_VALIDESBGALP FOREIGN KEY (ID_USUASIST_VALIDESBGALP)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_ORDEM ADD CONSTRAINT FK_USUASISTDESV FOREIGN KEY (ID_USUASIST_DESV)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_USUALIBEMTEC ON PESAGEM_ORDEM (ID_USUASIST_LIBEMTEC);
//

ALTER TABLE PESAGEM_ORDEM ADD CONSTRAINT FK_VEICTRANCOMP_ORDEPESA FOREIGN KEY (ID_VEICTRANCOMP)REFERENCES TRANSPORTADOR_VEICULO(ID_VEICTRAN);
//

ALTER TABLE MATERIAL_MANUTENCAO ADD CONSTRAINT FK_MANUMATE_ALMOXARIFADO FOREIGN KEY (ID_ALMOXARIFADO)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE MATERIAL_MANUTENCAO ADD CONSTRAINT FK_MANUMATE_CENTCUST FOREIGN KEY (ID_CENTCUST)REFERENCES CUSTO_CENTRO(ID_CENTCUST);
//

ALTER TABLE MATERIAL_MANUTENCAO ADD CONSTRAINT FK_MANUMATE_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE MATERIAL_MANUTENCAO ADD CONSTRAINT FK_MANUMATE_MATERIAL FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE MATERIAL_MANUTENCAO ADD CONSTRAINT FK_MANUMATE_TIPOMOVIMATE FOREIGN KEY (ID_TIPOMOVIMATE)REFERENCES MATERIAL_MOVIMENTACAO_TIPO(ID_TIPOMOVIMATE);
//

CREATE INDEX IDX_MANUMATE_USUAALTE ON  MATERIAL_MANUTENCAO (ID_USUASIST_ALTE);
//

CREATE INDEX IDX_MANUMATE_USUACRIA ON MATERIAL_MANUTENCAO (ID_USUASIST_CRIA);
//

EXEC SP_ExcluiEstatisticas 'VL_MANUMATE', 'MATERIAL_MANUTENCAO'
//

ALTER TABLE MATERIAL_MANUTENCAO ALTER COLUMN VL_MANUMATE NUMERIC(19, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_COMPDESTCUST', 'CUSTO_DESTINACAO_COMPOSICAO'
//

ALTER TABLE CUSTO_DESTINACAO_COMPOSICAO ALTER COLUMN VL_COMPDESTCUST NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_PROG_SIMU_PROC_LOG ADD CONSTRAINT FK_LOGPROCSIMUPROGPROD_USUA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_CARGSALAMODFOTOINDI', 'FOTO_INDICE_MOD'
//

ALTER TABLE FOTO_INDICE_MOD ALTER COLUMN VL_CARGSALAMODFOTOINDI NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_BALANCA ADD CONSTRAINT FK_CENTCUST_BALANCA FOREIGN KEY (ID_CENTCUST)REFERENCES CUSTO_CENTRO(ID_CENTCUST);
//


ALTER TABLE LOG_CREDITO ADD CONSTRAINT FK_LOGCRED_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//


ALTER TABLE CONTABILIDADE_EXPORTACAO ADD CONSTRAINT FK_EXPOCONT_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//


ALTER TABLE AVE_TIPO_GRUPO ADD CONSTRAINT FK_GRUPTIPOAVE_TIPOAVE FOREIGN KEY (ID_TIPOAVE_SIMU)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE PEDIDO_DEVOLUCAO_VENDA_VALE ADD CONSTRAINT FK_PEDIDEVOVALE_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ESTOQUE_VISUAL_USUARIO ADD CONSTRAINT FK_USUAVISUESTO_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA_INTE ADD CONSTRAINT FK_INTEENTRAVEVIVA_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CRIACAO_LOTE_VISITA ADD CONSTRAINT FK_CRIALOTECATAMIDI FOREIGN KEY (ID_CATAMIDI)REFERENCES MIDIA_CATALOGO(ID_CATAMIDI);
//

ALTER TABLE CRIACAO_LOTE_VISITA ADD CONSTRAINT FK_CRIALOTEVISILOTE FOREIGN KEY (ID_LOTECRIA)REFERENCES CRIACAO_LOTE(ID_LOTECRIA);
//

ALTER TABLE CRIACAO_LOTE_VISITA ADD CONSTRAINT FK_CRIALOTEVISIAGEN FOREIGN KEY (ID_AGENLOTECRIA)REFERENCES CRIACAO_LOTE_AGENDA(ID_AGENLOTECRIA);
//

ALTER TABLE CRIACAO_LOTE_VISITA ADD CONSTRAINT FK_CRIALOTEVISIGRAN FOREIGN KEY (ID_TECNGRAN)REFERENCES GRANJA_TECNICO(ID_TECNGRAN);
//

CREATE INDEX IDX_JOIN_USUA_GR_US ON SCT_GR_US(ID_USUARIO);
//

EXEC SP_ExcluiEstatisticas 'VL_CARGSALAMOIFOTOINDI', 'FOTO_INDICE_MOI'
//

ALTER TABLE FOTO_INDICE_MOI ALTER COLUMN VL_CARGSALAMOIFOTOINDI NUMERIC(16, 6);
//

DROP STATISTICS VALIDA_PRODUCAO.EMPRESA;
//

DROP INDEX IDX_ValiProdDataLinh ON VALIDA_PRODUCAO;
//

ALTER TABLE VALIDA_PRODUCAO ALTER COLUMN EMPRESA CHAR(2);
//

EXEC SP_ExcluiEstatisticas 'FL_PRODPROPREGIPROD', 'VALIDA_PRODUCAO'
//

ALTER TABLE VALIDA_PRODUCAO ALTER COLUMN FL_PRODPROPREGIPROD CHAR(1);
//

CREATE INDEX IDX_ValiProdDataLinh ON VALIDA_PRODUCAO (EMPRESA, FILIAL, ID_PROCLINH, DT_REGIDATAPADR) INCLUDE (ID_MATEEMBA, Qn_PesoLiquRegiprod)
//

ALTER TABLE PRODUCAO_QUEBRA_PROG_ITEM ADD CONSTRAINT FK_USUACRIA_ITEMPROGQUEBPROD FOREIGN KEY (ID_USUACRIA_ITEMPROGQUEBPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'FL_CALCCUSTDEFIMATEEMBA', 'MATERIAL_EMBALAGEM_DEFINICAO'
//

ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ALTER COLUMN FL_CALCCUSTDEFIMATEEMBA CHAR(2);
//

ALTER TABLE RECIPIENTE ADD CONSTRAINT FK_RECIPIENTE_TIPORECI FOREIGN KEY (ID_TIPORECI)REFERENCES RECIPIENTE_TIPO(ID_TIPORECI);
//

EXEC SP_ExcluiEstatisticas 'VL_COMPONENTE', 'MATRIZ_COMPONENTES'
//

ALTER TABLE MATRIZ_COMPONENTES ALTER COLUMN VL_COMPONENTE NUMERIC(20, 10);
//

ALTER TABLE EQUIPAMENTO_CONTA_COZI ADD CONSTRAINT FK_EQUIPAMENTOEQUICONTCOZI FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE BARREIRA_TAG ADD CONSTRAINT FK_TAGBARR_ID_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE COMPONENTE_DIARIO ADD CONSTRAINT FK_COMP_DIAR_COMPAVEDIA FOREIGN KEY (ID_COMPAVE)REFERENCES AVE_COMPONENTE(ID_COMPAVE);
//

ALTER TABLE COMPONENTE_DIARIO ADD CONSTRAINT FK_COMP_DIAR_PRINPARTAVEDIA FOREIGN KEY (ID_PRINPARTAVE)REFERENCES AVE_PARTE_PRINCIPAL(ID_PRINPARTAVE);
//

ALTER TABLE COMPONENTE_DIARIO ADD CONSTRAINT FK_COMP_DIAR_REGIDATAPADRDIA FOREIGN KEY (ID_REGIDATAPADR)REFERENCES DATA_PADRAO_REGISTRO(ID_REGIDATAPADR);
//

ALTER TABLE COMPONENTE_DIARIO ADD CONSTRAINT FK_COMP_DIAR_TIPOAVEDIA FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE PESAGEM_PONTO ADD CONSTRAINT FK_PESAPONT_CONFBALA FOREIGN KEY (ID_CONFBALA)REFERENCES BALANCA_CONFIGURACAO(ID_CONFBALA);
//

EXEC SP_ExcluiEstatisticas 'FL_SINCERPDEVOVEND', 'PV_VENDA_DEVOLUCAO'
//

ALTER TABLE PV_VENDA_DEVOLUCAO ALTER COLUMN FL_SINCERPDEVOVEND VARCHAR(1);
//

ALTER TABLE ENTRADA_PRODUTO_IDENTIFICACAO ADD CONSTRAINT FK_FORNECEDOR_ETIQUETA FOREIGN KEY (ID_ETIQFORN)REFERENCES FORNECEDOR_ETIQUETA(ID_ETIQFORN);
//

ALTER TABLE ENTRADA_PRODUTO_IDENTIFICACAO ADD CONSTRAINT FK_IDENENTRPROD_ENTRPROD FOREIGN KEY (ID_ENTRPROD)REFERENCES ENTRADA_PRODUTO(ID_ENTRPROD);
//

ALTER TABLE ENTRADA_PRODUTO_IDENTIFICACAO ADD CONSTRAINT FK_MATERIAL_ALMOXARIFADO FOREIGN KEY (ID_MATEALMO)REFERENCES MATERIAL_ALMOXARIFADO(ID_MATEALMO);
//

ALTER TABLE ENTRADA_PRODUTO_IDENTIFICACAO ADD CONSTRAINT FK_MATERIAL_EMBALAGEM FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE ENTRADA_PRODUTO_IDENTIFICACAO ADD CONSTRAINT FK_PRODUCAO_REGISTRO FOREIGN KEY (ID_REGIPROD)REFERENCES PRODUCAO_REGISTRO(ID_REGIPROD);
//

ALTER TABLE MATERIAL_INVENTARIO_ITEM ADD CONSTRAINT FK_ITEMINVEMATE_USUAALTE FOREIGN KEY (ID_USUASIST_ALTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_ITEMINVEMATE_USUACRIA ON MATERIAL_INVENTARIO_ITEM (ID_USUASIST_CRIA);
//

ALTER TABLE ENTRADA_AVULSA ADD CONSTRAINT FK_ENTRAVUL_ALMO FOREIGN KEY (ID_ALMOXARIFADO)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE ENTRADA_AVULSA ADD CONSTRAINT FK_ENTRAVUL_USUAABER FOREIGN KEY (ID_USUASIST_ABERENTRAVUL)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVULSA ADD CONSTRAINT FK_ENTRAVUL_USUAFECH FOREIGN KEY (ID_USUASIST_FECHENTRAVUL)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVULSA ADD CONSTRAINT FK_ENTRAVUL_VEICTRAN FOREIGN KEY (ID_VEICTRAN)REFERENCES TRANSPORTADOR_VEICULO(ID_VEICTRAN);
//

ALTER TABLE ENTRADA_AVE_VIVA_PEND_DETA ADD CONSTRAINT FK_ENTRAVEVIVA_DETAPEND FOREIGN KEY (ID_ENTRAVEVIVA)REFERENCES ENTRADA_AVE_VIVA(ID_ENTRAVEVIVA);
//

ALTER TABLE ENTRADA_AVE_VIVA_PEND_DETA ADD CONSTRAINT FK_ESTAPENDD_DETAPEND FOREIGN KEY (ID_ESTAPENDESTRUNIDABAT)REFERENCES ABAT_UNID_ESTR_PENDURA_ESTACAO(ID_ESTAPENDESTRUNIDABAT);
//

ALTER TABLE ENTRADA_AVE_VIVA_PEND_DETA ADD CONSTRAINT FK_USUASIST_DETAPEND FOREIGN KEY (ID_USUASIST_REGIDETAPEND)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ENTRADA_AVE_VIVA_PEND_DETA ADD CONSTRAINT FK_USUASIST_FECHADETAPEND FOREIGN KEY (ID_USUASIST_FECHDETAPEND)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE FORMULARIO_QUALIDADE ADD CONSTRAINT FK_FORMQUAL_FORMQUALENTI FOREIGN KEY (ID_FORMQUALMETAENTI)REFERENCES FORM_QUAL_META_ENTIDADE(ID_FORMQUALMETAENTI);
//

CREATE INDEX IDX_FORMQUALMETA_FORM ON FORMULARIO_QUALIDADE (ID_FORMQUALMETA);
//

ALTER TABLE FORMULARIO_QUALIDADE ADD CONSTRAINT FK_FORMQUAL_USUASISTALTE FOREIGN KEY (ID_USUASIST_ALTEFORMQUAL)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE FORMULARIO_QUALIDADE ADD CONSTRAINT FK_FORMQUAL_USUASISTCRIA FOREIGN KEY (ID_USUASIST_CRIAFORMQUAL)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_TURNO ADD CONSTRAINT FK_TURNREGIPROD_AVE FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE MATERIAL_SEQUESTRO_ITEM ADD CONSTRAINT FK_MATE_ITEMSEQUMATE FOREIGN KEY (ID_SEQUMATE)REFERENCES MATERIAL_SEQUESTRO(ID_SEQUMATE);
//

ALTER TABLE MATERIAL_SEQUESTRO_ITEM ADD CONSTRAINT FK_MOVI_ITEMSEQUMATE FOREIGN KEY (ID_MOVIMATE)REFERENCES MATERIAL_MOVIMENTACAO(ID_MOVIMATE);
//

DROP STATISTICS ETIQUETA_DESIGN_VERSAO.FILIAL;
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ALTER COLUMN FILIAL NUMERIC(10, 0);
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD CONSTRAINT FK_ETIQUETA_DESIGN_USUAVERS FOREIGN KEY (ID_USUASIST_ALTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD CONSTRAINT FK_VERSDESIETIQ_USUAALTE FOREIGN KEY (ID_USUASIST_ALTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'GN_IMAGVERDESIETIQ', 'ETIQUETA_DESIGN_VERSAO'
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ALTER COLUMN GN_IMAGVERDESIETIQ VARBINARY(MAX);
//

EXEC SP_ExcluiEstatisticas 'VL_MATECOMPANIMPRODCUST', 'CUSTO_PRODUTO_ANIMAL_COMP'
//

ALTER TABLE CUSTO_PRODUTO_ANIMAL_COMP ALTER COLUMN VL_MATECOMPANIMPRODCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITCOMPANIMPRODCUST', 'CUSTO_PRODUTO_ANIMAL_COMP'
//

ALTER TABLE CUSTO_PRODUTO_ANIMAL_COMP ALTER COLUMN VL_UNITCOMPANIMPRODCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITPRESCOMPANIMPRODCUST', 'CUSTO_PRODUTO_ANIMAL_COMP'
//

ALTER TABLE CUSTO_PRODUTO_ANIMAL_COMP ALTER COLUMN VL_UNITPRESCOMPANIMPRODCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MATEPRESCOMPANIMPRODCUST', 'CUSTO_PRODUTO_ANIMAL_COMP'
//

ALTER TABLE CUSTO_PRODUTO_ANIMAL_COMP ALTER COLUMN VL_MATEPRESCOMPANIMPRODCUST NUMERIC(16, 6);
//

ALTER TABLE FORMULARIO_QUALIDADE_ITEM ADD CONSTRAINT FK_FORMQUALITEM_FORMQUAL FOREIGN KEY (ID_FORMQUAL)REFERENCES FORMULARIO_QUALIDADE(ID_FORMQUAL);
//

ALTER TABLE FORMULARIO_QUALIDADE_ITEM ADD CONSTRAINT FK_FORMQUALITEM_USUASISTALTE FOREIGN KEY (ID_USUASIST_ALTEFORMQUALITEM)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_VALOMATE', 'INTE_MATERIAL_PRECO_SAP'
//

ALTER TABLE INTE_MATERIAL_PRECO_SAP ALTER COLUMN VL_VALOMATE NUMERIC(16, 3);
//

ALTER TABLE EQUIPAMENTO_TURNO_INTERVALO ADD CONSTRAINT FK_INTETURNEQUI_TURNEQUI FOREIGN KEY (ID_TURNEQUI)REFERENCES EQUIPAMENTO_TURNO(ID_TURNEQUI);
//

EXEC SP_ExcluiEstatisticas 'VL_HISTUTILIDADE', 'UTILIDADE_HIST'
//

ALTER TABLE UTILIDADE_HIST ALTER COLUMN VL_HISTUTILIDADE NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_REALTOTAMPPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_REAL ALTER COLUMN VL_REALTOTAMPPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_REALTOTADOUPPPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_REAL ALTER COLUMN VL_REALTOTADOUPPPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_REALTOTADOPRODPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_REAL ALTER COLUMN VL_REALTOTADOPRODPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_REALTOTACTPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_REAL ALTER COLUMN VL_REALTOTACTPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_REALTOTAMATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_REAL ALTER COLUMN VL_REALTOTAMATEPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MENSDESPOPER', 'DESPESA_OPERACIONAL_MENSAL'
//

ALTER TABLE DESPESA_OPERACIONAL_MENSAL ALTER COLUMN VL_MENSDESPOPER NUMERIC(16, 6);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM ADD CONSTRAINT FK_MATEENTRCONT_MATEENTR FOREIGN KEY (ID_ENTRMATE)REFERENCES MATERIAL_ENTRADA(ID_ENTRMATE);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM ADD CONSTRAINT FK_MATEENTRCONT_USUASISTABER FOREIGN KEY (ID_USUASIST_ABERCONT)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM ADD CONSTRAINT FK_MATEENTRCONT_USUASISTCRIA FOREIGN KEY (ID_USUASIST_CRIACONT)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA_CONTAGEM ADD CONSTRAINT FK_MATEENTRCONT_USUASISTFECH FOREIGN KEY (ID_USUASIST_FECHCONT)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_POPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_POPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UTPOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_UTPOPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_GEPOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_GEPOPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_COPOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_COPOPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MAPOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_MAPOPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAPOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_TOTAPOPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ENPOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_ENPOPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MOPOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_PO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_PO ALTER COLUMN VL_MOPOPRODCUSTMENS NUMERIC(16, 6);
//

ALTER TABLE CLIENTE_SEFAZ_LOG ADD CONSTRAINT FK_LOGSEFACLIE_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_CUSTCCITEMFECHESTO', 'ESTOQUE_FECHAMENTO_ITEM_CC'
//

ALTER TABLE ESTOQUE_FECHAMENTO_ITEM_CC ALTER COLUMN VL_CUSTCCITEMFECHESTO NUMERIC(15, 3);
//

ALTER TABLE MATERIAL_MOVIMENTACAO_TIPO ADD CONSTRAINT FK_USUASIST_CRIA FOREIGN KEY (ID_USUASIST_CRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'FL_PERMEXPESEQUITEMPEDIVEND', 'PEDIDO_VENDA_ITEM'
//

ALTER TABLE PEDIDO_VENDA_ITEM ALTER COLUMN FL_PERMEXPESEQUITEMPEDIVEND CHAR(2);
//

ALTER TABLE ENTRADA_AVE_VIVA_ANEXO ADD CONSTRAINT FK_USUASIST_ANEXENTRAVEVIVA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_CUSTMEDIMATE', 'INTE_MATERIAL_SAP'
//

ALTER TABLE INTE_MATERIAL_SAP ALTER COLUMN VL_CUSTMEDIMATE NUMERIC(16, 3);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_MP ADD CONSTRAINT FK_MPSIMUCUSTMENS_CUSTMENS FOREIGN KEY (ID_PRODSIMUCUSTMENS)REFERENCES CUSTO_MENSAL_SIMULADO_PROD(ID_PRODSIMUCUSTMENS);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITMATEVIVO', 'ENTRADA_AVE_VIVA_ITEM'
//

ALTER TABLE ENTRADA_AVE_VIVA_ITEM ALTER COLUMN VL_UNITMATEVIVO NUMERIC(13, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_MENSDESPOPER', 'INTERFACE_DESPOPERMENS'
//

ALTER TABLE INTERFACE_DESPOPERMENS ALTER COLUMN VL_MENSDESPOPER NUMERIC(16, 3);
//

ALTER TABLE MATERIAL_EMBALAGEM_COMPOSICAO ADD CONSTRAINT FK_MATEEMBACOMP_UNIDMEDI FOREIGN KEY (ID_UNIDMEDI_ERP)REFERENCES UNIDADE_MEDIDA(ID_UNIDMEDI);
//

CREATE INDEX IDX_USUASISTALTEESTR_MATEEMBACOMP ON MATERIAL_EMBALAGEM_COMPOSICAO (ID_USUASIST_ALTEESTRCOMP);
//

CREATE INDEX IDX_CRIAESTRCOMP_MATEEMBACOMP ON MATERIAL_EMBALAGEM_COMPOSICAO (ID_USUASIST_CRIAESTRCOMP);
//

ALTER TABLE MATERIAL_EMBALAGEM_COMPOSICAO ADD CONSTRAINT FK_MATEEMBACOMPMATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE EXPEDICAO_CARGA_IDENT_COMPL ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

ALTER TABLE CRIACAO_LOTE_PCC01Q_MEDI ADD CONSTRAINT FK_USUASIST_MEDIPCCQLOTECRIA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EQUIPAMENTO_TURNO_DIARIO ADD CONSTRAINT FK_DIARTURNEQUI_EQUI FOREIGN KEY (ID_EQUI)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE ALMOXARIFADO_ENDEREC ADD CONSTRAINT FK__ALMOXARIF__ID_AG__487C6371 FOREIGN KEY (ID_AGRUENDEALMO)REFERENCES ALMOXARIFADO_ENDEREC_AGRUP(ID_AGRUENDEALMO);
//

ALTER TABLE MATERIAL_SEQUESTRO_ANEXO ADD CONSTRAINT FK_SEQUMATE_ANEXSEQUMATE FOREIGN KEY (ID_SEQUMATE)REFERENCES MATERIAL_SEQUESTRO(ID_SEQUMATE);
//

EXEC SP_ExcluiEstatisticas 'QN_TOTAMATEEMBACARGLINHSIPRPD', 'PROD_PROG_SIMU_LINH_CARG_ME'
//

ALTER TABLE PROD_PROG_SIMU_LINH_CARG_ME ALTER COLUMN QN_TOTAMATEEMBACARGLINHSIPRPD NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'QN_ANIMMATEEMBACARGLINHSIPRPD', 'PROD_PROG_SIMU_LINH_CARG_ME'
//

ALTER TABLE PROD_PROG_SIMU_LINH_CARG_ME ALTER COLUMN QN_ANIMMATEEMBACARGLINHSIPRPD NUMERIC(10, 0);
//

EXEC SP_ExcluiEstatisticas 'VL_MENSRECUCUST', 'CUSTO_RECUPERACAO_MENSAL'
//

ALTER TABLE CUSTO_RECUPERACAO_MENSAL ALTER COLUMN VL_MENSRECUCUST NUMERIC(16, 6);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_FG ADD CONSTRAINT FK_FGSIMUCUSTMENS FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_FG ADD CONSTRAINT FK_FGSIMUCUSTMENS_ESTR FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_FG ADD CONSTRAINT Pk_FGSIMUCUSTMENS_LINH FOREIGN KEY (ID_LINHTIPOAVE)REFERENCES AVE_TIPO_LINHAGEM(ID_LINHTIPOAVE);
//

ALTER TABLE PRODUCAO_PROCES_UNID_EQUIP ADD CONSTRAINT FK_PROC_EQUIPUNIDPROCPROD FOREIGN KEY (ID_UNIDPROCPROD)REFERENCES PRODUCAO_PROCESSAMENTO_UNIDADE(ID_UNIDPROCPROD);
//

EXEC SP_ExcluiEstatisticas 'VL_KILOTRANCUST', 'CUSTO_TRANSFORMACAO_KILO'
//

DROP INDEX IDX_CUSTTRANSKILO ON CUSTO_TRANSFORMACAO_KILO;
//

ALTER TABLE CUSTO_TRANSFORMACAO_KILO ALTER COLUMN VL_KILOTRANCUST NUMERIC(16, 6);
//

CREATE INDEX IDX_CUSTTRANSKILO ON CUSTO_TRANSFORMACAO_KILO (VL_KILOTRANCUST, EMPRESA, FILIAL) INCLUDE (DT_VIGEKILOTRANCUST);
//

ALTER TABLE PRODUCAO_QUEBRA_PROGRESSIVA ADD CONSTRAINT FK_USUACRIA_PROGQUEBPROD FOREIGN KEY (ID_USUACRIA_PROGQUEBPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_INVEMATE_USUACRIA ON MATERIAL_INVENTARIO (ID_USUASIST_CRIA);
//

CREATE INDEX IDX_INVEMATE_USUAFECH ON MATERIAL_INVENTARIO (ID_USUASIST_FECH);
//

ALTER TABLE FRETE_APONTAMENTO_FINANCEIRO ADD CONSTRAINT FK_VALIUSUASIST FOREIGN KEY (ID_VALIUSUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_SALAMINIFOTOINDI', 'FOTO_INDICE'
//

ALTER TABLE FOTO_INDICE ALTER COLUMN VL_SALAMINIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_KMHFOTOINDI', 'FOTO_INDICE'
//

ALTER TABLE FOTO_INDICE ALTER COLUMN VL_KMHFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_INDIBASEFOTOINDI', 'FOTO_INDICE'
//

ALTER TABLE FOTO_INDICE ALTER COLUMN VL_INDIBASEFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_AJUSINDIBASEFOTOINDI', 'FOTO_INDICE'
//

ALTER TABLE FOTO_INDICE ALTER COLUMN VL_AJUSINDIBASEFOTOINDI NUMERIC(16, 6);
//

ALTER TABLE FORM_QUAL_ITEM_ANEXO ADD CONSTRAINT FK_FORMQUALITANEX_FORMQUALITEM FOREIGN KEY (ID_FORMQUALITEM)REFERENCES FORMULARIO_QUALIDADE_ITEM(ID_FORMQUALITEM);
//

ALTER TABLE TMP_REL210_DESTINACAO ADD CONSTRAINT FK_REL210DEST_ID_PROCLIH FOREIGN KEY (ID_PROCLINH)REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH);
//

ALTER TABLE TMP_REL210_DESTINACAO ADD CONSTRAINT FK_REL210DEST_ID_TIPOAVE FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

CREATE INDEX IDX_PESAAGRU_USUASIST ON PESAGEM_AGRUPADA(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_GASTMENSCENTCUST', 'INTE_CUSTO_CENTRO_GASTO_MENSAL_SAP'
//

ALTER TABLE INTE_CUSTO_CENTRO_GASTO_MENSAL_SAP ALTER COLUMN VL_GASTMENSCENTCUST NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMODPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECMODPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMOIPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECMOIPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECESPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECESPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECATPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECATPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMCPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECMCPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECPMPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECPMPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMANPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECMANPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECUTILPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECUTILPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECEEDPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECEEDPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECEECPOSTOPER', 'POSTO_OPERATIVO'
//

ALTER TABLE POSTO_OPERATIVO ALTER COLUMN VL_ECEECPOSTOPER NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_TUNEL_CONTROLE_HIST ADD CONSTRAINT FK_HISTCONTTUNEPROD FOREIGN KEY (ID_CONTTUNEPROD)REFERENCES PRODUCAO_TUNEL_CONTROLE(ID_CONTTUNEPROD);
//

ALTER TABLE REALOCACAO_PALETE_LOTE ADD CONSTRAINT FK_REALPALELOTE_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ETIQUETA_PALETE_AVULSA ADD CONSTRAINT FK_EMBA_AVULPALEETIQ FOREIGN KEY (ID_EMBAAVULPALEETIQ)REFERENCES EMBALAGEM_DEFINICAO(ID_DEFIEMBA);
//

ALTER TABLE ETIQUETA_PALETE_AVULSA ADD CONSTRAINT FK_MATEEMBA_AVULPALEETIQ FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE ETIQUETA_PALETE_AVULSA ADD CONSTRAINT FK_USUASIST_AVULPALEETIQ FOREIGN KEY (ID_USUASIST_CRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ESTRUNIDABAT FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_COMPAVE FOREIGN KEY (ID_COMPAVE)REFERENCES AVE_COMPONENTE(ID_COMPAVE);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_CONSAVE FOREIGN KEY (ID_CONSAVE)REFERENCES AVE_CONSTITUICAO(ID_CONSAVE);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_ENTRAVEVIVA FOREIGN KEY (ID_ENTRAVEVIVA)REFERENCES ENTRADA_AVE_VIVA(ID_ENTRAVEVIVA);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_ITEMCONSAVE FOREIGN KEY (ID_ITEMCONSAVE)REFERENCES AVE_CONSTITUICAO_ITEM(ID_ITEMCONSAVE);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_LINHTIPOAVE FOREIGN KEY (ID_LINHTIPOAVE)REFERENCES AVE_TIPO_LINHAGEM(ID_LINHTIPOAVE);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_PRINPARTAVE FOREIGN KEY (ID_PRINPARTAVE)REFERENCES AVE_PARTE_PRINCIPAL(ID_PRINPARTAVE);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_REGIDATAPADR FOREIGN KEY (ID_REGIDATAPADR)REFERENCES DATA_PADRAO_REGISTRO(ID_REGIDATAPADR);
//

ALTER TABLE COMPONENTE_ENTRADA_DIARIO ADD CONSTRAINT FK_DIARENTRCOMP_ID_TIPOAVE FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD CONSTRAINT FK_FORMQUALMETA_FORMQLMTENTI FOREIGN KEY (ID_FORMQUALMETAENTI)REFERENCES FORM_QUAL_META_ENTIDADE(ID_FORMQUALMETAENTI);
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD CONSTRAINT FK_ID_FORMQUALMETACAMPCUST1 FOREIGN KEY (ID_FORMQUALMETACAMPCUST1)REFERENCES FORM_QUAL_META_CAMPCUST(ID_FORMQUALMETACAMPCUST);
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD CONSTRAINT FK_ID_FORMQUALMETACAMPCUST2 FOREIGN KEY (ID_FORMQUALMETACAMPCUST2)REFERENCES FORM_QUAL_META_CAMPCUST(ID_FORMQUALMETACAMPCUST);
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD CONSTRAINT FK_ID_FORMQUALMETACAMPCUST3 FOREIGN KEY (ID_FORMQUALMETACAMPCUST3)REFERENCES FORM_QUAL_META_CAMPCUST(ID_FORMQUALMETACAMPCUST);
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD CONSTRAINT FK_ID_FORMQUALMETACAMPCUST4 FOREIGN KEY (ID_FORMQUALMETACAMPCUST4)REFERENCES FORM_QUAL_META_CAMPCUST(ID_FORMQUALMETACAMPCUST);
//

ALTER TABLE FORMULARIO_QUALIDADE_META ADD CONSTRAINT FK_ID_FORMQUALMETACAMPCUST5 FOREIGN KEY (ID_FORMQUALMETACAMPCUST5)REFERENCES FORM_QUAL_META_CAMPCUST(ID_FORMQUALMETACAMPCUST);
//

ALTER TABLE PRODUCAO_PROCESSAMENTO_UNIDADE ADD CONSTRAINT FK_PROCPROD_UNIDPROCPROD FOREIGN KEY (ID_PROCPROD)REFERENCES PRODUCAO_PROCESSO(ID_PROCPROD);
//

ALTER TABLE PRODUCAO_BATCH_PESAGEM_REPO ADD CONSTRAINT FK_PRODBATCPESAREPO_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_GASTMENSCENTCUST', 'INTERFACE_CUSTCENTGASTMENS'
//

ALTER TABLE INTERFACE_CUSTCENTGASTMENS ALTER COLUMN VL_GASTMENSCENTCUST NUMERIC(16, 3);
//

ALTER TABLE CUSTO_MENSAL_SIMULADO_PROD ADD CONSTRAINT FK_PRODSIMUCUSTMENS_CUSTMENS FOREIGN KEY (ID_SIMUCUSTMENS)REFERENCES CUSTO_MENSAL_SIMULADO(ID_SIMUCUSTMENS);
//

EXEC SP_ExcluiEstatisticas 'GN_PLACVEICNOTAFISC', 'NOTA_FISCAL'
//

ALTER TABLE NOTA_FISCAL ALTER COLUMN GN_PLACVEICNOTAFISC VARCHAR(10);
//

ALTER TABLE ESTOQUE_VISUAL ADD CONSTRAINT FK_VISUESTO_USUASIST_ABER FOREIGN KEY (ID_USUASIST_ABER)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ESTOQUE_VISUAL ADD CONSTRAINT FK_VISUESTO_USUASIST_CANC FOREIGN KEY (ID_USUASIST_CANC)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ESTOQUE_VISUAL ADD CONSTRAINT FK_VISUESTO_USUASIST_FECH FOREIGN KEY (ID_USUASIST_FECH)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ESTOQUE_VISUAL ADD CONSTRAINT FK_VISUESTO_USUASIST_MONT FOREIGN KEY (ID_USUASIST_MONT)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PEDIDO_VENDA_ITEM_CORTE ADD CONSTRAINT FK_CORTITPV_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_REQUISICAO_NOTA_FISC ADD CONSTRAINT FK_REQUMATE_FISCNOTAREQUMATE FOREIGN KEY (ID_REQUMATE)REFERENCES MATERIAL_REQUISICAO(ID_REQUMATE);
//

ALTER TABLE PRODUCAO_REGISTRO_REJEITO ADD CONSTRAINT FK_EQUIPAMENTOREGIPRODREJE FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE PRODUCAO_REGISTRO_REJEITO ADD CONSTRAINT FK_MATEEMBAREGIPRODREJE FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE ETIQUETA_DESIGN ADD CONSTRAINT FK_DESIETIQ_IMPR FOREIGN KEY (ID_IMPRESSORA)REFERENCES IMPRESSORA(ID_IMPR);
//

ALTER TABLE ETIQUETA_DESIGN ADD CONSTRAINT FK_ETIQUETA_DESIGN_IMPRESSORA FOREIGN KEY (ID_IMPRESSORA)REFERENCES IMPRESSORA(ID_IMPR);
//

EXEC SP_ExcluiEstatisticas 'QN_COMPCOMPAVEMATEEMBA', 'MATERIAL_EMBALAGEM_AVE_COMP'
//

ALTER TABLE MATERIAL_EMBALAGEM_AVE_COMP ALTER COLUMN QN_COMPCOMPAVEMATEEMBA NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG ADD CONSTRAINT FK_ALMODEST_REPEREGIPROD FOREIGN KEY (ID_ALMODESTREPEREGIPROD)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG ADD CONSTRAINT FK_REPEREGIPROD_MATEEMBA FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG ADD CONSTRAINT FK_REPEREGIPROD_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'GN_HISTMOVIREGIPROD', 'PRODUCAO_REGISTRO_MOVIMENTACAO'
//

ALTER TABLE PRODUCAO_REGISTRO_MOVIMENTACAO ALTER COLUMN GN_HISTMOVIREGIPROD VARCHAR(200);
//

CREATE INDEX IDX_PRODREGIMOVI_USUASIST ON PRODUCAO_REGISTRO_MOVIMENTACAO (ID_USUASIST);
//

ALTER TABLE PRODUCAO_INVENTARIO_PALETE ADD CONSTRAINT FK_INVE_PALEINVEPROD FOREIGN KEY (ID_INVEPROD)REFERENCES PRODUCAO_INVENTARIO(ID_INVEPROD);
//

ALTER TABLE PRODUCAO_INVENTARIO_PALETE ADD CONSTRAINT FK_PALE_PALEINVEPROD FOREIGN KEY (ID_PALEEXPE)REFERENCES EXPEDICAO_PALETE(ID_PALEEXPE);
//

ALTER TABLE EQUIPAMENTO_DROP ADD CONSTRAINT FK_IDUSUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EXPEDICAO_PALETE_AUDI_PALEIDEN ADD CONSTRAINT FK_EXPEAUDIIDEN_PALEEXPEAUDI FOREIGN KEY (ID_PALEEXPEAUDI)REFERENCES EXPEDICAO_PALETE_AUDITORIA(ID_PALEEXPEAUDI);
//

ALTER TABLE EXPEDICAO_PALETE_AUDI_PALEIDEN ADD CONSTRAINT FK_EXPEAUDIIDEN_REGIPROD FOREIGN KEY (ID_REGIPROD)REFERENCES PRODUCAO_REGISTRO(ID_REGIPROD);
//

ALTER TABLE PESAGEM_GAIOLA ADD CONSTRAINT FK_GAIOPESA_USUAPESABRUT FOREIGN KEY (ID_USUAPESABRUTGAIOPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_GAIOLA ADD CONSTRAINT FK_GAIOPESA_USUAPESATARA FOREIGN KEY (ID_USUAPESATARAGAIOPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_GAIOLA ADD CONSTRAINT FK_GAIOPESA_USUASIST FOREIGN KEY (ID_USUAGAIOPESA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE VENDEDOR_SISTEMA_USUARIO ADD CONSTRAINT FK_USUASIST_USUASISTVEND FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CREDITO_LOG ADD CONSTRAINT FK_USUA_CREDLOG FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_EMBALAGEM_FAIXA_PESO ADD CONSTRAINT FK_MATEEMBA_PESOFAIXMATEEMBA FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE PRODUCAO_REGISTRO_CARCACA ADD CONSTRAINT FK_USUAREGI_CORTDEST FOREIGN KEY (ID_USUAREGISISTUSUA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PERMISSAO_LIBERACAO_USUARIO ADD CONSTRAINT FK_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MOTI_DESC_PESQ_TOUCH_USUASIST ADD CONSTRAINT FK_PESQMOTIDESCTOUC_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//
ALTER TABLE PROC_MIGR_CHECKLIST ADD CONSTRAINT FK_FK_CHECMIGRPROC_FORMQUALMETA FOREIGN KEY (ID_FORMQUALMETA)REFERENCES FORMULARIO_QUALIDADE_META(ID_FORMQUALMETA);
//

ALTER TABLE PROC_MIGR_CHECKLIST ADD CONSTRAINT FK_FK_CHECMIGRPROC_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EXPEDICAO_CARGA_DEVOLUCAO ADD CONSTRAINT FK_EXPECARGDEVO_ABERUSUASIST FOREIGN KEY (ID_USUASIST_ABERTURA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EXPEDICAO_CARGA_DEVOLUCAO ADD CONSTRAINT FK_EXPECARGDEVO_FECHUSUASIST FOREIGN KEY (ID_USUASIST_FECHAMENTO)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EXPEDICAO_CARGA_DEVOLUCAO ADD CONSTRAINT FK_EXPECARGDEVO_MONTUSUASIST FOREIGN KEY (ID_USUASIST_MONTAGEM)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CLIENTE_CREDITO ADD CONSTRAINT FK_CREDCLIE_USUASIST FOREIGN KEY (ID_USUASIST_BLOQ)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_ITEMCOSTTABL', 'INTERFACE_COST_TABLE'
//

ALTER TABLE INTERFACE_COST_TABLE ALTER COLUMN VL_ITEMCOSTTABL NUMERIC(21, 8);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITTABEPRECESTO', 'TABELA_PRECO_ESTOQUE'
//

ALTER TABLE TABELA_PRECO_ESTOQUE ALTER COLUMN VL_UNITTABEPRECESTO NUMERIC(16, 2);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITOPERTABEPRECESTO', 'TABELA_PRECO_ESTOQUE'
//

ALTER TABLE TABELA_PRECO_ESTOQUE ALTER COLUMN VL_UNITOPERTABEPRECESTO NUMERIC(16, 2);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITRESUTABEPRECESTO', 'TABELA_PRECO_ESTOQUE'
//

ALTER TABLE TABELA_PRECO_ESTOQUE ALTER COLUMN VL_UNITRESUTABEPRECESTO NUMERIC(16, 2);
//

EXEC SP_ExcluiEstatisticas 'NM_MOTIDESCPROD', 'PRODUCAO_DESCARTE_MOTIVO'
//

ALTER TABLE PRODUCAO_DESCARTE_MOTIVO ALTER COLUMN NM_MOTIDESCPROD VARCHAR(150);
//

EXEC SP_ExcluiEstatisticas 'VL_UPPCUSTMENS', 'CUSTO_MENSAL'
//

ALTER TABLE CUSTO_MENSAL ALTER COLUMN VL_UPPCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_DESPOPERCUSTMENS', 'CUSTO_MENSAL'
//

ALTER TABLE CUSTO_MENSAL ALTER COLUMN VL_DESPOPERCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_FOTOINDICUSTMENS', 'CUSTO_MENSAL'
//

ALTER TABLE CUSTO_MENSAL ALTER COLUMN VL_FOTOINDICUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_CENTCUSTCUSTMENS', 'CUSTO_MENSAL'
//

ALTER TABLE CUSTO_MENSAL ALTER COLUMN VL_CENTCUSTCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_AJUSINDIBASECUSTMENS', 'CUSTO_MENSAL'
//

ALTER TABLE CUSTO_MENSAL ALTER COLUMN VL_AJUSINDIBASECUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_KMHCUSTMENS', 'CUSTO_MENSAL'
//

ALTER TABLE CUSTO_MENSAL ALTER COLUMN VL_KMHCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_SALAMINICUSTMENS', 'CUSTO_MENSAL'
//

ALTER TABLE CUSTO_MENSAL ALTER COLUMN VL_SALAMINICUSTMENS NUMERIC(16, 6);
//

ALTER TABLE GRANJA_PROPRIEDADE_EQUI_PAGA ADD CONSTRAINT FK_EQUIPAGA_EQUIAPAN FOREIGN KEY (ID_EQUIAPAN)REFERENCES APANHA_EQUIPE(ID_EQUIAPAN);
//

ALTER TABLE GRANJA_PROPRIEDADE_EQUI_PAGA ADD CONSTRAINT FK_EQUIPAGA_PROPGRAN FOREIGN KEY (ID_PROPGRAN)REFERENCES GRANJA_PROPRIEDADE(ID_PROPGRAN);
//

ALTER TABLE FORM_QUAL_META_ITEM_ANALISE ADD CONSTRAINT FK_FORMQLMTITANAL_FORMQLMTITEM FOREIGN KEY (ID_FORMQUALMETAITEM)REFERENCES FORMULARIO_QUALIDADE_META_ITEM(ID_FORMQUALMETAITEM);
//

ALTER TABLE USUARIO_EXCECAO_AD ADD CONSTRAINT FK_USUAEXCEAD_SCT_USUARIO FOREIGN KEY (ID_USUARIO)REFERENCES SCT_USUARIO(ID_USUARIO);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA ADD CONSTRAINT FK_MATEENTRCARG_TRANMOTOTRAN FOREIGN KEY (ID_TRANMOTOTRAN)REFERENCES TRANSPORTADOR_MOTORISTA_TRANSP(ID_TRANMOTOTRAN);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA ADD CONSTRAINT FK_MATEENTRCARG_USUASISTABERCONT FOREIGN KEY (ID_USUASIST_ABERCONTCARG)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA ADD CONSTRAINT FK_MATEENTRCARG_USUASISTCRIA FOREIGN KEY (ID_USUASIST_CRIACARG)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA ADD CONSTRAINT FK_MATEENTRCARG_USUASISTFECHCARG FOREIGN KEY (ID_USUASIST_FECHCARG)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA ADD CONSTRAINT FK_MATEENTRCARG_USUASISTFECHCONT FOREIGN KEY (ID_USUASIST_FECHCONTCARG)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA_CARGA ADD CONSTRAINT FK_MATEENTRCARG_VEICTRAN FOREIGN KEY (ID_VEICTRAN)REFERENCES TRANSPORTADOR_VEICULO(ID_VEICTRAN);
//

ALTER TABLE ETIQUETA_MATERIAL_AVULSA ADD CONSTRAINT FK_ALMO_AVULMATEETIQ FOREIGN KEY (ID_ALMOXARIFADO)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE ETIQUETA_MATERIAL_AVULSA ADD CONSTRAINT FK_MATE_AVULMATEETIQ FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE ETIQUETA_MATERIAL_AVULSA ADD CONSTRAINT FK_USUASIST_AVULMATEETIQ FOREIGN KEY (ID_USUASIST_CRIA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ESTOQUE_RELATORIO_BASE ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

EXEC SP_ExcluiEstatisticas 'VL_MOVIMATE', 'MATERIAL_MOVIMENTACAO'
//

ALTER TABLE MATERIAL_MOVIMENTACAO ALTER COLUMN VL_MOVIMATE NUMERIC(16, 3);
//

ALTER TABLE EQUIPAMENTO_PARADA ADD CONSTRAINT FK_MOTI_REGIPARAEQUI1 FOREIGN KEY (ID_MOTIPARAEQUI)REFERENCES EQUIPAMENTO_PARADA_MOTIVO(ID_MOTIPARAEQUI);
//

ALTER TABLE EQUIPAMENTO_PARADA ADD CONSTRAINT FK_PARAEQUI_DIARTURNPROD FOREIGN KEY (ID_DIARTURNPROD)REFERENCES PRODUCAO_TURNO_DIARIO(ID_DIARTURNPROD);
//

EXEC SP_ExcluiEstatisticas 'FL_TIPOMOVIMATE', 'ESTOQUE_FECHAMENTO_MATE_CC'
//

ALTER TABLE ESTOQUE_FECHAMENTO_MATE_CC ALTER COLUMN FL_TIPOMOVIMATE CHAR(2);
//

ALTER TABLE PRODUCAO_REGISTRO_REPOSITORIO ADD CONSTRAINT FK_REGIPRODREPO_RECIPIENTE FOREIGN KEY (ID_RECIPIENTE)REFERENCES RECIPIENTE(ID_RECIPIENTE);
//

ALTER TABLE PRODUCAO_REGISTRO_REPOSITORIO ADD CONSTRAINT FK_REPOREGIPROD_USUASIST FOREIGN KEY (ID_USUASIST_REGIPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_MEDIMENSCUST', 'CUSTO_MENSAL_MEDIO'
//

ALTER TABLE CUSTO_MENSAL_MEDIO ALTER COLUMN VL_MEDIMENSCUST NUMERIC(15, 5);
//

EXEC SP_ExcluiEstatisticas 'VL_INTECUSTANIM', 'INTERFACE_CUSTANIM'
//

ALTER TABLE INTERFACE_CUSTANIM ALTER COLUMN VL_INTECUSTANIM NUMERIC(20, 10);
//

ALTER TABLE CONS_MATE_ADIC_PROD_TERM ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

CREATE INDEX IDX_NR_TAGSETIQ_MATEEMBA ON MATERIAL_EMBALAGEM_TAGS_ETIQ(NR_TAGSETIQ);
//

ALTER TABLE MATERIAL_EMBALAGEM_TAGS_ETIQ ADD CONSTRAINT FK_TAGSETIQ_MATEEMBA_ID FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE CHECKLIST_SINCRONISMO_LOG ADD CONSTRAINT FK_LOGSINCCHEC_SINCCONFCHEC FOREIGN KEY (ID_SINCCONFCHEC)REFERENCES CHECKLIST_CONF_SINCRONISMO(ID_SINCCONFCHEC);
//

ALTER TABLE PRODUCAO_REGISTRO ADD CONSTRAINT FK_REGIPROD_MATEEMBADEFI FOREIGN KEY (ID_EMBALAGEM, ID_MATERIAL)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_EMBALAGEM, ID_MATERIAL);
//

ALTER TABLE PRODUCAO_REGISTRO ADD CONSTRAINT FK_REGIPROD_MOTIMOVIREGIPROD FOREIGN KEY (ID_MOTIMOVIREGIPROD)REFERENCES PRODUCAO_REGISTRO_MOVI_MOTIVO(ID_MOTIMOVIREGIPROD);
//

ALTER TABLE PRODUCAO_REGISTRO ADD CONSTRAINT FK_REGIPROD_RECIPIENTE FOREIGN KEY (ID_RECIPIENTE)REFERENCES RECIPIENTE(ID_RECIPIENTE);
//

ALTER TABLE PRODUCAO_REGISTRO ADD CONSTRAINT FK_USUASIST_ENTRTUNEREGIPROD FOREIGN KEY (ID_USUASIST_ENTRTUNEREGIPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_USUASIST_REGIPROD_ID ON PRODUCAO_REGISTRO(ID_USUASIST_REGIPROD);
//

ALTER TABLE PRODUCAO_REGISTRO ADD CONSTRAINT FK_USUASIST_SAIDTUNEREGIPROD FOREIGN KEY (ID_USUASIST_SAIDTUNEREGIPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_JOIN_DIREITOS_US_USUARIO ON SCT_DIREITOS_US (ID_USUARIO);
//

EXEC SP_ExcluiEstatisticas 'VL_MPPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_MP'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_MP ALTER COLUMN VL_MPPRODCUSTMENS NUMERIC(16, 6);
//

ALTER TABLE MATERIAL_EMBALAGEM_SAID_SUBP ADD CONSTRAINT FK_SAIDSUBP_MATEEMBA_SAID FOREIGN KEY (ID_MATEEMBA_SAID)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE MATERIAL_EMBALAGEM_SAID_SUBP ADD CONSTRAINT FK_SAIDSUBP_MATEEMBA_SUBP FOREIGN KEY (ID_MATEEMBA_SUBP)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE REGISTRO_OCORRENCIA ADD CONSTRAINT FK_OCORREGI_OCORMOTI FOREIGN KEY (ID_OCORMOTI)REFERENCES MOTIVO_OCORRENCIA(ID_OCORMOTI);
//

ALTER TABLE REGISTRO_OCORRENCIA ADD CONSTRAINT FK_OCORREGI_OCORTIPO FOREIGN KEY (ID_OCORTIPO)REFERENCES TIPO_OCORRENCIA(ID_OCORTIPO);
//

ALTER TABLE REGISTRO_OCORRENCIA ADD CONSTRAINT FK_OCORREGI_USUASISTCRIA FOREIGN KEY (ID_USUASIST_OCORREGI)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD CONSTRAINT FK_ENTRCARGEXPE_USUASIST FOREIGN KEY (ID_USUASIST_FECHAMENTO)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD CONSTRAINT FK_ENTRCARGEXPE_USUASISTABER FOREIGN KEY (ID_USUASIST_ABERTURA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD CONSTRAINT FK_ENTRCARGEXPE_USUASISTAUTODI FOREIGN KEY (ID_USUASIST_AUTODIFE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_CUSTCONSMATEINTE', 'INTERFACE_MATERIAL_CONSUMO'
//

ALTER TABLE INTERFACE_MATERIAL_CONSUMO ALTER COLUMN VL_CUSTCONSMATEINTE DECIMAL(15, 3);
//

ALTER TABLE CHECKLIST_CONF_SINC_ITEM ADD CONSTRAINT FK_SINCCONFCHECIT_SINCCONFCHEC FOREIGN KEY (ID_SINCCONFCHEC)REFERENCES CHECKLIST_CONF_SINCRONISMO(ID_SINCCONFCHEC);
//

ALTER TABLE SISTEMA_ATUALIZACAO_CAMPO ADD CONSTRAINT FK_SISTLOOKTEMPEXTE_SISTLOOK FOREIGN KEY (ID_SISTLOOKTEMPEXTE)REFERENCES SISTEMA_LOOKUP(ID_SISTLOOK);
//

ALTER TABLE SISTEMA_ATUALIZACAO_CAMPO ADD CONSTRAINT FK_SISTLOOKTEMPGALP_SISTLOOK FOREIGN KEY (ID_SISTLOOKTEMPGALP)REFERENCES SISTEMA_LOOKUP(ID_SISTLOOK);
//

ALTER TABLE SISTEMA_ATUALIZACAO_CAMPO ADD CONSTRAINT FK_SISTLOOKUMIDEXTE_SISTLOOK FOREIGN KEY (ID_SISTLOOKUMIDEXTE)REFERENCES SISTEMA_LOOKUP(ID_SISTLOOK);
//

ALTER TABLE SISTEMA_ATUALIZACAO_CAMPO ADD CONSTRAINT FK_SISTLOOKUMIDGALP_SISTLOOK FOREIGN KEY (ID_SISTLOOKUMIDGALP)REFERENCES SISTEMA_LOOKUP(ID_SISTLOOK);
//

ALTER TABLE PRODUCAO_GRUPO_EXCECAO ADD CONSTRAINT FK_EXCEGRUPPROD_DEFIMATEEMBA FOREIGN KEY (ID_DEFIMATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE PRODUCAO_GRUPO_EXCECAO ADD CONSTRAINT FK_EXCEGRUPPROD_GRUPPROD FOREIGN KEY (ID_GRUPPROD)REFERENCES PRODUCAO_GRUPO(ID_GRUPPROD);
//

ALTER TABLE PRODUCAO_GRUPO_EXCECAO ADD CONSTRAINT FK_EXCEGRUPPROD_PROCLINH FOREIGN KEY (ID_PROCLINH)REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH);
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA_REJEIT ADD CONSTRAINT FK_REJEREGIPESASAID FOREIGN KEY (ID_REGIPESASAID)REFERENCES PESAGEM_REGISTRO_SAIDA(ID_REGIPESASAID);
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA_REJEIT ADD CONSTRAINT FK_REJEREGIPESASAID_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'QN_MATEFECHESTO', 'ESTOQUE_FECHAMENTO_MATE'
//

ALTER TABLE ESTOQUE_FECHAMENTO_MATE ALTER COLUMN QN_MATEFECHESTO DECIMAL(15, 6);
//

ALTER TABLE PRODUCAO_REGISTRO_DESTINACAO ADD CONSTRAINT FK_DEVODIRE_DESTREGIPROD FOREIGN KEY (ID_DEVOVENDDIRE)REFERENCES PV_VENDA_DEVOLUCAO_DIRETA(ID_DEVOVENDDIRE);
//

ALTER TABLE PRODUCAO_REGISTRO_DESTINACAO ADD CONSTRAINT FK_DEVOVEND_DESTREGIPROD FOREIGN KEY (ID_PEDIDEVOVEND)REFERENCES PEDIDO_DEVOLUCAO_VENDA(ID_PEDIDEVOVEND);
//

CREATE INDEX IDX_USUASISTABER_DESTREGIPROD ON PRODUCAO_REGISTRO_DESTINACAO (ID_USUASIST_ABER);
//

CREATE INDEX IDX_USUASISTFECH_DESTREGIPROD ON PRODUCAO_REGISTRO_DESTINACAO(ID_USUASIST_FECH);
//

EXEC SP_ExcluiEstatisticas 'QN_COPIETIQPALEFILISIST', 'SISTEMA_FILIAL'
//

ALTER TABLE SISTEMA_FILIAL ALTER COLUMN QN_COPIETIQPALEFILISIST NUMERIC(3, 0);
//

ALTER TABLE GRANJA_TECNICO ADD CONSTRAINT FK_TECNGRANUSUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD CONSTRAINT FK_FECHMOTO_REGIPESASAID FOREIGN KEY (ID_FECHTRANMOTOTRAN)REFERENCES TRANSPORTADOR_MOTORISTA_TRANSP(ID_TRANMOTOTRAN);
//

CREATE INDEX IDX_REGIPESASAID_CARGEXPE ON PESAGEM_REGISTRO_SAIDA (ID_CARGEXPE);
//

CREATE INDEX IDX_REGIPESASAID_USUASISTINIC ON PESAGEM_REGISTRO_SAIDA (ID_USUASIST_TARAINIC);
//

CREATE INDEX IDX_REGIPESASAID_USUASISTTERC ON PESAGEM_REGISTRO_SAIDA (ID_USUASIST_TERCPESA);
//

ALTER TABLE PESAGEM_REGISTRO_SAIDA ADD CONSTRAINT FK_PESASAIDVEICTRAN FOREIGN KEY (ID_VEICTRAN)REFERENCES TRANSPORTADOR_VEICULO(ID_VEICTRAN);
//

ALTER TABLE PUSHREPORT_AGENDAMENTOS ADD CONSTRAINT FK_USUAAGENREPOPUSH FOREIGN KEY (ID_USUAAGENREPOPUSH)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PUSHREPORT_AGENDAMENTOS ADD CONSTRAINT FK_USUAALTEAGENREPOPUSH FOREIGN KEY (ID_USUAALTEAGENREPOPUSH)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_INVENTARIO_USUARIO ADD CONSTRAINT FK_USUAINVEPROD_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_GASTMENSCENTCUST', 'CUSTO_CENTRO_GASTO_MENSAL'
//

ALTER TABLE CUSTO_CENTRO_GASTO_MENSAL ALTER COLUMN VL_GASTMENSCENTCUST NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_CORTE_CONTABIL ADD CONSTRAINT FK_ESTRUNIDABAT_CONTCORTPROD FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

EXEC SP_ExcluiEstatisticas 'NR_SEQUBATCPROD', 'PRODUCAO_BATCH'
//

ALTER TABLE PRODUCAO_BATCH ALTER COLUMN NR_SEQUBATCPROD NUMERIC(4, 0);
//

ALTER TABLE AVE_TIPO_GRUPO_ITEM ADD CONSTRAINT FK_ITEMGRUPTIPOAVE_GRUPTIPOAVE FOREIGN KEY (ID_GRUPTIPOAVE)REFERENCES AVE_TIPO_GRUPO(ID_GRUPTIPOAVE);
//

ALTER TABLE CHECKLIST_AGENDAMENTO_LOG ADD CONSTRAINT FK_LOGAGENCHEC_FORMQUALMETAAGE FOREIGN KEY (ID_FORMQUALMETAAGEN)REFERENCES FORM_QUAL_META_AGENDAMENTO(ID_FORMQUALMETAAGEN);
//

ALTER TABLE CRIACAO_LOTE_APANHA_VEIC_JUST ADD CONSTRAINT FK_USUASISTREGI_JUSTVEICAPAN FOREIGN KEY (ID_USUASIST_REGI)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_ITEMTABEPREC', 'TABELA_PRECO_ITEM'
//

ALTER TABLE TABELA_PRECO_ITEM ALTER COLUMN VL_ITEMTABEPREC NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_PRECMINITABEPREC', 'TABELA_PRECO_ITEM'
//

ALTER TABLE TABELA_PRECO_ITEM ALTER COLUMN VL_PRECMINITABEPREC NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_PRECMAXITABEPREC', 'TABELA_PRECO_ITEM'
//

ALTER TABLE TABELA_PRECO_ITEM ALTER COLUMN VL_PRECMAXITABEPREC NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_CUSTTOTA', 'INTE_CUSTO_MENSAL_PRODUTO_SAP'
//

ALTER TABLE INTE_CUSTO_MENSAL_PRODUTO_SAP ALTER COLUMN VL_CUSTTOTA NUMERIC(16, 6);
//

ALTER TABLE RECIPIENTE_MONTAGEM ADD CONSTRAINT FK_RECIMONT_PRODUTO FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE RECIPIENTE_MONTAGEM ADD CONSTRAINT FK_RECIMONT_RECIPIENTE FOREIGN KEY (ID_RECIPIENTE)REFERENCES RECIPIENTE(ID_RECIPIENTE);
//

ALTER TABLE PROGRAMACAO_ALTERACAO_TURNO ADD CONSTRAINT FK_UNIDABAT FOREIGN KEY (ID_UNIDABAT)REFERENCES ABATE_UNIDADE(ID_UNIDABAT);
//

ALTER TABLE ANALISE_CREDITO_SOLI_ITEM ADD CONSTRAINT FK_ANALCREDSOLIITEM_USUAAUTO FOREIGN KEY (ID_USUASIST_AUTORIZANTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ANALISE_CREDITO_SOLI_ITEM ADD CONSTRAINT FK_ANALCREDSOLIITEM_USUASOLI FOREIGN KEY (ID_USUASIST_SOLICITANTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_UNIDADE ADD CONSTRAINT FK_UNIDREGIPROD_DESTREGIPROD FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EQUIPAMENTO_DROP_HIST ADD CONSTRAINT FK_USUASISTHISTDROPEQUI FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_HISTCARGSALA', 'CARGO_SALARIO_HIST'
//

ALTER TABLE CARGO_SALARIO_HIST ALTER COLUMN VL_HISTCARGSALA NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_HISTBASECARGSALA', 'CARGO_SALARIO_HIST'
//

ALTER TABLE CARGO_SALARIO_HIST ALTER COLUMN VL_HISTBASECARGSALA NUMERIC(16, 3);
//

DROP STATISTICS CUSTO_DIARIO_PRODUTO_COMP.FILIAL;
//

ALTER TABLE CUSTO_DIARIO_PRODUTO_COMP ALTER COLUMN FILIAL NUMERIC(5, 0);
//

ALTER TABLE CUSTO_DIARIO_PRODUTO_COMP ADD CONSTRAINT FK_ID_PRODDIARCUST FOREIGN KEY (ID_PRODDIARCUST)REFERENCES CUSTO_DIARIO_PRODUTO(ID_PRODDIARCUST);
//

EXEC SP_ExcluiEstatisticas 'VL_MATECOMPPRODDIARCUST', 'CUSTO_DIARIO_PRODUTO_COMP'
//

ALTER TABLE CUSTO_DIARIO_PRODUTO_COMP ALTER COLUMN VL_MATECOMPPRODDIARCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITCOMPPRODDIARCUST', 'CUSTO_DIARIO_PRODUTO_COMP'
//

ALTER TABLE CUSTO_DIARIO_PRODUTO_COMP ALTER COLUMN VL_UNITCOMPPRODDIARCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITPRESCOMPPRODDIARCUST', 'CUSTO_DIARIO_PRODUTO_COMP'
//

ALTER TABLE CUSTO_DIARIO_PRODUTO_COMP ALTER COLUMN VL_UNITPRESCOMPPRODDIARCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MATEPRESCOMPPRODDIARCUST', 'CUSTO_DIARIO_PRODUTO_COMP'
//

ALTER TABLE CUSTO_DIARIO_PRODUTO_COMP ALTER COLUMN VL_MATEPRESCOMPPRODDIARCUST NUMERIC(16, 6);
//

CREATE INDEX IDX_DIARCUSTFECHPROD_USUAFECH ON PRODUCAO_FECHAMENTO_CUSTO_DIAR (ID_USUASIST_FECHCUSTFECHPROD);
//

ALTER TABLE MATERIAL_FILIAL ADD CONSTRAINT FK_ALMO_FILIMATE FOREIGN KEY (ID_ALMOXARIFADO)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

EXEC SP_ExcluiEstatisticas 'ID_MODEETIQCOMPMATEEMBAFILI', 'MATERIAL_EMBALAGEM_FILIAL'
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ALTER COLUMN ID_MODEETIQCOMPMATEEMBAFILI NUMERIC(4, 0);
//

EXEC SP_ExcluiEstatisticas 'QN_LOTEPERMIPALE', 'MATERIAL_EMBALAGEM_FILIAL'
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ALTER COLUMN QN_LOTEPERMIPALE INTEGER;
//

ALTER TABLE PRODUCAO_REGISTRO_TOTAL_DETA ADD CONSTRAINT FK_PRTD_ESTRUNIDABAT FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

ALTER TABLE PRODUCAO_REGISTRO_TOTAL_DETA ADD CONSTRAINT FK_PRTD_MATEEMBA FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE PRODUCAO_REGISTRO_TOTAL_DETA ADD CONSTRAINT FK_TOTAPRODDETA_FECHPROD FOREIGN KEY (ID_FECHPROD)REFERENCES PRODUCAO_FECHAMENTO(ID_FECHPROD);
//

ALTER TABLE MATERIAL_SEQUESTRO ADD CONSTRAINT FK_ALMO_SEQUMATE FOREIGN KEY (ID_ALMOXARIFADO)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE MATERIAL_SEQUESTRO ADD CONSTRAINT FK_FORN_SEQUMATE FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE MATERIAL_SEQUESTRO ADD CONSTRAINT FK_MATE_SEQUMATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

CREATE INDEX IDX_MOTI_MOTISEQUMATE ON MATERIAL_SEQUESTRO (ID_MOTISEQU);
//

ALTER TABLE MATERIAL_SEQUESTRO ADD CONSTRAINT FK_USUAENCE_SEQUMATE FOREIGN KEY (ID_USUASIST_ENCESEQUMATE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_SEQUESTRO ADD CONSTRAINT FK_USUAINIC_SEQUMATE FOREIGN KEY (ID_USUASIST_INICSEQUMATE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE FORM_QUAL_META_AGENDAMENTO ADD CONSTRAINT FK_FORMQUALMETAAGEN_USUASIST FOREIGN KEY (ID_USUAFORMQUALMETAAGEN)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE INTERFACE_AGENDAMENTO_PRODUTO ADD CONSTRAINT FK_PRODAGENINTE_INTEAGEN FOREIGN KEY (ID_AGENINTE)REFERENCES INTERFACE_AGENDAMENTO(ID_AGENINTE);
//

CREATE INDEX IDX_MATEEMBATURN_MATEEMBAFILI ON MATERIAL_EMBALAGEM_TURNO (ID_MATEEMBAFILI);
//

ALTER TABLE MATE_EMBA_PESQ_TOUCH_USUASIST ADD CONSTRAINT FK_PESQMATEEMBATOUC_MATEEMBA FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE MATE_EMBA_PESQ_TOUCH_USUASIST ADD CONSTRAINT FK_PESQMATEEMBATOUC_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE SFA_SINCRONISMO ADD CONSTRAINT FK_SINCSFA_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_ITEMTABECUST', 'TABELA_CUSTO_ITEM'
//

ALTER TABLE TABELA_CUSTO_ITEM ALTER COLUMN VL_ITEMTABECUST NUMERIC(21, 8);
//

EXEC SP_ExcluiEstatisticas 'VL_COMPPRODDIARCUST', 'CUSTO_DIARIO_PRODUTO'
//

ALTER TABLE CUSTO_DIARIO_PRODUTO ALTER COLUMN VL_COMPPRODDIARCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_PRESCOMPPRODDIARCUST', 'CUSTO_DIARIO_PRODUTO'
//

ALTER TABLE CUSTO_DIARIO_PRODUTO ALTER COLUMN VL_PRESCOMPPRODDIARCUST NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG_ITEM ADD CONSTRAINT FK_ALMODEST_ITEMREPE FOREIGN KEY (ID_ALMODESTITEMREPEREGIPROD)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG_ITEM ADD CONSTRAINT FK_ALMOORIG_ITEMREPE FOREIGN KEY (ID_ALMOORIGITEMREPEREGIPROD)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG_ITEM ADD CONSTRAINT FK_ITEMREPEREGIPROD FOREIGN KEY (ID_REPEREGIPROD)REFERENCES PRODUCAO_REGISTRO_REPESAG(ID_REPEREGIPROD);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG_ITEM ADD CONSTRAINT FK_ITEMREPEREGIPROD_REGIPROD FOREIGN KEY (ID_REGIPROD)REFERENCES PRODUCAO_REGISTRO(ID_REGIPROD);
//

EXEC SP_ExcluiEstatisticas 'VL_RECEMENS', 'INTE_RECEITA_MENSAL_SAP'
//

ALTER TABLE INTE_RECEITA_MENSAL_SAP ALTER COLUMN VL_RECEMENS NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_ADICCUSTINTE', 'INTERFACE_CUSTO_ADICIONAL'
//

ALTER TABLE INTERFACE_CUSTO_ADICIONAL ALTER COLUMN VL_ADICCUSTINTE NUMERIC(10, 4);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAMPPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTAMPPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTADOUPPPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTADOUPPPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTADOPRODPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTADOPRODPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTACTPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTACTPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAMATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTAMATEPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UNITRECUPRODMENSCUST', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_UNITRECUPRODMENSCUST NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTARECUPRODMENSCUST', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTARECUPRODMENSCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_GEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_GEPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MOPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_MOPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TRANMESANTEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TRANMESANTEPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_COPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_COPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UPPPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_UPPPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTADESCREALPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTADESCREALPRODCUSTMENS NUMERIC(16, 9);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAMPMATEREALPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTAMPMATEREALPRODCUSTMENS NUMERIC(16, 9);
//

EXEC SP_ExcluiEstatisticas 'VL_ENPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_ENPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MAPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_MAPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_DESPMESANTEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_DESPMESANTEPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_AJUNITPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_AJUNITPRODCUSTMENS NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAMATEREALPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTAMATEREALPRODCUSTMENS NUMERIC(16, 9);
//

EXEC SP_ExcluiEstatisticas 'VL_UTPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_UTPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAMENSCTPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTAMENSCTPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAMPREALPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_TOTAMPREALPRODCUSTMENS NUMERIC(16, 9);
//

EXEC SP_ExcluiEstatisticas 'VL_AJTOTAPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO ALTER COLUMN VL_AJTOTAPRODCUSTMENS NUMERIC(20, 10);
//

ALTER TABLE PRODUCAO_TUNEL_CONTROLE ADD CONSTRAINT FK_CONTTUNEPROD_TUNEPROD FOREIGN KEY (ID_TUNEPROD)REFERENCES PRODUCAO_TUNEL(ID_TUNEPROD);
//

EXEC SP_ExcluiEstatisticas 'VL_FAJUSINDIBASEFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN VL_FAJUSINDIBASEFILIPARASIST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_AJUSINDIBASEFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN VL_AJUSINDIBASEFILIPARASIST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_INDIBASEFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN VL_INDIBASEFILIPARASIST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ATUAUPPFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN VL_ATUAUPPFILIPARASIST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_MANUMENSFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN VL_MANUMENSFILIPARASIST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_SALAMINIFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN VL_SALAMINIFILIPARASIST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_KMHFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN VL_KMHFILIPARASIST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'QN_CICLPESQENTRAVEFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN QN_CICLPESQENTRAVEFILIPARASIST NUMERIC(5, 0);
//

EXEC SP_ExcluiEstatisticas 'FL_MULTINSTMIDDFILIPARASIST', 'SISTEMA_PARAMETRO_FILIAL'
//

ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN FL_MULTINSTMIDDFILIPARASIST CHAR(1);
//

ALTER TABLE CTAPLUS ADD CONSTRAINT FK_CTAPLUS_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE WEBSERVICE_USERSESSION ADD CONSTRAINT FK_WEBSERVUSERSESS_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_VALOMATE', 'MATERIAL_PRECO'
//

ALTER TABLE MATERIAL_PRECO ALTER COLUMN VL_VALOMATE NUMERIC(16, 6);
//

CREATE INDEX IDX_INVEPRODUSUASISTABER ON PRODUCAO_INVENTARIO (ID_USUASIST_ABERTURA);
//

ALTER TABLE PRODUCAO_INVENTARIO ADD CONSTRAINT FK_INVEPRODUSUASISTMONT FOREIGN KEY (ID_USUASIST_MONTAGEM)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_INVEPRODUSUASISTFECH ON PRODUCAO_INVENTARIO (ID_USUASIST_FECHAMENTO);
//

ALTER TABLE MATERIAL_ENTRADA_INTERFA_ITEM ADD CONSTRAINT FK_MATEENTRINTEITEM_ALMO FOREIGN KEY (ID_ALMOXARIFADO)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE MATERIAL_ENTRADA_INTERFA_ITEM ADD CONSTRAINT FK_MATEENTRINTEITEM_ENTR FOREIGN KEY (ID_ENTRMATE)REFERENCES MATERIAL_ENTRADA(ID_ENTRMATE);
//

ALTER TABLE MATERIAL_ENTRADA_INTERFA_ITEM ADD CONSTRAINT FK_MATEENTRINTEITEM_MATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE MATERIAL_ENTRADA_INTERFA_ITEM ADD CONSTRAINT FK_MATEENTRINTEITEM_MATEALMO FOREIGN KEY (ID_MATEALMO)REFERENCES MATERIAL_ALMOXARIFADO(ID_MATEALMO);
//

ALTER TABLE TMP_REL210_PROD_DEST ADD CONSTRAINT FK_REL210PRODDEST1_ID_PROCLIH FOREIGN KEY (ID_PROCLINH)REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH);
//

ALTER TABLE TMP_REL210_PROD_DEST ADD CONSTRAINT FK_REL210PRODDEST1_ID_TIPOAVE FOREIGN KEY (ID_TIPOAVE)REFERENCES AVE_TIPO(ID_TIPOAVE);
//

ALTER TABLE MATERIAL_EMBALAGEM_EAN14_ADIC ADD CONSTRAINT FK_MATEEMBA_ADICEA14MATEEMBA FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE EQUIPAMENTO_TURNO ADD CONSTRAINT FK_TURNEQUI_EQUI FOREIGN KEY (ID_EQUI)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

CREATE INDEX IDX_PROCCONSMATE_USUASIST ON MATERIAL_CONSUMO_PROCESSAMENTO (ID_USUASIST_PROC);
//

ALTER TABLE MATERIAL_EMBALAGEM_MATE_PRIM ADD CONSTRAINT FK_MATEEMBAMATEPRIM_UNIDMEDI FOREIGN KEY (ID_UNIDMEDI_ERP)REFERENCES UNIDADE_MEDIDA(ID_UNIDMEDI);
//

ALTER TABLE PEDIDO_VENDA_EXCLUSAO ADD CONSTRAINT FK_PDVDEXCL_USUASIST_AUTOCRED FOREIGN KEY (ID_USUASIST_AUTOCRED)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_CSTENTRAVEVIVAENTRCOMPCUST', 'CUSTO_COMPONENTE_ENTRADA'
//

ALTER TABLE CUSTO_COMPONENTE_ENTRADA ALTER COLUMN VL_CSTENTRAVEVIVAENTRCOMPCUST NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_CSTCOMEAVEENTRCOMPCUST', 'CUSTO_COMPONENTE_ENTRADA'
//

ALTER TABLE CUSTO_COMPONENTE_ENTRADA ALTER COLUMN VL_CSTCOMEAVEENTRCOMPCUST NUMERIC(20, 10);
//

ALTER TABLE CLIENTE_CONTATO_OCORRENCIA ADD CONSTRAINT FK_OCORCONTCLIE_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_NOVOLOGITEMCUSTTABE', 'TABELA_CUSTO_ITEM_LOG'
//

ALTER TABLE TABELA_CUSTO_ITEM_LOG ALTER COLUMN VL_NOVOLOGITEMCUSTTABE NUMERIC(21, 8);
//

EXEC SP_ExcluiEstatisticas 'VL_VELHLOGITEMCUSTTABE', 'TABELA_CUSTO_ITEM_LOG'
//

ALTER TABLE TABELA_CUSTO_ITEM_LOG ALTER COLUMN VL_VELHLOGITEMCUSTTABE NUMERIC(21, 8);
//

EXEC SP_ExcluiEstatisticas 'VL_CABELOGITEMCUSTTABE', 'TABELA_CUSTO_ITEM_LOG'
//

ALTER TABLE TABELA_CUSTO_ITEM_LOG ALTER COLUMN VL_CABELOGITEMCUSTTABE NUMERIC(21, 8);
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD CONSTRAINT FK_EQUIPROD_MATERIAL FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD CONSTRAINT FK_PROD_NOMI_UNID_MEDI FOREIGN KEY (ID_UNIDMEDI)REFERENCES UNIDADE_MEDIDA(ID_UNIDMEDI);
//

ALTER TABLE EQUIPAMENTO_PRODUTO ADD CONSTRAINT FK_PROD_VOLU_UNID_MEDI FOREIGN KEY (ID_PRODVOLUUNIDMEDI)REFERENCES UNIDADE_MEDIDA(ID_UNIDMEDI);
//

CREATE INDEX CUSTFECHPROD_USUAALTE ON PRODUCAO_FECHAMENTO_CUSTO (ID_USUASIST_ULTIALTEFECHPROD);
//

CREATE INDEX IDX_CUSTFECHPROD_USUAFECH ON PRODUCAO_FECHAMENTO_CUSTO(ID_USUASIST_FECHCUSTFECHPROD);
//

EXEC SP_ExcluiEstatisticas 'VL_MEDIAVEVIVACUSTFECHPROD', 'PRODUCAO_FECHAMENTO_CUSTO'
//

ALTER TABLE PRODUCAO_FECHAMENTO_CUSTO ALTER COLUMN VL_MEDIAVEVIVACUSTFECHPROD NUMERIC(20, 10);
//

ALTER TABLE ESTOQUE_VISUAL_ITEM_CICLO ADD CONSTRAINT FK_CICLITEMVISUES_USUASISTCONF FOREIGN KEY (ID_USUASIST_CONF)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE ABATE_UNIDADE_ESTRUTURA_META ADD CONSTRAINT FK_ESTRUNIDABAT_META FOREIGN KEY (ID_ESTRUNIDABAT)REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT);
//

CREATE INDEX IDX_EXPECARGHORA_SISTUSUA ON EXPEDICAO_CARGA_HORARIO (ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_REALMATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_MATE_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_MATE_REAL ALTER COLUMN VL_REALMATEPRODCUSTMENS NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_AJUNITREALMATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_MATE_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_MATE_REAL ALTER COLUMN VL_AJUNITREALMATEPRODCUSTMENS NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_AJTOTAREALMATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_MATE_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_MATE_REAL ALTER COLUMN VL_AJTOTAREALMATEPRODCUSTMENS NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_MENSREALMATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_MATE_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_MATE_REAL ALTER COLUMN VL_MENSREALMATEPRODCUSTMENS NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'VL_ANTEREALMATEPRODCUSTMENS', 'CUSTO_MENSAL_PRODUTO_MATE_REAL'
//

ALTER TABLE CUSTO_MENSAL_PRODUTO_MATE_REAL ALTER COLUMN VL_ANTEREALMATEPRODCUSTMENS NUMERIC(20, 10);
//

EXEC SP_ExcluiEstatisticas 'QN_VENDRECEMENS', 'INTERFACE_RECEMENS'
//

ALTER TABLE INTERFACE_RECEMENS ALTER COLUMN QN_VENDRECEMENS NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_RECEMENS', 'INTERFACE_RECEMENS'
//

ALTER TABLE INTERFACE_RECEMENS ALTER COLUMN VL_RECEMENS NUMERIC(16, 3);
//

EXEC SP_ExcluiEstatisticas 'VL_PECAMANUEQUIFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_PECAMANUEQUIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_VALOMEDIMANUEQUIFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_VALOMEDIMANUEQUIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_NOVOEQUIFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_NOVOEQUIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_RESIEQUIFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_RESIEQUIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAAMORTECNFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_TOTAAMORTECNFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_CONSHORAUTILEQUIFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_CONSHORAUTILEQUIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_UTILEQUIFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_UTILEQUIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_TOTAMANUEQUIFOTOINDI', 'FOTO_INDICE_EQUIP'
//

ALTER TABLE FOTO_INDICE_EQUIP ALTER COLUMN VL_TOTAMANUEQUIFOTOINDI NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ITEMCOMPPRODCUST', 'CUST_PROD_COMP_ITEM'
//

ALTER TABLE CUST_PROD_COMP_ITEM ALTER COLUMN VL_ITEMCOMPPRODCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_DESTITEMCOMPPRODCUST', 'CUST_PROD_COMP_ITEM'
//

ALTER TABLE CUST_PROD_COMP_ITEM ALTER COLUMN VL_DESTITEMCOMPPRODCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_CORRITEMCOMPPRODCUST', 'CUST_PROD_COMP_ITEM'
//

ALTER TABLE CUST_PROD_COMP_ITEM ALTER COLUMN VL_CORRITEMCOMPPRODCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_SAIDITEMCOMPPRODCUST', 'CUST_PROD_COMP_ITEM'
//

ALTER TABLE CUST_PROD_COMP_ITEM ALTER COLUMN VL_SAIDITEMCOMPPRODCUST NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_REGISTRO_REPESAG_BASE ADD CONSTRAINT FK_BASE_REPEREGIPROD FOREIGN KEY (ID_REPEREGIPROD)REFERENCES PRODUCAO_REGISTRO_REPESAG(ID_REPEREGIPROD);
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL_ETIQ ADD CONSTRAINT FK_ETIQFILIMATEEMBA_USUAALTE FOREIGN KEY (ID_USUASIST_ALTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE FIFO_PICKING_AUTORIZACAO ADD CONSTRAINT FK_FIFOPICKAUTO_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE FIFO_PICKING_AUTORIZACAO ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

ALTER TABLE SISTEMA_USUARIO ADD CONSTRAINT FK_SISTUSUA_CLIENTE FOREIGN KEY (ID_CLIENTE)REFERENCES CLIENTE_GERAL(ID_CLIENTE);
//

ALTER TABLE SISTEMA_USUARIO ADD CONSTRAINT FK_USUASISTGRUPID FOREIGN KEY (ID_GRUPUSUASIST)REFERENCES SISTEMA_USUARIO_GRUPO(ID_GRUPUSUASIST);
//

ALTER TABLE CRIACAO_LOTE_APANHA ADD CONSTRAINT FK_USUASISTABER_APANLOTECRIA FOREIGN KEY (ID_USUASIST_ABER)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE CRIACAO_LOTE_APANHA ADD CONSTRAINT FK_USUASISTFECH_APANLOTECRIA FOREIGN KEY (ID_USUASIST_FECH)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EMBALAGEM_COLETA_ITEM ADD CONSTRAINT FK_USUASIST_ITEMCOLEEMBA FOREIGN KEY (ID_USUASIST_INCLUSAO)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE SFA_REGISTRO_ERRO ADD CONSTRAINT FK_USUASIST_ERROREGISFA FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_PROCESSO_META ADD CONSTRAINT FK_PROCPROD_METAPROCPROD FOREIGN KEY (ID_PROCPROD)REFERENCES PRODUCAO_PROCESSO(ID_PROCPROD);
//

ALTER TABLE ENTRADA_AVE_VIVA_DESDOBRAMENTO ADD CONSTRAINT FK_ENTRAVEDESD_ENTRAVEVIVA FOREIGN KEY (ID_ENTRAVEVIVA)REFERENCES ENTRADA_AVE_VIVA(ID_ENTRAVEVIVA);
//

ALTER TABLE ENTRADA_AVE_VIVA_DESDOBRAMENTO ADD CONSTRAINT FK_ENTRAVEDESD_LINHTIPOAVE FOREIGN KEY (ID_LINHTIPOAVE)REFERENCES AVE_TIPO_LINHAGEM(ID_LINHTIPOAVE);
//

ALTER TABLE PESAGEM_TICKET ADD CONSTRAINT FK_TICKPESA_USUASISTLIBEENTR FOREIGN KEY (ID_USUASISTLIBEENTR)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PESAGEM_TICKET ADD CONSTRAINT FK_TICKPESA_USUASISTLIBESAID FOREIGN KEY (ID_USUASISTLIBESAID)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE INDEX IDX_USUASIST_PRIMPESA ON PESAGEM_TICKET (ID_USUASIST_PRIMPESA);
//

CREATE INDEX IDX_USUASIST_SEGUPESA ON PESAGEM_TICKET (ID_USUASIST_SEGUPESA);
//

ALTER TABLE PESAGEM_TICKET ADD CONSTRAINT FK_PEDIVENDTICKPESA FOREIGN KEY (ID_PEDIVEND)REFERENCES PEDIDO_VENDA(ID_PEDIVEND);
//

EXEC SP_ExcluiEstatisticas 'VL_COMPANIMPRODCUST', 'CUSTO_PRODUTO_ANIMAL'
//

ALTER TABLE CUSTO_PRODUTO_ANIMAL ALTER COLUMN VL_COMPANIMPRODCUST NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_PRESCOMPANIMPRODCUST', 'CUSTO_PRODUTO_ANIMAL'
//

ALTER TABLE CUSTO_PRODUTO_ANIMAL ALTER COLUMN VL_PRESCOMPANIMPRODCUST NUMERIC(16, 6);
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD CONSTRAINT FK_USUAABER_TRANREGIPROD FOREIGN KEY (ID_USUASIST_ABERTURA)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD CONSTRAINT FK_USUAABERTRAN_USUASIST FOREIGN KEY (ID_TRANUSUAABERTRANREGIPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD CONSTRAINT FK_USUACRIATRAN_USUASIST FOREIGN KEY (ID_TRANUSUASISTTRANREGIPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD CONSTRAINT FK_USUAFECH_TRANREGIPROD FOREIGN KEY (ID_USUASIST_FECHAMENTO)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_REGISTRO_TRANSFER ADD CONSTRAINT FK_USUAFECHTRAN_USUASIST FOREIGN KEY (ID_TRANUSUAFECHTRANREGIPROD)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE PRODUCAO_UNIDADE_REJEITO ADD CONSTRAINT FK_EQUIPAMENTOPRODUNIDREJE FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE PRODUCAO_UNIDADE_REJEITO ADD CONSTRAINT FK_MATEEMBAPRODUNIDREJE FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

EXEC SP_ExcluiEstatisticas 'VL_VALOMATE', 'INTE_MATERIAL_CUSTO_SAP'
//

ALTER TABLE INTE_MATERIAL_CUSTO_SAP ALTER COLUMN VL_VALOMATE NUMERIC(16, 3);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_CENTCUST_REQUMATE FOREIGN KEY (ID_CENTCUST)REFERENCES CUSTO_CENTRO(ID_CENTCUST);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_CONTCONT_REQUMATE FOREIGN KEY (ID_CONTCONT)REFERENCES CONTA_CONTABIL(ID_CONTCONT);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_DESTALMO_REQUMATE FOREIGN KEY (ID_DESTALMOREQUMATE)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_TIPOMOVIMATE_REQUMAATE FOREIGN KEY (ID_TIPOMOVIMATE)REFERENCES MATERIAL_MOVIMENTACAO_TIPO(ID_TIPOMOVIMATE);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_USUAABERATEN_REQUMATE FOREIGN KEY (ID_USUASIST_ABERATEN)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_USUACRIA_REQUMATE FOREIGN KEY (ID_USUACRIAREQUMATE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_USUAFECHATEN_REQUMATE FOREIGN KEY (ID_USUASIST_FECHATEN)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_REQUISICAO ADD CONSTRAINT FK_USUAOBSEATEN_REQUMATE FOREIGN KEY (ID_USUASIST_OBSEATEN)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMODHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECMODHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMOIHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECMOIHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECESHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECESHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECATHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECATHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMCHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECMCHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECPMHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECPMHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECMANHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECMANHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECUTILHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECUTILHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECEEDHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECEEDHISTPOSTOPER NUMERIC(16, 6);
//

EXEC SP_ExcluiEstatisticas 'VL_ECEECHISTPOSTOPER', 'PO_HIST'
//

ALTER TABLE PO_HIST ALTER COLUMN VL_ECEECHISTPOSTOPER NUMERIC(16, 6);
//

ALTER TABLE EXPEDICAO_CARGA_LEIT_OBSE ADD CONSTRAINT FK_OBSELEITCARGEXPE_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE AVE_PARTE_PESQ_TOUCH_USUASIST ADD CONSTRAINT FK_PESQAVEPARTTOUC_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EQUIPAMENTO_TURNO_DIARIO_INT ADD CONSTRAINT FK_INTEDIARTURN_ITEMDIARTURN FOREIGN KEY (ID_ITEMDIARTURNEQUI)REFERENCES EQUIPAMENTO_TURNO_DIARIO_ITEM(ID_ITEMDIARTURNEQUI);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM ADD CONSTRAINT FK_DESTALMO_ITEMREQUMATE FOREIGN KEY (ID_DESTALMOITEMREQUMATE)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM ADD CONSTRAINT FK_MATE_ITEMREQUMATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM ADD CONSTRAINT FK_ORIGALMO_ITEMREQUMATE FOREIGN KEY (ID_ORIGALMOITEMREQUMATE)REFERENCES ALMOXARIFADO(ID_ALMOXARIFADO);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM ADD CONSTRAINT FK_PROGPROD_ITEMREQUMATE FOREIGN KEY (ID_PROGPROD)REFERENCES PRODUCAO_PROGRAMACAO(ID_PROGPROD);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM ADD CONSTRAINT FK_REQUMATE_ITEMREQUMATE FOREIGN KEY (ID_REQUMATE)REFERENCES MATERIAL_REQUISICAO(ID_REQUMATE);
//

ALTER TABLE MATERIAL_REQUISICAO_ITEM ADD CONSTRAINT FK_USUAOBSEATEN_ITEMREQUMATE FOREIGN KEY (ID_USUASIST_OBSEATEN)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_ENTRADA ADD CONSTRAINT FK_MATEENTR_MATEENTRCARG FOREIGN KEY (ID_CARGENTRMATE)REFERENCES MATERIAL_ENTRADA_CARGA(ID_CARGENTRMATE);
//

ALTER TABLE MATERIAL_ENTRADA ADD CONSTRAINT FK_MATEENTRFORN FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE DADOS_RETENCAO_HIST ADD CONSTRAINT FK_HISTRETEDADO_RETEDADO FOREIGN KEY (ID_RETEDADO)REFERENCES DADOS_RETENCAO(ID_RETEDADO);
//

ALTER TABLE DADOS_RETENCAO_HIST ADD CONSTRAINT FK_HISTRETEDADO_USUASCT FOREIGN KEY (ID_USUARIO)REFERENCES SCT_USUARIO(ID_USUARIO);
//

EXEC SP_ExcluiEstatisticas 'PC_ALIQPISITEMNOTAFISC', 'NOTA_FISCAL_ITEM'
//

ALTER TABLE NOTA_FISCAL_ITEM ALTER COLUMN PC_ALIQPISITEMNOTAFISC NUMERIC(7, 4);
//

EXEC SP_ExcluiEstatisticas 'PC_ALIQCOFIITEMNOTAFISC', 'NOTA_FISCAL_ITEM'
//

ALTER TABLE NOTA_FISCAL_ITEM ALTER COLUMN PC_ALIQCOFIITEMNOTAFISC NUMERIC(7, 4);
//

EXEC SP_ExcluiEstatisticas 'PC_PISZONAFRANITEMNOTAFISC', 'NOTA_FISCAL_ITEM'
//

ALTER TABLE NOTA_FISCAL_ITEM ALTER COLUMN PC_PISZONAFRANITEMNOTAFISC NUMERIC(7, 4);
//

EXEC SP_ExcluiEstatisticas 'PC_COFIZONAFRANITEMNOTAFISC', 'NOTA_FISCAL_ITEM'
//

ALTER TABLE NOTA_FISCAL_ITEM ALTER COLUMN PC_COFIZONAFRANITEMNOTAFISC NUMERIC(7, 4);
//

ALTER TABLE EXPEDICAO_ROMANEIO_PROGRAMACAO ALTER COLUMN ID_PRODMATEEMBA VARCHAR(6);
//

ALTER TABLE FORMULARIO_QUALIDADE_META_ITEM ADD CONSTRAINT FK_FORMQUALMETAIT_FORMQUALMETA FOREIGN KEY (ID_FORMQUALMETA)REFERENCES FORMULARIO_QUALIDADE_META(ID_FORMQUALMETA);
//

ALTER TABLE FORMULARIO_QUALIDADE_META_ITEM ADD CONSTRAINT FK_FORMQUALMETAIT_SISTLOOK FOREIGN KEY (ID_SISTLOOK)REFERENCES SISTEMA_LOOKUP(ID_SISTLOOK);
//

ALTER TABLE FIFO_PICKING_LOG ADD CONSTRAINT FK_FIFOPICKLOGSOLI_USUASIST FOREIGN KEY (ID_USUASIST_SOLICITANTE)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE EQUIPAMENTO_PRODUCAO_PRODUTO ADD CONSTRAINT FK_EQUI_PRODPRODEQUI FOREIGN KEY (ID_EQUIPAMENTO)REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO);
//

ALTER TABLE EQUIPAMENTO_PRODUCAO_PRODUTO ADD CONSTRAINT FK_MATEEMBA_PRODPRODEQUI FOREIGN KEY (ID_MATEEMBA)REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA);
//

ALTER TABLE EXPEDICAO_PALETE_AUDITORIA ADD CONSTRAINT FK_PALEEXPEAUDI_PALEEXPE FOREIGN KEY (ID_PALEEXPE)REFERENCES EXPEDICAO_PALETE(ID_PALEEXPE);
//

ALTER TABLE EXPEDICAO_PALETE_AUDITORIA ADD CONSTRAINT FK_PALEEXPEAUDI_USUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

ALTER TABLE MATERIAL_FORNECEDOR ADD CONSTRAINT FK_FORN_FORNMATE FOREIGN KEY (ID_FORNECEDOR)REFERENCES FORNECEDOR(ID_FORNECEDOR);
//

ALTER TABLE MATERIAL_FORNECEDOR ADD CONSTRAINT FK_MATE_FORNMATE FOREIGN KEY (ID_MATERIAL)REFERENCES MATERIAL(ID_MATERIAL);
//

ALTER TABLE CRIACAO_LOTE_GASTO_RECEITA ADD CONSTRAINT FK_LOTECRIAGASTRECECLAS FOREIGN KEY (ID_CLASGASTCRIA)REFERENCES CRIACAO_GASTO_CLASSIFICACAO(ID_CLASGASTCRIA);
//

ALTER TABLE CRIACAO_LOTE_GASTO_RECEITA ADD CONSTRAINT FK_LOTECRIAGASTRECEID FOREIGN KEY (ID_LOTECRIA)REFERENCES CRIACAO_LOTE(ID_LOTECRIA);
//

ALTER TABLE CRIACAO_LOTE_GASTO_RECEITA ADD CONSTRAINT FK_LOTECRIAGASTRECECRIA FOREIGN KEY (ID_CLASRECECRIA)REFERENCES CRIACAO_RECEITA_CLASSIFICACAO(ID_CLASRECECRIA);
//

ALTER TABLE CRIACAO_LOTE_GASTO_RECEITA ADD CONSTRAINT FK_LOTECRIAGASTUSUASIST FOREIGN KEY (ID_USUASIST)REFERENCES SISTEMA_USUARIO(ID_USUASIST);
//

CREATE TABLE TRP017_IDENTIFICACAO_TURNO
(
        ID_IDENREGIPROD      VARCHAR(20),
	NR_SEQUTURNREGIPROD     NUMERIC(5),
	FL_TURNMANUREGIPROD     CHAR(1),
	GN_SEQUTURNREGIPROD     VARCHAR(25),
	IE_PERITURNREGIPROD     VARCHAR(25),
	FL_PERIMANUTURNREGIPROD CHAR(1),
	ID_PEDIVEND             NUMERIC(10)
);
//

CREATE TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF(
	EMPRESA varchar(2) NULL,
	FILIAL int NULL,
	ID_CONFCOMP numeric(10,0) NOT NULL,
	ID_COMPAVE numeric(10,0) NULL,
	ID_TIPOAVE numeric(10,0) NULL,
	ID_ESTRUNIDABAT numeric(10,0) NULL,
	ID_PROCLINH numeric(10,0) NULL,
	NR_TURNCONFCOMP numeric(10,0) NULL,
	DT_PROCCONFCOMP datetime DEFAULT getdate() NULL,
	DT_REGIPADRCONFCOMP datetime NULL,
	NR_PERIODOCONFCOMP varchar(10) NULL,
	QN_PESOENTRCONFCOMP numeric(20,10) NULL,
	QN_PESODESCCONFCOMP numeric(20,10) NULL,
	QN_PESOMORTCONFCOMP numeric(20,10) NULL,
	QN_PESODESTCONFCOMP numeric(20,10) NULL,
	QN_PESODESTSIMUCONFCOMP numeric(20,10) NULL,
	QN_PESOPRODCONFCOMP numeric(20,10) NULL,
	QN_PESOPRODTEMPCONFCOMP  numeric(20,10) NULL,
	QN_PESOPRODSIMUCONFCOMP numeric(20,10) NULL,
	QN_PESOTOTAENTRCONFCOMP numeric(20,10) NULL,
	QN_PESOTOTASAIDCONFCOMP numeric(20,10) NULL,
	QN_PESOTOTASAIDTEMPCONFCOMP numeric(20,10) NULL,
	QN_PESOSALDOCONFCOMP numeric(20,10) NULL,
	QN_PESOSALDOTEMPCONFCOMP numeric(20,10) NULL,
	CONSTRAINT PK_DIARCONFCOMP PRIMARY KEY (ID_CONFCOMP),
	CONSTRAINT FK_ID_COMPAVEDIARCONF FOREIGN KEY (ID_COMPAVE) REFERENCES AVE_COMPONENTE(ID_COMPAVE),
	CONSTRAINT FK_ID_ESTRUNIDABATDIARCONF FOREIGN KEY (ID_ESTRUNIDABAT) REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT),
	CONSTRAINT FK_ID_PROCLINHDIARCONF FOREIGN KEY (ID_PROCLINH) REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH),
	CONSTRAINT FK_ID_TIPOAVEDIARCONF FOREIGN KEY (ID_TIPOAVE) REFERENCES AVE_TIPO(ID_TIPOAVE)
);
//

CREATE TABLE CUSTO_PRODUTOCOMP_DIARIO_CONF (
	EMPRESA char(2) NULL,
	FILIAL int NULL,
	ID_COMPAVE numeric(10,0) NULL,
	ID_TIPOAVE numeric(10,0) NULL,
	ID_ESTRUNIDABAT numeric(10,0) NULL,
	ID_PROCLINH numeric(10,0) NULL,
	ID_MATEEMBA numeric(10,0) NULL,
	NR_TURNCONFPRODCOMP numeric(10,0) NULL,
	DT_PROCCONFPRODCOMP datetime DEFAULT getdate() NULL,
	DT_REGIPADRCONFPRODCOMP datetime NULL,
	NR_PERIODOCONFPRODCOMP varchar(10) NULL,
	FL_TIPOCONFPRODCOMP char(2) NULL,
	PC_COMPCONFPRODCOMP numeric(20,10) NULL,
	PC_PORCTEMPCONFPRODCOMP numeric(20,3) NULL,
	QN_PESOCOMPCONFPRODCOMP numeric(20,10) NULL,
	QN_PESOCOMPTEMPCONFPRODCOMP numeric(20,10) NULL,
	QN_PESOPRODCONFPRODCOMP numeric(20,10) NULL,
	CONSTRAINT FK_ID_COMPAVECONFPRODCOMP FOREIGN KEY (ID_COMPAVE) REFERENCES AVE_COMPONENTE(ID_COMPAVE),
	CONSTRAINT FK_ID_ESTRUNIDABATCONFPRODCOMP FOREIGN KEY (ID_ESTRUNIDABAT) REFERENCES ABATE_UNIDADE_ESTRUTURA(ID_ESTRUNIDABAT),
	CONSTRAINT FK_ID_PROCLINHCONFPRODCOMP FOREIGN KEY (ID_PROCLINH) REFERENCES LINHA_PROCESSAMENTO(ID_PROCLINH),
	CONSTRAINT FK_ID_TIPOAVECONFPRODCOMP FOREIGN KEY (ID_TIPOAVE) REFERENCES AVE_TIPO(ID_TIPOAVE)
);
//

CREATE TABLE PRODUCAO_TURNO_PERIODO(
ID_PERITURNPROD NUMERIC(10) NOT NULL,
ID_TURNPROD NUMERIC(10) NOT NULL,
IE_PERITURNPROD VARCHAR(25) NOT NULL,
GN_HORAINICPERITURNPROD CHAR(8) NOT NULL,
GN_HORAFINAPERITURNPROD CHAR(8) NOT NULL,
FX_PERITURNPROD CHAR(1) NOT NULL)
//

ALTER TABLE PRODUCAO_TURNO_PERIODO ADD CONSTRAINT PK_PERITURNPROD PRIMARY KEY(ID_PERITURNPROD)
//

ALTER TABLE PRODUCAO_TURNO_PERIODO ADD CONSTRAINT FK_PERITURNPROD_TURNPROD FOREIGN KEY(ID_TURNPROD) REFERENCES PRODUCAO_TURNO(ID_TURNPROD)
//

CREATE TABLE PRODUCAO_TURNO_DIARIO_PER(
ID_PERIDIARTURNPROD NUMERIC(10) NOT NULL,
ID_ITEMDIARTURNPROD NUMERIC(10) NOT NULL,
IE_PERIDIARTURNPROD VARCHAR(25) NOT NULL,
DT_HORAINICPERIDIARTURNPROD DATETIME NOT NULL,
DT_HORAFINAPERIDIARTURNPROD DATETIME NOT NULL,
FX_PERIDIARTURNPROD CHAR(1) NOT NULL)
//

ALTER TABLE PRODUCAO_TURNO_DIARIO_PER ADD CONSTRAINT PERIDIARTURNPROD PRIMARY KEY(ID_PERIDIARTURNPROD)
//

ALTER TABLE PRODUCAO_TURNO_DIARIO_PER ADD CONSTRAINT FK_PERITURNPROD_ITEMTURN FOREIGN KEY(ID_ITEMDIARTURNPROD) REFERENCES PRODUCAO_TURNO_DIARIO_ITEM(ID_ITEMDIARTURNPROD)
//

ALTER TABLE PRODUCAO_REGISTRO_TURNO ADD IE_PERITURNREGIPROD VARCHAR(25)
//

ALTER TABLE PRODUCAO_REGISTRO_TURNO ADD FL_PERIMANUTURNREGIPROD CHAR(1)
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD FL_LOTEEMBUPAAUMATEEMBAFILI CHAR(1) DEFAULT 'N' NOT NULL
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD FL_PRODCONTMATEEMBAFILI CHAR(1)
//

ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD FL_PRODCONTEMBAINDI CHAR(1)
//

ALTER TABLE PRODUCAO_REGISTRO ADD GN_LOTEEMBUREGIPROD VARCHAR(25)
//

CREATE TABLE SEQ_ID_MIDDMOVI (ID_MIDDMOVI NUMERIC NOT NULL IDENTITY(1,1))
//

ALTER TABLE EXPEDICAO_CARGA ADD FL_TIPOPICKCARRCARGEXPE CHAR(2) DEFAULT 'PP' NOT NULL
//

CREATE INDEX IDX_IE_PALEEXPE_PALEEXPE ON EXPEDICAO_PALETE (IE_PALEEXPE)       
//

UPDATE EXPEDICAO_PALETE_MOVIMENTACAO SET FL_TIPOOPERMOVIPALEEXPE = 'CI' WHERE FL_TIPOOPERMOVIPALEEXPE IS NULL
//

ALTER TABLE PRODUCAO_INVENTARIO ADD FL_LIBEINVEPROD CHAR(1) DEFAULT 'N' NOT NULL
//

ALTER TABLE PRODUCAO_INVENTARIO_ITEM ADD FL_SINCMIDDITEMINVEPROD CHAR(2) DEFAULT 'NS' NOT NULL
//

ALTER TABLE PRODUCAO_DESCARTE_MOTIVO ADD IE_DOISMOTIDESCPROD VARCHAR(25) NULL
//

ALTER TABLE PRODUCAO_BALANCA ADD IE_BALANCA VARCHAR(25) NULL
//

ALTER TABLE PRODUCAO_REGISTRO ADD FL_SINCMIDDREGIPROD CHAR(2) NULL
//

CREATE NONCLUSTERED INDEX IDX_REGIPROD_MIDDLEWARE ON PRODUCAO_REGISTRO 
( FILIAL,
  DT_REGIPROD,
  FL_SINCMIDDREGIPROD )
//

ALTER TABLE PRODUCAO_REGISTRO ADD FL_PROCORIGREGIPROD CHAR(2) NULL
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD FL_CURVABCMATEEMBAFILI CHAR(1) NULL
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD FL_TIPOEMBAMATEEMBAFILI CHAR(2) DEFAULT 'UD' NOT NULL
//

BEGIN TRAN T1
IF EXISTS
(
    SELECT *
    FROM sys.objects
    WHERE object_id = OBJECT_ID(N'dbo.ETIQUETA_TAGS_CUSTOM')
)
    BEGIN
        PRINT 'Tabela já existe - Continua Script';
END
ELSE 
	CREATE TABLE ETIQUETA_TAGS_CUSTOM
	(ID_CUSTTAGSETIQ NUMERIC(10,0) NOT NULL,
	 NM_CUSTTAGSETIQ VARCHAR(100) NOT NULL,
	 GN_DESCCUSTTAGSETIQ VARCHAR(100) NOT NULL,
	 GN_EXPRCUSTTAGSETIQ VARCHAR(4000) NOT NULL,
	 ID_USUACRIACUSTTAGSETIQ NUMERIC(10,0),
	 DT_CRIACUSTTAGSETIQ DATETIME,
	 ID_USUAALTECUSTTAGSETIQ NUMERIC(10,0),
	 DT_ALTECUSTTAGSETIQ DATETIME,
	 FX_CUSTTAGSETIQ CHAR(1) NOT NULL,
	 PRIMARY KEY (ID_CUSTTAGSETIQ))  
// 

 ALTER TABLE ETIQUETA_TAGS_CUSTOM 
  ADD CONSTRAINT FK_CUSTTAGSETIQ_USUACRIA FOREIGN KEY (ID_USUACRIACUSTTAGSETIQ) 
      REFERENCES SISTEMA_USUARIO (ID_USUASIST)
//

 ALTER TABLE ETIQUETA_TAGS_CUSTOM 
  ADD CONSTRAINT FK_CUSTTAGSETIQ_USUAALT FOREIGN KEY (ID_USUAALTECUSTTAGSETIQ) 
      REFERENCES SISTEMA_USUARIO (ID_USUASIST)
//

ALTER TABLE SCT_EMPRESA ADD CONSTRAINT UC_COMPANYID UNIQUE (COMPANYID)
//
                                   
ALTER TABLE GRUPO_MENU_CUSTOMIZADO ADD GROUPMENUCUSTOMID UNIQUEIDENTIFIER
//

UPDATE GRUPO_MENU_CUSTOMIZADO SET GROUPMENUCUSTOMID = NEWID() WHERE GROUPMENUCUSTOMID IS NULL
//

ALTER TABLE GRUPO_MENU_CUSTOMIZADO ADD CONSTRAINT UC_GROUPMENUCUSTOMID UNIQUE (GROUPMENUCUSTOMID)
//

ALTER TABLE SCT_USUARIO ADD CONSTRAINT UC_GEACCOUNTIDUPDATE UNIQUE (GEACCOUNTIDUPDATE)
//
                                          
CREATE TABLE REPORTVERSION (
    REPORTVERSIONID UNIQUEIDENTIFIER NOT NULL,
    REPORTID UNIQUEIDENTIFIER NOT NULL,
    DESCRIPTION VARCHAR(2000) NULL,
    [FILE] VARBINARY(MAX) NULL,
    VERSIONSTATUS INT,
    GESTATUS INT NOT NULL,
    GEDATEUPDATE DATETIME NULL,
    GEACCOUNTIDUPDATE UNIQUEIDENTIFIER NULL,
    CONSTRAINT PK_REPORTVERSION PRIMARY KEY (REPORTVERSIONID),
    CONSTRAINT FK_REPORTVERSION_REPORT FOREIGN KEY (REPORTID) REFERENCES REPORT (REPORTID),
    CONSTRAINT FK_REPORTVERSION_SCT_USUARIO FOREIGN KEY (GEACCOUNTIDUPDATE) REFERENCES SCT_USUARIO (GEACCOUNTIDUPDATE)
) 
//

EXEC SP_ExcluiEstatisticas 'ETIQUETA_DESIGN_VERSAO', 'FILIAL'
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ALTER COLUMN FILIAL INT
//

SELECT MAX(ID_VERSDESIETIQ)+1 FROM ETIQUETA_DESIGN_VERSAO   
//

DECLARE @VALOETIQ INT;
SET @VALOETIQ = (SELECT ISNULL(MAX(ID_VERSDESIETIQ) + 1, 1) FROM ETIQUETA_DESIGN_VERSAO);

DECLARE @sql NVARCHAR(MAX);
SET @sql = N'CREATE SEQUENCE ID_VERSDESIETIQ START WITH ' + CAST(@VALOETIQ AS NVARCHAR(10)) + ' INCREMENT BY 1';
EXEC sp_executesql @sql;
//

UPDATE ETIQUETA_DESIGN
   SET FL_ATIVDESIETIQ = 'P'
   
UPDATE ETIQUETA_DESIGN_VERSAO
   SET ETIQUETA_DESIGN_VERSAO.NM_VERSDESIETIQ = ETIQUETA_DESIGN.NM_DESIETIQ,
       ETIQUETA_DESIGN_VERSAO.GN_CODIREFEVERSDESIETIQ = ETIQUETA_DESIGN.GN_CODIREFEDESIETIQ,
	   ETIQUETA_DESIGN_VERSAO.FL_UTILCODISSCCVERSDESIETIQ = ETIQUETA_DESIGN.FL_UTILCODISSCCDESIETIQ
  FROM ETIQUETA_DESIGN_VERSAO
       JOIN ETIQUETA_DESIGN ON ETIQUETA_DESIGN_VERSAO.ID_DESIETIQ = ETIQUETA_DESIGN.ID_DESIETIQ
	   
UPDATE ETIQUETA_DESIGN_VERSAO
   SET FL_ATIVVERSDESIETIQ = 'I'	   

INSERT INTO ETIQUETA_DESIGN_VERSAO
(EMPRESA,
FILIAL,
ID_VERSDESIETIQ,
ID_DESIETIQ,
DS_ALTEVERSDESIETIQ,
ID_USUASIST_ALTE,
DT_ALTEVERSDESIETIQ,
GN_VERSDESIETIQ,
GN_LABEVERSDESIETIQ,
GN_IMAGVERDESIETIQ,
FX_VERSDESIETIQ,
NM_VERSDESIETIQ,
GN_CODIREFEVERSDESIETIQ,
FL_ATIVVERSDESIETIQ,
FL_UTILCODISSCCVERSDESIETIQ)
SELECT 
EMPRESA,
FILIAL,
(NEXT VALUE FOR ID_VERSDESIETIQ),
ID_DESIETIQ,
NM_DESIETIQ,
8,
DT_ULTIATUADESIETIQ,
GN_DESIETIQ,
GN_LABEDESIETIQ,
GN_IMAGDESIETIQ,
FX_DESIETIQ,
NM_DESIETIQ,
GN_CODIREFEDESIETIQ,
FL_ATIVDESIETIQ,
FL_UTILCODISSCCDESIETIQ
FROM 
ETIQUETA_DESIGN
--COMMIT TRAN T1
//

CREATE TRIGGER [dbo].[TIU_BLOQ_EDICAO_ETIQUETA]
ON [dbo].[ETIQUETA_DESIGN]
AFTER INSERT, UPDATE AS
BEGIN
  IF ((SELECT FL_ATIVDESIETIQ FROM Inserted) <> 'P')
  BEGIN
    RAISERROR ('A "Situação" desta etiqueta é inválida. Permitido somente "Situação" igual a "Produção".', 16, 1)
    ROLLBACK TRANSACTION
  END 
END  
 COMMIT TRAN T1


/*Criando Tabela TEMP_MATERIAL_AJUSTE_IMPORT*/
CREATE TABLE TEMP_MATERIAL_AJUSTE_IMPORT (
EMPRESA char(2) NOT NULL,
FILIAL int NOT NULL,
ID_IMPOAJUSMATETEMP numeric(10, 0) NOT NULL,
ID_MATERIAL numeric(10, 0) NOT NULL,
NM_PERIIMPOAJUSMATETEMP varchar(7) NOT NULL,
QN_IMPOAJUSMATETEMP numeric(30, 10) NOT NULL,
VL_IMPOAJUSMATETEMP numeric(30, 10) NOT NULL,
QN_CONSMATETEMP numeric(30, 10) NULL,
VL_CONSMATETEMP numeric(30, 10) NULL,
PRIMARY KEY (ID_IMPOAJUSMATETEMP)
);
//


/*Criando Tabela CUSTO_COMPONENTE_DIARIO_CONF*/
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'CUSTO_COMPONENTE_DIARIO_CONF')
CREATE TABLE CUSTO_COMPONENTE_DIARIO_CONF (
EMPRESA varchar(2) NULL,
FILIAL int NULL,
ID_CONFCOMP numeric(10, 0) NOT NULL,
ID_COMPAVE numeric(10, 0) NULL,
ID_TIPOAVE numeric(10, 0) NULL,
ID_ESTRUNIDABAT numeric(10, 0) NULL,
ID_PROCLINH numeric(10, 0) NULL,
NR_TURNCONFCOMP numeric(10, 0) NULL,
DT_PROCCONFCOMP datetime DEFAULT (getdate()) NULL,
DT_REGIPADRCONFCOMP datetime NULL,
NR_PERIODOCONFCOMP varchar(10) NULL,
QN_PESOENTRCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESODESCCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOMORTCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESODESTCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESODESTSIMUCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOPRODCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOPRODTEMPCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOPRODSIMUCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOTOTAENTRCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOTOTASAIDCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOTOTASAIDTEMPCONFCOMP numeric(20, 10) NULL,
QN_PESOSALDOCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOSALDOTEMPCONFCOMP numeric(20, 10) DEFAULT ((0)) NULL,
PRIMARY KEY (ID_CONFCOMP)
);
ELSE
PRINT('Tabela ja Existe')
//


/*Criando Tabela MATERIAL_EMBALAGEM_ESTR_PERM*/
CREATE TABLE MATERIAL_EMBALAGEM_ESTR_PERM (
EMPRESA char(2) NOT NULL,
FILIAL int NOT NULL,
ID_ESTRPERMMATEEMBA numeric(10, 0) NOT NULL,
ID_ESTRUNIDABAT numeric(10, 0) NOT NULL,
ID_MATEEMBA numeric(10, 0) NOT NULL,
FX_ESTRPERMMATEEMBA char(1) NULL,
PRIMARY KEY (ID_ESTRPERMMATEEMBA)
);
//

/*Criando Tabela CUSTO_PRODUTOCOMP_DIARIO_CONF*/
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'CUSTO_PRODUTOCOMP_DIARIO_CONF')
CREATE TABLE CUSTO_PRODUTOCOMP_DIARIO_CONF (
EMPRESA char(2) NULL,
FILIAL int NULL,
ID_COMPAVE numeric(10, 0) NULL,
ID_TIPOAVE numeric(10, 0) NULL,
ID_ESTRUNIDABAT numeric(10, 0) NULL,
ID_PROCLINH numeric(10, 0) NULL,
ID_MATEEMBA numeric(10, 0) NULL,
NR_TURNCONFPRODCOMP numeric(10, 0) NULL,
DT_PROCCONFPRODCOMP datetime DEFAULT (getdate()) NULL,
DT_REGIPADRCONFPRODCOMP datetime NULL,
NR_PERIODOCONFPRODCOMP varchar(10) NULL,
FL_TIPOCONFPRODCOMP char(2) NULL,
PC_COMPCONFPRODCOMP numeric(20, 10) DEFAULT ((0)) NULL,
PC_PORCTEMPCONFPRODCOMP numeric(20, 3) DEFAULT ((0)) NULL,
QN_PESOCOMPCONFPRODCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOCOMPTEMPCONFPRODCOMP numeric(20, 10) DEFAULT ((0)) NULL,
QN_PESOPRODCONFPRODCOMP numeric(20, 10) DEFAULT ((0)) NULL
);
ELSE PRINT('Tabela ja Existe')
//

/*Criando Tabela PRODUCAO_REGISTRO_LOTE_INTE*/
CREATE TABLE PRODUCAO_REGISTRO_LOTE_INTE (
EMPRESA varchar(2) NOT NULL,
FILIAL int NOT NULL,
ID_INTELOTEREGIPROD numeric(10, 0) NOT NULL,
NR_INTELOTEREGIPROD varchar(40) NOT NULL,
DT_PADRREGIPROD datetime NOT NULL,
DT_CRIAINTELOTEREGIPROD datetime NOT NULL,
ID_FORNECEDOR numeric(10, 0) NOT NULL,
IE_FORNECEDOR varchar(25) NOT NULL,
FL_STATINTELOTEREGIPROD char(2) NOT NULL,
PRIMARY KEY (ID_INTELOTEREGIPROD)
);
//


/*Criando Tabela PRODUCAO_SEQUESTRO_MOVI_BATCH*/
CREATE TABLE PRODUCAO_SEQUESTRO_MOVI_BATCH (
EMPRESA char(2) NOT NULL,
FILIAL int NOT NULL,
ID_MOVIBATCSEQUPROD numeric(10, 0) NOT NULL,
ID_BATCPROD numeric(10, 0) NULL,
ID_REPOBATCPROD numeric(10, 0) NULL,
ID_SEQUPROD numeric(10, 0) NOT NULL,
ID_REGIPROD numeric(10, 0) NOT NULL,
ID_PRIMMATEBATCPROD numeric(10, 0) NULL,
ID_REPOPRIMMATEBATCPROD numeric(10, 0) NULL,
DT_MOVIBATCSEQUPROD datetime NULL,
FX_MOVIBATCSEQUPROD char(1) NULL,
PRIMARY KEY (ID_MOVIBATCSEQUPROD)
);
//


/*Criando Tabela TRANSPORTADOR_VEICULO_ALOC*/
CREATE TABLE TRANSPORTADOR_VEICULO_ALOC (
ID_ALOCVEICTRAN numeric(10, 0) NOT NULL,
ID_VEICTRAN numeric(10, 0) NOT NULL,
NR_SEQUALOCVEICTRAN numeric(10, 0) NOT NULL,
FX_ALOCVEICTRAN char(1) NOT NULL,
QN_CAIXALOCVEICTRAN numeric(10, 0) NOT NULL,
DT_INCLALOCVEICTRAN datetime NULL,
ID_USUAINCLALOCVEICTRAN numeric(10, 0) NULL,
DT_ALTEALOCVEICTRAN datetime NULL,
ID_USUAALTEALOCVEICTRAN numeric(10, 0) NULL,
PRIMARY KEY (ID_ALOCVEICTRAN)
);
//

 /*Alterando Coluna NM_PRODFILIMATEEMBA*/
EXEC SP_ExcluiEstatisticas 'NM_PRODFILIMATEEMBA','MATERIAL_EMBALAGEM_FILIAL';
//
ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ALTER COLUMN NM_PRODFILIMATEEMBA varchar(250) NULL;
//
/*Adicionando Coluna FL_PERMPRODSAIDTUNMATEEMBAFILI da tabela MATERIAL_EMBALAGEM_FILIAL*/
ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD FL_PERMPRODSAIDTUNMATEEMBAFILI char(1) DEFAULT ('S') NULL;
 //

/*Adicionando Coluna ID_CUSTMATERIAL da tabela MATERIAL_EMBALAGEM_FILIAL*/
ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD ID_CUSTMATERIAL numeric(10, 0) NULL;
 //


 /*Alterando Coluna FILIAL*/
EXEC SP_ExcluiEstatisticas 'FILIAL','CUSTO_COMPONENTE_ENTRADA';
//
ALTER TABLE CUSTO_COMPONENTE_ENTRADA ALTER COLUMN FILIAL numeric(10, 0)  NOT NULL;
//

 /*Alterando Coluna GN_XMLENVIEVENLOTENFE*/
EXEC SP_ExcluiEstatisticas 'GN_XMLENVIEVENLOTENFE','NFE_LOTE_EVENTO';
//
ALTER TABLE NFE_LOTE_EVENTO ALTER COLUMN GN_XMLENVIEVENLOTENFE image  NOT NULL;
//
 /*Alterando Coluna GN_XMLRETOEVENLOTENFE*/
EXEC SP_ExcluiEstatisticas 'GN_XMLRETOEVENLOTENFE','NFE_LOTE_EVENTO';
//
ALTER TABLE NFE_LOTE_EVENTO ALTER COLUMN GN_XMLRETOEVENLOTENFE image  NOT NULL;
//

 /*Alterando Coluna GN_FOTOMOTOTRAN*/
EXEC SP_ExcluiEstatisticas 'GN_FOTOMOTOTRAN','TRANSPORTADOR_MOTORISTA';
//
ALTER TABLE TRANSPORTADOR_MOTORISTA ALTER COLUMN GN_FOTOMOTOTRAN image NULL;
//

/*Adicionando Coluna QN_TEMPCOMPONENTE da tabela MATRIZ_COMPONENTES*/
ALTER TABLE MATRIZ_COMPONENTES ADD QN_TEMPCOMPONENTE numeric(20, 10) NULL;
 //

/*Adicionando Coluna PC_TEMPCOMPONENTE da tabela MATRIZ_COMPONENTES*/
ALTER TABLE MATRIZ_COMPONENTES ADD PC_TEMPCOMPONENTE numeric(20, 10) NULL;
 //


 /*Alterando Coluna GN_LOGATUASIST*/
EXEC SP_ExcluiEstatisticas 'GN_LOGATUASIST','SISTEMA_ATUALIZACAO_LOG';
//
ALTER TABLE SISTEMA_ATUALIZACAO_LOG ALTER COLUMN GN_LOGATUASIST image  NOT NULL;
//

 /*Alterando Coluna GN_SQLCONSULTMREGIPROCAUTOEQUI*/
EXEC SP_ExcluiEstatisticas 'GN_SQLCONSULTMREGIPROCAUTOEQUI','EQUIPAMENTO';
//
ALTER TABLE EQUIPAMENTO ALTER COLUMN GN_SQLCONSULTMREGIPROCAUTOEQUI varchar(MAX) NULL;
//
 /*Alterando Coluna GN_SQLUPDASTATREGIPROCEQUI*/
EXEC SP_ExcluiEstatisticas 'GN_SQLUPDASTATREGIPROCEQUI','EQUIPAMENTO';
//
ALTER TABLE EQUIPAMENTO ALTER COLUMN GN_SQLUPDASTATREGIPROCEQUI varchar(MAX) NULL;
//
 /*Alterando Coluna GN_SQLCONSREGIPROCEQUI*/
EXEC SP_ExcluiEstatisticas 'GN_SQLCONSREGIPROCEQUI','EQUIPAMENTO';
//
ALTER TABLE EQUIPAMENTO ALTER COLUMN GN_SQLCONSREGIPROCEQUI varchar(MAX) NULL;
//
 /*Alterando Coluna GN_CONFVERIPESO*/
EXEC SP_ExcluiEstatisticas 'GN_CONFVERIPESO','EQUIPAMENTO';
//
ALTER TABLE EQUIPAMENTO ALTER COLUMN GN_CONFVERIPESO varchar(MAX) NULL;
//

 /*Alterando Coluna DT_ULTIALTE*/
EXEC SP_ExcluiEstatisticas 'DT_ULTIALTE','APANHA_SUPERVISOR';
//
ALTER TABLE APANHA_SUPERVISOR ALTER COLUMN DT_ULTIALTE datetime  NULL;
//

ALTER TABLE APANHA_SUPERVISOR ADD CONSTRAINT DF_DT_ULTIALTE DEFAULT (getdate()) FOR DT_ULTIALTE;
//


/*Adicionando Coluna GN_DCPOITEMPEDIVEND da tabela PEDIDO_VENDA_ITEM*/
ALTER TABLE PEDIDO_VENDA_ITEM ADD GN_DCPOITEMPEDIVEND varchar(14) NULL;
 //


 /*Alterando Coluna GN_XMLEQUIEMPR*/
EXEC SP_ExcluiEstatisticas 'GN_XMLEQUIEMPR','EQUIFAX_EMPRESA';
//
ALTER TABLE EQUIFAX_EMPRESA ALTER COLUMN GN_XMLEQUIEMPR image  NOT NULL;
//
 /*Alterando Coluna GN_ALEREQUIEMPR*/
EXEC SP_ExcluiEstatisticas 'GN_ALEREQUIEMPR','EQUIFAX_EMPRESA';
//
ALTER TABLE EQUIFAX_EMPRESA ALTER COLUMN GN_ALEREQUIEMPR image  NOT NULL;
//

/*Adicionando Coluna NM_PERIODO da tabela PRODUCAO_BATCH*/
ALTER TABLE PRODUCAO_BATCH ADD NM_PERIODO varchar(33) NULL;
 //


 /*Alterando Coluna GN_IMAGVEICTRAN*/
EXEC SP_ExcluiEstatisticas 'GN_IMAGVEICTRAN','TRANSPORTADOR_VEICULO_IMAGEM';
//
ALTER TABLE TRANSPORTADOR_VEICULO_IMAGEM ALTER COLUMN GN_IMAGVEICTRAN image  NULL;
//

 /*Alterando Coluna Ds_Query*/
EXEC SP_ExcluiEstatisticas 'Ds_Query','Alteracao_Objetos';
//
ALTER TABLE Alteracao_Objetos ALTER COLUMN Ds_Query xml  NOT NULL;
//

 /*Alterando Coluna DT_TEMPDESLOCAUNIDPROCPROD*/
EXEC SP_ExcluiEstatisticas 'DT_TEMPDESLOCAUNIDPROCPROD','PRODUCAO_PROCES_UNID_EQUIP';
//
ALTER TABLE PRODUCAO_PROCES_UNID_EQUIP ALTER COLUMN DT_TEMPDESLOCAUNIDPROCPROD time  NOT NULL;
//

 /*Alterando Coluna ID*/
EXEC SP_ExcluiEstatisticas 'ID','PROD_MENS';
//
ALTER TABLE PROD_MENS ALTER COLUMN ID bigint  NOT NULL;
//

 /*Alterando Coluna GN_ARQUVERSTRADSIST*/
EXEC SP_ExcluiEstatisticas 'GN_ARQUVERSTRADSIST','SISTEMA_TRADUCAO_VERSAO';
//
ALTER TABLE SISTEMA_TRADUCAO_VERSAO ALTER COLUMN GN_ARQUVERSTRADSIST image  NOT NULL;
//

 /*Alterando Coluna Signature*/
EXEC SP_ExcluiEstatisticas 'Signature','Delivery';
//
ALTER TABLE Delivery ALTER COLUMN Signature image  NOT NULL;
//

/*Adicionando Coluna ID_ALMOXARIFADO_ORIG da tabela PRODUCAO_REGISTRO_TR_ITEM*/
ALTER TABLE PRODUCAO_REGISTRO_TR_ITEM ADD ID_ALMOXARIFADO_ORIG numeric(10, 0) NULL;
 //


 /*Alterando Coluna FILIAL*/
EXEC SP_ExcluiEstatisticas 'FILIAL','ETIQUETA_DESIGN_VERSAO';
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ALTER COLUMN FILIAL int  NOT NULL;
//
 /*Alterando Coluna GN_LABEVERSDESIETIQ*/
EXEC SP_ExcluiEstatisticas 'GN_LABEVERSDESIETIQ','ETIQUETA_DESIGN_VERSAO';
//

EXEC sp_rename 'ETIQUETA_DESIGN_VERSAO.GN_LABEVERSDESIETIQ', 'GN_LABEVERSDESIETIQ_OLD', 'COLUMN';
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO ADD GN_LABEVERSDESIETIQ varbinary(MAX);
//

UPDATE ETIQUETA_DESIGN_VERSAO SET ETIQUETA_DESIGN_VERSAO.GN_LABEVERSDESIETIQ = CAST(ETIQUETA_DESIGN_VERSAO.GN_LABEVERSDESIETIQ_OLD AS VARBINARY(MAX))
//

ALTER TABLE ETIQUETA_DESIGN_VERSAO DROP COLUMN GN_LABEVERSDESIETIQ_OLD;
//

 /*Alterando Coluna GN_LOGOCERTSIFFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'GN_LOGOCERTSIFFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN GN_LOGOCERTSIFFILIPARASIST image NULL;
//
 /*Alterando Coluna GN_ASSICERTSIFFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'GN_ASSICERTSIFFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN GN_ASSICERTSIFFILIPARASIST image NULL;
//
 /*Alterando Coluna GN_LOGOFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'GN_LOGOFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN GN_LOGOFILIPARASIST IMAGE NULL;
//
 /*Alterando Coluna NR_MODEETIQADICFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'NR_MODEETIQADICFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN NR_MODEETIQADICFILIPARASIST numeric(10, 0) NULL;
//
 /*Alterando Coluna NR_MODETIQREPOPESAFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'NR_MODETIQREPOPESAFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN NR_MODETIQREPOPESAFILIPARASIST numeric(10, 0) NULL;
//
 /*Alterando Coluna NR_MODETIQREPOBATCFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'NR_MODETIQREPOBATCFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN NR_MODETIQREPOBATCFILIPARASIST numeric(10, 0) NULL;
//
 /*Alterando Coluna NR_MODETIQREGIBATCFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'NR_MODETIQREGIBATCFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN NR_MODETIQREGIBATCFILIPARASIST numeric(10, 0) NULL;
//
 /*Alterando Coluna GN_MODEINTEPRODFILIPARASIST*/
EXEC SP_ExcluiEstatisticas 'GN_MODEINTEPRODFILIPARASIST','SISTEMA_PARAMETRO_FILIAL';
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ALTER COLUMN GN_MODEINTEPRODFILIPARASIST real NULL;
//
/*Adicionando Coluna FL_VALIPCCQFILIPARASIST da tabela SISTEMA_PARAMETRO_FILIAL*/
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_VALIPCCQFILIPARASIST char(1) DEFAULT ('N') NULL;
 //

/*Adicionando Coluna NR_SINCTURNDIARFILIPARASIST da tabela SISTEMA_PARAMETRO_FILIAL*/
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD NR_SINCTURNDIARFILIPARASIST numeric(10, 0) NULL;
 //

/*Adicionando Coluna FL_PESOREFERENDVIVOFILIPARASIST da tabela SISTEMA_PARAMETRO_FILIAL*/
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_PESOREFERENDVIVOFILIPARASIST char(2) DEFAULT ('PE') NULL;
 //

/*Adicionando Coluna FL_LIMIINFOORIGAVEFILIPARASIST da tabela SISTEMA_PARAMETRO_FILIAL*/
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_LIMIINFOORIGAVEFILIPARASIST char(1) NULL;
 //


/*Adicionando Coluna NM_PERIODO da tabela PRODUCAO_PROGRAMACAO*/
ALTER TABLE PRODUCAO_PROGRAMACAO ADD NM_PERIODO nvarchar NULL;
 //

/*Adicionando Coluna QN_PESOBRUTCONTEMBAINDI da tabela EMBALAGEM_CONTROLE_INDIVIDUAL*/
ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD QN_PESOBRUTCONTEMBAINDI numeric(16, 3) NULL;
 //

/*Adicionando Coluna DT_EFETCARGEXPE da tabela EXPEDICAO_CARGA*/
ALTER TABLE EXPEDICAO_CARGA ADD DT_EFETCARGEXPE datetime NULL;
 //

/*Adicionando Coluna ID_USUAEFETCARGEXPE da tabela EXPEDICAO_CARGA*/
ALTER TABLE EXPEDICAO_CARGA ADD ID_USUAEFETCARGEXPE numeric(10, 0) NULL;
 //

/*Adicionando Coluna GROUPMENUCUSTOMID da tabela GRUPO_MENU_CUSTOMIZADO*/
IF NOT EXISTS (
    SELECT 1
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_NAME = 'GRUPO_MENU_CUSTOMIZADO'
    AND COLUMN_NAME = 'GROUPMENUCUSTOMID'
)
BEGIN
    ALTER TABLE GRUPO_MENU_CUSTOMIZADO
    ADD GROUPMENUCUSTOMID UNIQUEIDENTIFIER NULL;
END
ELSE
PRINT ('Coluna já existe, continua Script')
//

/*Adicionando Coluna ID_ALMOXARIFADO da tabela ESTOQUE_FECHAMENTO_ITEM*/
ALTER TABLE ESTOQUE_FECHAMENTO_ITEM ADD ID_ALMOXARIFADO numeric(10, 0) NULL;
 //

 /*Alterando Coluna GN_MODEETIQCOMPPARASIST*/
EXEC SP_ExcluiEstatisticas 'GN_MODEETIQCOMPPARASIST','SISTEMA_PARAMETRO';
//
ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN GN_MODEETIQCOMPPARASIST numeric(10, 0) NULL;
//

 /*Alterando Coluna NR_MODEETIQENDEPARASIST*/
EXEC SP_ExcluiEstatisticas 'NR_MODEETIQENDEPARASIST','SISTEMA_PARAMETRO';
//
ALTER TABLE SISTEMA_PARAMETRO ALTER COLUMN NR_MODEETIQENDEPARASIST numeric(10, 0)NULL;
//
/*Adicionando Coluna FL_ATIVAUTEACTIDIREPARASIST da tabela SISTEMA_PARAMETRO*/
ALTER TABLE SISTEMA_PARAMETRO ADD FL_ATIVAUTEACTIDIREPARASIST char(1) DEFAULT ('N') NULL;
 //

/*Adicionando Coluna FL_TIPOSELEVEICPARASIST da tabela SISTEMA_PARAMETRO*/
ALTER TABLE SISTEMA_PARAMETRO ADD FL_TIPOSELEVEICPARASIST char(2) DEFAULT ('PL') NULL;
 //

/*Adicionando Coluna FL_REGISAIDTUNEAUTOPARASIST da tabela SISTEMA_PARAMETRO*/
ALTER TABLE SISTEMA_PARAMETRO ADD FL_REGISAIDTUNEAUTOPARASIST char(1) DEFAULT ('N') NULL;
 //

/*Adicionando Coluna QN_TEMPINTELEITEXPEPARASIST da tabela SISTEMA_PARAMETRO*/
ALTER TABLE SISTEMA_PARAMETRO ADD QN_TEMPINTELEITEXPEPARASIST numeric(10, 0) DEFAULT ((10)) NULL;
 //

/*Adicionando Coluna FL_DATABASEORDEPRODPARASIST da tabela SISTEMA_PARAMETRO*/
ALTER TABLE SISTEMA_PARAMETRO ADD FL_DATABASEORDEPRODPARASIST char(2) DEFAULT ('DP') NULL;
 //

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'TRANSPORTADOR_VEICULO_ALOC')
CREATE TABLE TRANSPORTADOR_VEICULO_ALOC
 (ID_ALOCVEICTRAN         NUMERIC(10,0) NOT NULL,
  ID_VEICTRAN             NUMERIC(10,0) NOT NULL,
  NR_SEQUALOCVEICTRAN     NUMERIC(10,0) NOT NULL,
  FX_ALOCVEICTRAN         CHAR(1) NOT NULL,
  QN_CAIXALOCVEICTRAN     NUMERIC(10,0) NOT NULL,
  DT_INCLALOCVEICTRAN     DATETIME,
  ID_USUAINCLALOCVEICTRAN NUMERIC(10,0),
  DT_ALTEALOCVEICTRAN     DATETIME,
  ID_USUAALTEALOCVEICTRAN NUMERIC(10,0))
ELSE
PRINT('Tabela já existe')
//

ALTER TABLE TRANSPORTADOR_VEICULO_ALOC ADD CONSTRAINT FK_VEIC_ALOCVEICTRAN FOREIGN KEY (ID_VEICTRAN) REFERENCES TRANSPORTADOR_VEICULO (ID_VEICTRAN)
//

ALTER TABLE TRANSPORTADOR_VEICULO_ALOC ADD CONSTRAINT FK_USUAINCL_ALOCVEICTRAN FOREIGN KEY (ID_USUAINCLALOCVEICTRAN) REFERENCES SISTEMA_USUARIO (ID_USUASIST)
//

ALTER TABLE TRANSPORTADOR_VEICULO_ALOC ADD CONSTRAINT FK_USUAALTE_ALOCVEICTRAN FOREIGN KEY (ID_USUAALTEALOCVEICTRAN) REFERENCES SISTEMA_USUARIO (ID_USUASIST)
//

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'SYNCH_LOG')
BEGIN
CREATE TABLE SYNCH_LOG(GN_DESCERROSYNCLOG VARCHAR(1000) NOT NULL,
                       GN_NOMEMETOSYNCLOG VARCHAR(100) NOT NULL,
                       GN_NOMEEXESYNCLOG VARCHAR(100) NOT NULL,
                       GN_NOMEMAQUSYNCLOGVAR VARCHAR(100) NOT NULL,
                       DT_ERROSYNCLOG DATETIME DEFAULT GETDATE() NOT NULL)
END
ELSE
	PRINT('Tabela já existe')
//

CREATE INDEX IDX_CARR_IDENCARGEXPE ON EXPEDICAO_CARGA_IDENTIFICACAO (ID_CARGEXPE, DT_CARRIDENCARGEXPE)
//
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'SYNCH_LOG')
BEGIN
CREATE TABLE MATERIAL_EMBALAGEM_ESTR_PERM
 (EMPRESA             CHAR(2) NOT NULL,
  FILIAL              INT NOT NULL,
  ID_ESTRPERMMATEEMBA NUMERIC(10,0) NOT NULL,
  ID_ESTRUNIDABAT     NUMERIC(10,0) NOT NULL,
  ID_MATEEMBA         NUMERIC(10,0) NOT NULL,
  FX_ESTRPERMMATEEMBA CHAR(1))
END
ELSE
PRINT('Tabela ja existe')
//

ALTER TABLE MATERIAL_EMBALAGEM_ESTR_PERM
  ADD CONSTRAINT FK_ESTRUNID_ESTRPERMMATEEMBA FOREIGN KEY (ID_ESTRUNIDABAT)
      REFERENCES ABATE_UNIDADE_ESTRUTURA (ID_ESTRUNIDABAT)
//

ALTER TABLE MATERIAL_EMBALAGEM_ESTR_PERM
  ADD CONSTRAINT FK_MATEEMBA_ESTRPERMMATEEMBA FOREIGN KEY (ID_MATEEMBA)
      REFERENCES MATERIAL_EMBALAGEM_DEFINICAO (ID_DEFIMATEEMBA)
//

BEGIN
  SET NOCOUNT ON
  /* VERIFICA SE EXISTE A TABELA TEMPORARIA */
  IF EXISTS ( SELECT name
                FROM sysobjects
               WHERE name = 'ESTRUTURA_PRODUCAO_PERMITIDA'
                 AND type = 'U')
  BEGIN
    DROP TABLE ESTRUTURA_PRODUCAO_PERMITIDA
  END
  /* DECLARAÇÃO DAS VARIÁVEIS */
  DECLARE @V_IDREGI                    NUMERIC(10);
  DECLARE @V_AUXIDEN                   NUMERIC(10);
  DECLARE @V_REGISTROS                 NUMERIC(10);
  DECLARE @EMPRESA                     CHAR(2);
  DECLARE @FILIAL                      INT;
  DECLARE @ID_MATEEMBA                 NUMERIC(10);
  DECLARE @ID_ESTRUNIDABAT             NUMERIC(10);
  /* SELECIONAMOS TODOS OS PRODUTOS/FILIAIS A SEREM PROCESSADOS */
  SELECT VW.EMPRESA,
		 VW.FILIAL,
		 VW.ID_DEFIMATEEMBA,
		 COALESCE(VW.ID_ESTRUNIDABAT, VW.ID_ESTRUNIDABAT_PRIM) ID_ESTRUNIDABAT,
         ROW_NUMBER() OVER (ORDER BY VW.ID_DEFIMATEEMBA) AS ID_AUX
    INTO ESTRUTURA_PRODUCAO_PERMITIDA
	FROM (SELECT MEF.EMPRESA,
				 MEF.FILIAL,
				 MEF.ID_DEFIMATEEMBA,
				 CASE WHEN AU.ID_UNIDABAT IS NULL
					  THEN NULL
					  ELSE AUE.ID_ESTRUNIDABAT
					   END ID_ESTRUNIDABAT,
				 (SELECT TOP 1 ID_ESTRUNIDABAT
					FROM ABATE_UNIDADE_ESTRUTURA AUEP
						 JOIN ABATE_UNIDADE AU
						   ON AUEP.ID_UNIDABAT = AU.ID_UNIDABAT
				   WHERE AU.EMPRESA = MEF.EMPRESA
					 AND AU.FILIAL = MEF.FILIAL
				  ORDER BY AUEP.ID_ESTRUNIDABAT) ID_ESTRUNIDABAT_PRIM
			FROM MATERIAL_EMBALAGEM_DEFINICAO MED
					  JOIN MATERIAL_EMBALAGEM_FILIAL MEF
						ON MEF.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
				 LEFT JOIN LINHA_PROCESSAMENTO LP
						ON LP.ID_PROCLINH = MEF.ID_PROCLINH
				 LEFT JOIN ABATE_UNIDADE_ESTRUTURA_LINHA AUEL
						ON AUEL.ID_LINHESTRUNIDABAT = LP.ID_LINHESTRUNIDABAT
				 LEFT JOIN ABATE_UNIDADE_ESTRUTURA AUE
						ON AUEL.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
				 LEFT JOIN ABATE_UNIDADE AU
						ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
					   AND AU.EMPRESA = MEF.EMPRESA
					   AND AU.FILIAL = MEF.FILIAL) VW
			   LEFT JOIN (SELECT MEEP.EMPRESA,
								 MEEP.FILIAL,
								 MEEP.ID_ESTRUNIDABAT,
								 MEEP.ID_MATEEMBA
							FROM MATERIAL_EMBALAGEM_ESTR_PERM MEEP) VW_ESTRPERM
					  ON VW_ESTRPERM.EMPRESA = VW.EMPRESA
					 AND VW_ESTRPERM.FILIAL = VW.FILIAL
					 AND VW_ESTRPERM.ID_MATEEMBA = VW.ID_DEFIMATEEMBA
					 AND VW_ESTRPERM.ID_ESTRUNIDABAT = COALESCE(VW.ID_ESTRUNIDABAT, VW.ID_ESTRUNIDABAT_PRIM)
	 WHERE VW_ESTRPERM.ID_ESTRUNIDABAT IS NULL
  /* GUARDAMOS O TOTAL DE REGISTROS ENCONTRADOS */
  SET @V_REGISTROS = @@ROWCOUNT
  SET @V_AUXIDEN = 1
  /* LAÇO PARA TODOS OS REGISTROS ENCONTRADOS */
  WHILE (@V_AUXIDEN <= @V_REGISTROS)
  BEGIN
    /* PEGAMOS NA TABELA TEMPORÁRIA OS DADOS PARA ATUALIZAÇÃO */
    SELECT @EMPRESA = EMPRESA,
           @FILIAL = FILIAL,
		   @ID_MATEEMBA = ID_DEFIMATEEMBA,
		   @ID_ESTRUNIDABAT = ID_ESTRUNIDABAT
      FROM ESTRUTURA_PRODUCAO_PERMITIDA
     WHERE ID_AUX = @V_AUXIDEN
    BEGIN TRAN T1
    /* GERAMOS UM NOVO ID PARA A TABELA DE ESTRUTURAS DE PRODUÇÃO PERMITIDAS */
    EXEC @V_IDREGI = [dbo].[NovoID]
         @ps_NomeSequ = 'ID_ESTRPERMMATEEMBA',
         @ps_NomeTabe = 'MATERIAL_EMBALAGEM_ESTR_PERM'
    /* CRIAMOS UM NOVO REGISTRO NA TABELA DE ESTRUTURAS DE PRODUÇÃO PERMITIDAS */
	INSERT INTO MATERIAL_EMBALAGEM_ESTR_PERM
		   (EMPRESA,
		    FILIAL,
		    ID_ESTRPERMMATEEMBA,
		    ID_ESTRUNIDABAT,
			ID_MATEEMBA,
			FX_ESTRPERMMATEEMBA)
	VALUES
		   (@EMPRESA,
		    @FILIAL,
		    @V_IDREGI,
		    @ID_ESTRUNIDABAT,
			@ID_MATEEMBA,
			'N')
    COMMIT
    /* PRÓXIMO REGISTRO TEMPORÁRIO */
    SET @V_AUXIDEN = @V_AUXIDEN + 1
  END
  DROP TABLE ESTRUTURA_PRODUCAO_PERMITIDA
  SET NOCOUNT OFF
END
//

-- ATUALIZA PARA VERDADEIRO SOMENTE SE FOI CONFIGURADO UM ENDEREÇO DE DOMINIO
UPDATE SISTEMA_PARAMETRO
       SET FL_ATIVAUTEACTIDIREPARASIST = 'S'
 WHERE RTRIM(LTRIM(COALESCE(NM_ENDEDOMIPARASIST, ' '))) <> ''
//

ALTER TABLE CLIENTE_CREDITO ADD DT_ULTITITUPAGOCLIE DATETIME
//

ALTER TABLE CLIENTE_CREDITO ADD NR_ULTITITUPAGOCLIE VARCHAR(25)
//

ALTER TABLE CLIENTE_CREDITO ADD DT_PROXTITUPAGACLIE DATETIME
//

ALTER TABLE CLIENTE_CREDITO ADD NR_PROXTITUPAGACLIE VARCHAR(25)
//

ALTER TABLE CLIENTE_CREDITO ADD QN_TITUABERCLIE INT
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOENTRCONFCOMP  	    DEFAULT 0 FOR QN_PESOENTRCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESODESCCONFCOMP  	    DEFAULT 0 FOR QN_PESODESCCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOMORTCONFCOMP  	    DEFAULT 0 FOR QN_PESOMORTCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESODESTCONFCOMP  	    DEFAULT 0 FOR QN_PESODESTCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESODESTSIMUCONFCOMP    DEFAULT 0 FOR QN_PESODESTSIMUCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOPRODCONFCOMP  		DEFAULT 0 FOR QN_PESOPRODCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOPRODTEMPCONFCOMP 	DEFAULT 0 FOR QN_PESOPRODTEMPCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOPRODSIMUCONFCOMP     DEFAULT 0 FOR QN_PESOPRODSIMUCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOTOTAENTRCONFCOMP     DEFAULT 0 FOR QN_PESOTOTAENTRCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOTOTASAIDCONFCOMP     DEFAULT 0 FOR QN_PESOTOTASAIDCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOTOTASAIDTEMPCONFCOMP DEFAULT 0 FOR QN_PESOTOTASAIDTEMPCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOSALDOCONFCOMP  		DEFAULT 0 FOR QN_PESOSALDOCONFCOMP;
//

ALTER TABLE dbo.CUSTO_COMPONENTE_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOSALDOTEMPCONFCOMP 	DEFAULT 0 FOR QN_PESOSALDOTEMPCONFCOMP;
//

ALTER TABLE CUSTO_PRODUTOCOMP_DIARIO_CONF ADD CONSTRAINT DF_PC_COMPCONFPRODCOMP 	    default 0 for PC_COMPCONFPRODCOMP;
//

ALTER TABLE CUSTO_PRODUTOCOMP_DIARIO_CONF ADD CONSTRAINT DF_PC_PORCTEMPCONFPRODCOMP     default 0 for PC_PORCTEMPCONFPRODCOMP;
//

ALTER TABLE CUSTO_PRODUTOCOMP_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOCOMPCONFPRODCOMP     default 0 for QN_PESOCOMPCONFPRODCOMP;
//

ALTER TABLE CUSTO_PRODUTOCOMP_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOCOMPTEMPCONFPRODCOMP default 0 for QN_PESOCOMPTEMPCONFPRODCOMP;
//

ALTER TABLE CUSTO_PRODUTOCOMP_DIARIO_CONF ADD CONSTRAINT DF_QN_PESOPRODCONFPRODCOMP     default 0 for QN_PESOPRODCONFPRODCOMP;
//

CREATE NONCLUSTERED INDEX IDX_ENTRAVEVIVATURN_ENTR ON ENTRADA_AVE_VIVA_TURNO (ID_ENTRAVEVIVA)
//

ALTER TABLE MATERIAL_EMBALAGEM_FILIAL ADD PC_INJEMATEEMBAFILI NUMERIC(10,2)
//

ALTER TABLE SISTEMA_PARAMETRO ADD FL_DATAUTILDTLIINVEPARASIST CHAR(2)
//

UPDATE SISTEMA_PARAMETRO SET FL_DATAUTILDTLIINVEPARASIST = 'DP'
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD QN_CAIXSOLIMULTPROGPROD NUMERIC(10,0)
//

ALTER TABLE PRODUCAO_PROGRAMACAO_MULTIPLA ADD FL_VALIMULTPROGPROD CHAR(1) DEFAULT 'N' NOT NULL
//

CREATE TABLE PRODUCAO_PROGRAMACAO_MULT_LOGS
 (EMPRESA                 CHAR(2) NOT NULL,
  FILIAL                  INT NOT NULL,
  ID_MULTPROGPROD         NUMERIC(10,0) NOT NULL,
  DT_MULTPROGPROD            DATETIME,
  DT_ELABMULTPROGPROD      DATETIME,
  ID_PRODMATEEMBA             VARCHAR(10),
  GN_MENSLOGSMULTPROGPROD VARCHAR(2000),
  DT_LOGSMULTPROGPROD     DATETIME,
  ID_USUASIST             NUMERIC(10,0));
//

EXEC SP_RecriaEstatisticas
//

IF EXISTS (SELECT NAME
             FROM SYSOBJECTS
            WHERE NAME = 'VW_PRODUCAO_REGISTRO_TURNO'
              AND TYPE = 'V'
          )
  DROP VIEW VW_PRODUCAO_REGISTRO_TURNO
//

CREATE VIEW VW_PRODUCAO_REGISTRO_TURNO
AS
SELECT ID_REGIPROD,
       GN_SEQUTURNREGIPROD,
       FL_TURNMANUREGIPROD,
       NR_SEQUTURNREGIPROD,
       IE_PERITURNREGIPROD,
       FL_PERIMANUTURNREGIPROD
  FROM PRODUCAO_REGISTRO_TURNO
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'AVE_PARTE' AND TYPE = 'V')
    DROP VIEW AVE_PARTE
//

CREATE OR ALTER VIEW AVE_PARTE
AS 
SELECT
         ID_PRINPARTAVE AS ID_PARTAVE,
         ID_PRINPARTAVE,
         'PP - ' + CAST(NM_PRINPARTAVE AS VARCHAR) AS NM_PARTAVE,
         FX_PRINPARTAVE AS FX_PARTAVE,
         'AM' AS FL_TIPOREGIPARTAVE,
		 NULL AS ID_COMPAVE 
FROM  AVE_PARTE_PRINCIPAL 
UNION ALL
(SELECT
         (10000 + ID_COMPAVE) AS ID_PARTAVE,       
         AC.ID_PRINPARTAVE,
         'CP - ' + CAST(NM_COMPAVE AS VARCHAR) AS NM_PARTAVE,
         FX_COMPAVE AS FX_PARTAVE,
         'AM' AS FL_TIPOREGIPARTAVE,
		 AC.ID_COMPAVE 
FROM  AVE_COMPONENTE AC,
     AVE_PARTE_PRINCIPAL APP 
WHERE     AC.ID_PRINPARTAVE  = APP.ID_PRINPARTAVE AND 
(SELECT COUNT(*)                                  
FROM  AVE_COMPONENTE 
WHERE     ID_PRINPARTAVE  = AC.ID_PRINPARTAVE) >1
UNION ALL
(SELECT
         999999998,
         0,
         (SELECT NM_CARCDESCPARAPARTAVE FROM AVE_PARTE_PARAMETRO_DESCRICAO),
         'S',
         'AM' AS FL_TIPOREGIPARTAVE,
		 NULL AS ID_COMPAVE 
UNION ALL
(SELECT
         999999999,
         0,
         (SELECT NM_OUTRDESCPARAPARTAVE FROM AVE_PARTE_PARAMETRO_DESCRICAO),
         'S',
         'AM' AS FL_TIPOREGIPARTAVE,
		 NULL AS ID_COMPAVE 
)))
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_ANIMAL_PESO_DISTRIBUICAO' AND TYPE = 'V')
    DROP VIEW VW_ANIMAL_PESO_DISTRIBUICAO
//    
CREATE OR ALTER VIEW VW_ANIMAL_PESO_DISTRIBUICAO AS
SELECT APD.ID_DISTPESOANIM,
       APD.NM_DISTPESOANIM,
       APD.ID_LINHTIPOAVE,
       APD.QN_VARIDISTPESOANIM,
       APD.FL_STATDISTPESOANIM,
       APD.FL_PADRREVEDISTPESOANIM,
       APD.FX_DISTPESOANIM
  FROM ANIMAL_PESO_DISTRIBUICAO APD
 WHERE COALESCE(APD.FL_STATDISTPESOANIM, 'PE') = 'OK'
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_CAMPOS_RESERVA_LENKE' AND TYPE = 'V')
    DROP VIEW VW_CAMPOS_RESERVA_LENKE
//
CREATE OR ALTER VIEW VW_CAMPOS_RESERVA_LENKE
AS 
SELECT MEF.EMPRESA,
       MEF.FILIAL,
	   MED.ID_PRODDEFIMATEEMBA AS ID_PRODMATEEMBA,
	   MED.GN_DESCETIQLINH1DEFIMATEEMBA AS RESERVA1,
	   MED.GN_DESCETIQLINH2DEFIMATEEMBA AS RESERVA2,
	   IC.NM_DESCINSTCONS + ' ' + IC.NM_DESC2INSTCONS + ' ' + IC.NM_DESC3INSTCONS AS RESERVA3,
	   MED.NM_PRODREDUDEFIMATEEMBA AS RESERVA4,
	   NULL AS RESERVA5,
       MED.ID_PRODDEFIMATEEMBA AS RESERVA6,
       MED.IE_DEFIMATEEMBA AS RESERVA7,
	   MED.GN_DESCETIQLINH3DEFIMATEEMBA AS RESERVA8,
	   MEF.NR_REGIMINIAGRIMATEEMBAFILI AS RESERVA9,
       MATGRUP.IE_GRUPMATE AS CD_DESTINO_FINAL
  FROM MATERIAL_EMBALAGEM_DEFINICAO MED
       JOIN MATERIAL MAT
         ON MED.ID_MATERIAL = MAT.ID_MATERIAL
       JOIN MATERIAL_GRUPO MATGRUP
         ON MAT.ID_CATEMATE = MATGRUP.ID_GRUPMATE  
       JOIN MATERIAL_EMBALAGEM_FILIAL MEF
	     ON MED.ID_DEFIMATEEMBA = MEF.ID_DEFIMATEEMBA
       LEFT OUTER JOIN INSTRUCAO_CONSERVACAO IC
	     ON MED.ID_INSTCONS = IC.ID_INSTCONS
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_CLIENTE' AND TYPE = 'V')
    DROP VIEW VW_CLIENTE
//
CREATE OR ALTER VIEW VW_CLIENTE 
  (EMPRESA,  
   FILIAL,  
   ID_CLIENTE,  
   IE_CLIENTE,  
   ID_INTECLIE,  
   NM_CLIENTE,  
   NM_FANTCLIE,  
   NM_REDUCLIE,  
   ID_TRATCLIE,  
   ID_GRUPCLIE,  
   ID_TIPOESTA,  
   ID_ATIVECON,  
   ID_TIPOVEND,  
   ID_REGICOME,  
   ID_REGILOGI,  
   ID_SUBRLOGI,  
   ID_REGISUBRLOGI,  
   ID_FORNECEDOR_TRANSPORTADOR,  
   ID_FORMPAGA,  
   IE_CONTCONT,  
   ID_TIPOLOGR,  
   NM_LOGRENDECLIE,  
   NR_LOGRENDECLIE,  
   GN_COMPENDECLIE,  
   ID_BAIRRO,  
   NR_CEPENDECLIE,  
   NR_CAIXPOSTENDECLIE,  
   NR_CEPCAIXPOSTENDECLIE,  
   NR_FONECLIE,  
   NR_FAXCLIE,  
   NR_FONECOMPCLIE,  
   GN_URLCLIE,  
   GN_EMAICLIE,  
   DT_NASCCLIE,  
   DT_CADACLIE,  
   DT_ALTECLIE,  
   FL_PESSCLIE,  
   FL_PRIOCLIE,  
   FL_BLOQADMICLIE,  
   FL_ATIVCLIE,  
   NR_CNPJCLIE,  
   NR_INSCESTACLIE,  
   NR_INSCPRODCLIE,  
   NR_RGCLIE,  
   GN_ORGAEXPERGCLIE,  
   NR_CPFCLIE,  
   NM_PAICLIE,  
   NM_MAECLIE,  
   QN_DIASVISICLIE,  
   QN_PONTLOGICLIE,  
   GN_MENSVENDCLIE,  
   GN_OBSECLIE,  
   QN_DIFIENTRCLIE,  
   FX_CLIENTE,  
   PC_DESCPADRCLIE,  
   PC_BONIPADRCLIE,  
   IE_CONTCONTREDU,  
   PC_DESCFINACLIE,  
   VL_SALDREPODESCCLIE,  
   FL_DESCINFOCLIE,  
   ID_TIPOLOGI,  
   FL_UNICFORMPAGACLIE,  
   NR_SUFRZONAFRANCLIE,  
   FL_EXPOCLIE,  
   NR_ORDEENTRREGILOGICLIE,  
   GN_LOJACLIE, 
   NR_SIFCLIE, 
   FILIAL_INTEGRACAO,
   PC_LIMIVALIMINICLIE,
   PC_LIMIVALIMAXICLIE,
   PC_DESCIMPOCLIE, 
   FL_DESCCOMICLIE,  
   PC_DESCCOMPCLIE,
   FL_CONVUNIDMEDICLIE, 
   ID_TABEPREC,
   ID_TABEPREC_PROMO,
   ID_TIPOPEDIVEND,
   ID_CONTA,
   ID_TIPOCOBR,
   ID_INSTCOBR,
   ID_SITUCOBR,
   ID_TIPOOPER,
   FL_STATSINCFILICLIE,
   GN_COBREMAICLIE,
   NR_DATADIFECLIE,
   FL_PRODRURACLIE,
   FL_CONTREPEEMPECLIE, 
   ID_EXTECONTEMBACLIE,
   ID_MODAETIQASNCLIE,
   ID_MODAETIQEXPECLIE,
   FL_CLASCLIE,
   NM_OPCICLIE,
   FL_CONSFINACLIE,
   NR_CNAECLIE,
   FL_SITUSEFACLIE,
   DT_COSUSEFACLIE,
   ID_CNAE,
   ID_GRUPINSP)
AS  
  (SELECT CG.EMPRESA, 
          ISNULL(CLIENTE_FILIAL.FILIAL, (SELECT FILIAL FROM EMPRESA_FILIAL_LOCAL)) FILIAL,
		  CG.ID_CLIENTE, 
		  CG.IE_CLIENTE,
		  CG.ID_INTECLIE,
		  CG.NM_CLIENTE, 
		  CG.NM_FANTCLIE,
		  CG.NM_REDUCLIE,
		  CG.ID_TRATCLIE,
		  CG.ID_GRUPCLIE,
		  CG.ID_TIPOESTA,
		  CG.ID_ATIVECON,
		  CG.ID_TIPOVEND,
		  CG.ID_REGICOME,
		  CG.ID_REGILOGI,
		  CG.ID_SUBRLOGI,
		  CG.ID_REGISUBRLOGI,
		  CG.ID_FORNECEDOR_TRANSPORTADOR, 
		  CG.ID_FORMPAGA, 
		  CG.IE_CONTCONT, 
		  CG.ID_TIPOLOGR, 
		  CG.NM_LOGRENDECLIE, 
		  CG.NR_LOGRENDECLIE, 
		  CG.GN_COMPENDECLIE, 
		  CG.ID_BAIRRO, 
		  CG.NR_CEPENDECLIE, 
		  CG.NR_CAIXPOSTENDECLIE, 
		  CG.NR_CEPCAIXPOSTENDECLIE, 
		  CG.NR_FONECLIE, 
		  CG.NR_FAXCLIE, 
		  CG.NR_FONECOMPCLIE, 
		  CG.GN_URLCLIE, 
		  CG.GN_EMAICLIE, 
		  CG.DT_NASCCLIE, 
		  CG.DT_CADACLIE, 
		  CG.DT_ALTECLIE, 
		  CG.FL_PESSCLIE, 
		  CG.FL_PRIOCLIE, 
		  CG.FL_BLOQADMICLIE, 
		  CG.FL_ATIVCLIE, 
		  CG.NR_CNPJCLIE, 
		  CG.NR_INSCESTACLIE, 
		  CG.NR_INSCPRODCLIE, 
		  CG.NR_RGCLIE, 
		  CG.GN_ORGAEXPERGCLIE, 
		  CG.NR_CPFCLIE, 
		  CG.NM_PAICLIE, 
		  CG.NM_MAECLIE, 
		  CG.QN_DIASVISICLIE, 
		  CG.QN_PONTLOGICLIE, 
		  CG.GN_MENSVENDCLIE, 
		  CG.GN_OBSECLIE, 
		  CG.QN_DIFIENTRCLIE, 
		  CG.FX_CLIENTE, 
		  CG.PC_DESCPADRCLIE, 
		  CG.PC_BONIPADRCLIE, 
		  CG.IE_CONTCONTREDU, 
		  CG.PC_DESCFINACLIE, 
		  CG.VL_SALDREPODESCCLIE, 
		  CG.FL_DESCINFOCLIE, 
		  CG.ID_TIPOLOGI, 
		  CG.FL_UNICFORMPAGACLIE, 
		  CG.NR_SUFRZONAFRANCLIE, 
		  CG.FL_EXPOCLIE, 
		  CG.NR_ORDEENTRREGILOGICLIE, 
		  CG.GN_LOJACLIE, 
		  CG.NR_SIFCLIE, 
		  CG.FILIAL_INTEGRACAO, 
		  CG.PC_LIMIVALIMINICLIE, 
		  CG.PC_LIMIVALIMAXICLIE, 
		  CG.PC_DESCIMPOCLIE, 
		  CG.FL_DESCCOMICLIE, 
		  CG.PC_DESCCOMPCLIE,
		  CG.FL_CONVUNIDMEDICLIE, 
		  CLIENTE_FILIAL.ID_TABEPREC, 
		  CLIENTE_FILIAL.ID_TABEPREC_PROMO, 
		  CLIENTE_FILIAL.ID_TIPOPEDIVEND, 
		  CLIENTE_FILIAL.ID_CONTA, 
		  CLIENTE_FILIAL.ID_TIPOCOBR, 
		  CLIENTE_FILIAL.ID_INSTCOBR, 
		  CLIENTE_FILIAL.ID_SITUCOBR,
		  CLIENTE_FILIAL.ID_TIPOOPER,
		  CLIENTE_FILIAL.FL_STATSINCFILICLIE,
		  CG.GN_COBREMAICLIE,
          CG.NR_DATADIFECLIE,
		  CG.FL_PRODRURACLIE,
          CLIENTE_FILIAL.FL_CONTREPEEMPEFILICLIE,
	      CG.ID_EXTECONTEMBAGERACLIE,
          CG.ID_MODAETIQASNCLIE,	  
	      CG.ID_MODAETIQEXPECLIE,
          CG.FL_CLASCLIE,
		  CG.NM_OPCICLIE,
		  CG.FL_CONSFINACLIE,
		  CG.NR_CNAECLIE,
		  CG.FL_SITUSEFACLIE,
		  CG.DT_COSUSEFACLIE,
	      CG.ID_CNAE,
      CG.ID_GRUPINSP
     FROM CLIENTE_GERAL CG LEFT OUTER JOIN (SELECT CLIENTE_FILIAL.FILIAL, 			 
	                                               CLIENTE_FILIAL.ID_TABEPREC, 			 
												   CLIENTE_FILIAL.ID_TABEPREC_PROMO, 			 
												   CLIENTE_FILIAL.ID_TIPOPEDIVEND, 			 
												   CLIENTE_FILIAL.ID_CONTA, 			 
												   CLIENTE_FILIAL.ID_TIPOCOBR, 			 
												   CLIENTE_FILIAL.ID_INSTCOBR, 			 
												   CLIENTE_FILIAL.ID_SITUCOBR, 			 
												   CLIENTE_FILIAL.ID_CLIENTE,
												   CLIENTE_FILIAL.ID_TIPOOPER,
												   CLIENTE_FILIAL.FL_STATSINCFILICLIE,
                           CLIENTE_FILIAL.FL_CONTREPEEMPEFILICLIE
                                              FROM CLIENTE_FILIAL  	
                                             WHERE CLIENTE_FILIAL.FILIAL = ISNULL((SELECT FILIAL
                                                                                     FROM SISTEMA_USUARIO_SESSAO
                                                                                    WHERE SERIAL# = CAST((SELECT @@SPID AS SERIAL#) AS CHAR(50))), (SELECT FILIAL FROM EMPRESA_FILIAL_LOCAL))) CLIENTE_FILIAL ON CG.ID_CLIENTE = CLIENTE_FILIAL.ID_CLIENTE)
//

 IF EXISTS ( SELECT NAME 
            FROM SYSOBJECTS  
            WHERE NAME = 'VW_COMIITEMPEDIVEND'
            AND TYPE = 'V')
	DROP VIEW VW_COMIITEMPEDIVEND
//

CREATE OR ALTER VIEW VW_COMIITEMPEDIVEND AS
SELECT ID_ITEMPEDIVEND,
       ID_PEDIVEND,
	   PC_COMIITEM,
	   VL_TOTAITEM,
       (VL_TOTAITEM - VL_TOTADEVOITEM - VL_DESCZONAFRANITEM) VL_TOTAOPER,
	
       ((VL_TOTAITEM - VL_TOTADEVOITEM - VL_DESCZONAFRANITEM - VL_DESCFINAITEM - VL_DESCMANUITEM) * PC_COMIITEM / 100) VL_FATOCALCCOMI,

	   ((VL_TOTAITEM - VL_TOTADEVOITEM - VL_DESCZONAFRANITEM - VL_DESCFINAITEM) * PC_COMIITEM / 100) VL_FATOLANCCCOMI,
	
       ((VL_TOTAITEM) * PC_COMIFIXOITEM / 100) VL_FATOCALCCOMIFIXO,
	   VL_TOTADEVOITEM,
       VL_DESCZONAFRANITEM,	
       VL_DESCFINAITEM,	
	   VL_DESCMANUITEM,
	  
       (ISNULL(ISNULL(VL_TOTAITEM,0)  -
            (ISNULL(VL_TOTADEVOITEM,0) +
             ISNULL(VL_DESCZONAFRANITEM,0) +
             ISNULL(VL_DESCFINAITEM,0) +
             ISNULL(VL_DESCMANUITEM,0)),0)) AS VL_BASEITEMCOMIITEM,
	  
       ROUND(((ISNULL(ISNULL(VL_TOTAITEM,0)  -
               (ISNULL(VL_TOTADEVOITEM,0) +
                ISNULL(VL_DESCZONAFRANITEM,0) +
                ISNULL(VL_DESCFINAITEM,0) +
                ISNULL(VL_DESCMANUITEM,0)),0)) * PC_COMIITEM / 100), 2) AS VL_COMIITEMCOMIITEM
  FROM VW_COMIITEMPEDIVEND_BASE
  //

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_COMIITEMPEDIVEND_BASE' AND TYPE = 'V')
    DROP VIEW VW_COMIITEMPEDIVEND_BASE
//
CREATE OR ALTER VIEW VW_COMIITEMPEDIVEND_BASE  AS
SELECT PVI.ID_ITEMPEDIVEND,
       PVI.ID_PEDIVEND,
	   
	   CASE((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND,0)) - (ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM,0) * ISNULL(PVI.VL_UNITITEMPEDIVEND, 0))) 
	   WHEN 0 THEN 0
	   ELSE (((((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND,0)) - (ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM,0) * ISNULL(PVI.VL_UNITITEMPEDIVEND, 0))) * ISNULL(PVI.PC_COMIITEMPEDIVEND, 0))/100) / 
			   ((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND,0)) - (ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM,0) * ISNULL(PVI.VL_UNITITEMPEDIVEND, 0)))* 100)
       END AS PC_COMIITEM,
	   
	   ISNULL(PVI.PC_COMIITEMPEDIVEND, 0) AS PC_COMIFIXOITEM,
	 
	   ROUND((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND,0)), 2) AS VL_TOTAITEM,
		 
       CASE ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM, 0) 
       WHEN 0 THEN 0 
       ELSE ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM, 0) - (ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM, 0) * ISNULL(PV.PC_DESCFINAPEDIVEND, 0) / CONVERT(FLOAT, 100)) - (
            CASE ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0) 
            WHEN 0 THEN 0 
            ELSE ISNULL((ISNULL((ISNULL(NF.VL_COFIZONAFRANNOTAFISC, 0) + ISNULL(NF.VL_PISZONAFRANNOTAFISC, 0)), 0)) * (ISNULL(VW_ITEMPEDIVEND.VL_ITEM, 0) / CONVERT(FLOAT, ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0))), 0) 
             END + ROUND(ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM, 0) * 
			             ISNULL((SELECT NOTA_FISCAL_ITEM.PC_ICMSITEMNOTAFISC
                                   FROM NOTA_FISCAL,
                                        NOTA_FISCAL_ITEM 
                                  WHERE NOTA_FISCAL.ID_NOTAFISC  = NF.ID_NOTAFISC
                                    AND NOTA_FISCAL.ID_NOTAFISC  = NOTA_FISCAL_ITEM.ID_NOTAFISC
                                    AND NOTA_FISCAL_ITEM.ID_MATEEMBA  = PVI.ID_MATEEMBA
                                    AND NOTA_FISCAL.FL_CANCNOTAFISC  = 'N'
                                    AND NOTA_FISCAL.FL_ZONAFRANNOTAFISC  = 'S'), 0) / CONVERT(FLOAT, 100),2)) 
       END AS VL_TOTADEVOITEM,
	   
      (CASE ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0) WHEN 0 THEN 0
	   ELSE ROUND(ISNULL(VW_DESCONTO_PEDIDO.VL_TOTADESCZONAFRANPEDI, 0) * (ROUND((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND,0)), 2) /
                  ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0)), 2) END) AS VL_DESCZONAFRANITEM,	
						  
      (CASE ROUND((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND, 0)), 2) WHEN 0 THEN 0 
       ELSE (ROUND((ROUND((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND, 0)), 2) - 
					      CASE ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0) WHEN 0 THEN 0 
						  ELSE ROUND(((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND, 0)) * 
						              (CASE ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0) WHEN 0 THEN 0 
									   ELSE ROUND(ISNULL(ISNULL(ISNULL(VW_DESCONTO_PEDIDO.VL_TOTADESCZONAFRANPEDI, 0) - 
									                                   ISNULL(VW_DESCONTO_PEDIDO.VL_TOTADESPPEDI, 0), 0) * 
															    (ROUND((ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND, 0)), 2) / 
																       CONVERT(FLOAT, ROUND(PVI.VL_UNITITEMPEDIVEND * PVI.QN_PESOPADREXPEITEMPEDIVEND, 2))), 0), 2) 
								       END) / CONVERT(FLOAT, ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0))), 2) 
					       END) * 
				    ISNULL((SELECT PC_DESCFINAPEDIVEND FROM  PEDIDO_VENDA WHERE	ID_PEDIVEND  = PVI.ID_PEDIVEND), 0) / CONVERT(FLOAT, 100), 2)) 
		END) VL_DESCFINAITEM,

		CASE ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0) WHEN 0 THEN 0 
		ELSE ROUND(VW_DESCONTO_PEDIDO.VL_TOTADESPPEDI * ROUND(PVI.VL_UNITITEMPEDIVEND * PVI.QN_PESOPADREXPEITEMPEDIVEND, 2) / CONVERT(FLOAT, ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0)), 2) 
		END VL_DESPITEMPEDI,
		
        CASE ISNULL(VW_ITEMPEDIVEND.VL_ITEM, 0) - ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM, 0) 
        WHEN 0 THEN 0 
        ELSE CASE ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0) 
             WHEN 0 THEN 0 
             ELSE ROUND(ISNULL(VW_DESCCOMI.VL_DESCONTO * ((ISNULL(VW_ITEMPEDIVEND.VL_ITEM, 0) - ISNULL(VW_DEVOLUCAO.VL_TOTADEVOITEM, 0)) / CONVERT(FLOAT, (ISNULL(VW_PEDIDO.VL_TOTAITEMPEDI, 0) - (ISNULL(VW_DEVOPEDI.VL_TOTADEVO, 0))))), 0),2) 
         END END AS VL_DESCMANUITEM
						 
   FROM PEDIDO_VENDA_ITEM PVI  LEFT OUTER JOIN 
        (SELECT PVI.ID_ITEMPEDIVEND,
                ROUND(SUM(CONVERT(FLOAT, CONVERT(FLOAT, (PDVI.QN_PESOITEMPEDIDEVOVEND + PDVI.QN_PESOQUEBITEMPEDIDEVOVEND) * PVI.VL_UNITITEMPEDIVEND))),2) VL_TOTADEVOITEM
           FROM PEDIDO_DEVOLUCAO_VENDA_ITEM PDVI,
                PEDIDO_DEVOLUCAO_VENDA PDV,
                PEDIDO_VENDA_ITEM PVI 
          WHERE PDV.ID_PEDIVEND  = PVI.ID_PEDIVEND
            AND	PDVI.ID_PEDIDEVOVEND  = PDV.ID_PEDIDEVOVEND
            AND	PDVI.ID_ITEMPEDIVEND  = PVI.ID_ITEMPEDIVEND
            AND	(ISNULL(PDV.FL_BLOQAJUSFINAPEDIDEVOVEND, 'N')  = 'S'
                 OR	ISNULL(PDV.FL_CONFPEDIDEVOVEND, 'S')  = 'N')
            AND	PDV.FL_STATPEDIDEVOVEND  = 'FE'
          GROUP BY  PVI.ID_ITEMPEDIVEND ) VW_DEVOLUCAO  ON  PVI.ID_ITEMPEDIVEND  = VW_DEVOLUCAO.ID_ITEMPEDIVEND ,
        
		PEDIDO_VENDA PV  LEFT OUTER JOIN 
		(SELECT PDV.ID_PEDIVEND,
                ROUND(SUM(CONVERT(FLOAT, CONVERT(FLOAT, (PDVI.QN_PESOITEMPEDIDEVOVEND + PDVI.QN_PESOQUEBITEMPEDIDEVOVEND) * PVI.VL_UNITITEMPEDIVEND))),2) VL_TOTADEVO
           FROM PEDIDO_DEVOLUCAO_VENDA_ITEM PDVI,
                PEDIDO_DEVOLUCAO_VENDA PDV,
                PEDIDO_VENDA_ITEM PVI 
          WHERE PDV.ID_PEDIVEND  = PVI.ID_PEDIVEND
            AND	PDVI.ID_PEDIDEVOVEND  = PDV.ID_PEDIDEVOVEND
            AND	PDVI.ID_ITEMPEDIVEND  = PVI.ID_ITEMPEDIVEND
            AND	(ISNULL(PDV.FL_BLOQAJUSFINAPEDIDEVOVEND, 'N')  = 'S'
                 OR	ISNULL(PDV.FL_CONFPEDIDEVOVEND, 'S')  = 'N')
            AND	PDV.FL_STATPEDIDEVOVEND  = 'FE'
          GROUP BY  PDV.ID_PEDIVEND ) VW_DEVOPEDI  ON  PV.ID_PEDIVEND  = VW_DEVOPEDI.ID_PEDIVEND   
        
		LEFT OUTER JOIN  PEDIDO_VENDA_NOTA_FISCAL PVNF  ON  PV.ID_PEDIVEND  = PVNF.ID_PEDIVEND   
		LEFT OUTER JOIN (SELECT PEDIDO_VENDA.ID_PEDIVEND,
                                (SELECT ISNULL(SUM(CONVERT(FLOAT, CONVERT(FLOAT, ISNULL(TRB.VL_DESCBAIXTITURECE, 0) - 
                                        CASE (TR.VL_TITURECE - ISNULL(VW_DESCONTO.VL_DESCCOMI, 0)) 
                                        WHEN 0 THEN 0 
                                        ELSE (ISNULL(TRB.VL_DESCBAIXTITURECE, 0) * (VW_ICMS_SUBSTITUICAO_TITULO.VL_ICMSSTTITURECE - VW_ICMS_SUBSTITUICAO_TITULO.VL_ICMSSTDEVOTITURECE) / 
										      CONVERT(FLOAT, (TR.VL_TITURECE - ISNULL(VW_DESCONTO.VL_DESCCOMI, 0)))) 
                                          END - CASE ISNULL(VW_TITULO_DESPESA.VL_BASETITU, 0) 
                                                WHEN 0 THEN 0 
                                                ELSE (TRB.VL_DESCBAIXTITURECE * (VW_TITULO_DESPESA.VL_TOTATITU - VW_TITULO_DESPESA.VL_DESPFINATITU) / CONVERT(FLOAT, VW_TITULO_DESPESA.VL_BASETITU)) 
                                                 END))), 0) VL_DESCBAIX
                                   FROM TITULO_RECEBER TR,
                                        TITULO_RECEBER_BAIXA TRB,
                                        VW_ICMS_SUBSTITUICAO_TITULO,
                                        VW_TITULO_DESPESA,
                                        SISTEMA_PARAMETRO,
                                        (SELECT TITULO_RECEBER.ID_TITURECE,
                                                (SELECT ISNULL(SUM(CONVERT(FLOAT, CONVERT(FLOAT, TRB.VL_DESCBAIXTITURECE))), 0) VL_DESCBAIX
                                                   FROM TITULO_RECEBER_BAIXA TRB 
                                                  WHERE TRB.FL_TIPOBAIXTITURECE  IS NOT NULL
                                                    AND	TRB.ID_TITURECE  = TITULO_RECEBER.ID_TITURECE)+ 
                                                (SELECT ISNULL(SUM(CONVERT(FLOAT, CONVERT(FLOAT, TRA.VL_ABATTITURECE))), 0) VL_DESCABAT
                                                   FROM TITULO_RECEBER_ABATIMENTO TRA 
                                                  WHERE	TRA.FL_TIPOABATTITURECE  IS NOT NULL
                                                    AND	TRA.ID_TITURECE  = TITULO_RECEBER.ID_TITURECE) AS VL_DESCCOMI
                                           FROM  TITULO_RECEBER ) VW_DESCONTO 
                                   WHERE TR.ID_PEDIVEND  = PEDIDO_VENDA.ID_PEDIVEND
                                     AND	TRB.ID_TITURECE  = TR.ID_TITURECE
                                     AND	VW_ICMS_SUBSTITUICAO_TITULO.ID_PEDIVEND  = TR.ID_PEDIVEND
                                     AND	VW_ICMS_SUBSTITUICAO_TITULO.NR_PARCFORMPAGA  = TR.NR_NUMEPARCTITURECE
                                     AND	VW_DESCONTO.ID_TITURECE  = TR.ID_TITURECE
                                     AND	VW_TITULO_DESPESA.ID_TITURECE  = TR.ID_TITURECE
                                     AND	SISTEMA_PARAMETRO.EMPRESA  = TR.EMPRESA
                                     AND	SISTEMA_PARAMETRO.FILIAL  = TR.FILIAL
                                     AND	TRB.FL_TIPOBAIXTITURECE  IS NULL)+ 
                                 (SELECT ISNULL(SUM(CONVERT(FLOAT, CONVERT(FLOAT, ISNULL(TRA.VL_ABATTITURECE, 0) - 
                                         CASE (TR.VL_TITURECE - ISNULL(VW_DESCONTO.VL_DESCCOMI, 0)) 
                                         WHEN 0 THEN 0 
                                         ELSE (ISNULL(TRA.VL_ABATTITURECE, 0) * (VW_ICMS_SUBSTITUICAO_TITULO.VL_ICMSSTTITURECE - VW_ICMS_SUBSTITUICAO_TITULO.VL_ICMSSTDEVOTITURECE) / 
										        CONVERT(FLOAT, (TR.VL_TITURECE - ISNULL(VW_DESCONTO.VL_DESCCOMI, 0)))) 
                                          END - 
                                         CASE ISNULL(VW_TITULO_DESPESA.VL_BASETITU, 0) 
                                         WHEN 0 THEN 0 
                                         ELSE (TRA.VL_ABATTITURECE * (VW_TITULO_DESPESA.VL_TOTATITU - VW_TITULO_DESPESA.VL_DESPFINATITU) / 
										       CONVERT(FLOAT, ISNULL(VW_TITULO_DESPESA.VL_BASETITU, 0))) 
                                           END))), 0) VL_DESCABAT
                                    FROM TITULO_RECEBER TR,
                                         TITULO_RECEBER_ABATIMENTO TRA,
                                         VW_ICMS_SUBSTITUICAO_TITULO,
                                         VW_TITULO_DESPESA,
                                         (SELECT TITULO_RECEBER.ID_TITURECE,
                                                 (SELECT ISNULL(SUM(CONVERT(FLOAT, CONVERT(FLOAT, TRB.VL_DESCBAIXTITURECE))), 0) VL_DESCBAIX
                                                    FROM TITULO_RECEBER_BAIXA TRB 
                                                   WHERE TRB.FL_TIPOBAIXTITURECE  IS NOT NULL
                                                     AND TRB.ID_TITURECE  = TITULO_RECEBER.ID_TITURECE)+ 
                                                 (SELECT ISNULL(SUM(CONVERT(FLOAT, CONVERT(FLOAT, TRA.VL_ABATTITURECE))), 0) VL_DESCABAT
                                                    FROM TITULO_RECEBER_ABATIMENTO TRA 
                                                   WHERE TRA.FL_TIPOABATTITURECE  IS NOT NULL
                                                     AND TRA.ID_TITURECE  = TITULO_RECEBER.ID_TITURECE) AS VL_DESCCOMI
                                            FROM TITULO_RECEBER ) VW_DESCONTO 
                                   WHERE TR.ID_PEDIVEND  = PEDIDO_VENDA.ID_PEDIVEND
                                     AND TRA.ID_TITURECE  = TR.ID_TITURECE
                                     AND VW_ICMS_SUBSTITUICAO_TITULO.ID_PEDIVEND  = TR.ID_PEDIVEND
                                     AND VW_ICMS_SUBSTITUICAO_TITULO.NR_PARCFORMPAGA  = TR.NR_NUMEPARCTITURECE
                                     AND VW_DESCONTO.ID_TITURECE  = TR.ID_TITURECE
                                     AND VW_TITULO_DESPESA.ID_TITURECE  = TR.ID_TITURECE
                                     AND TRA.FL_TIPOABATTITURECE  IS NULL) AS VL_DESCONTO
                           FROM PEDIDO_VENDA) VW_DESCCOMI  ON  PV.ID_PEDIVEND  = VW_DESCCOMI.ID_PEDIVEND 
		
		LEFT OUTER JOIN (SELECT PV.ID_PEDIVEND,
                                ISNULL(VL_COFIZONAFRANNOTAFISC,0) + ISNULL(VL_PISZONAFRANNOTAFISC,0) + ISNULL(VL_DESCICMSZONAFRANNOTAFISC, 0) AS VL_TOTADESCZONAFRANPEDI,
                                ISNULL(PV.VL_FRETPEDIVEND, 0) + ISNULL(PV.VL_SEGUPEDIVEND, 0) + ISNULL(PV.VL_DESPPEDIVEND, 0) AS VL_TOTADESPPEDI
                           FROM NOTA_FISCAL,
                                PEDIDO_VENDA_NOTA_FISCAL PVNF,
                                PEDIDO_VENDA PV
                          WHERE PVNF.ID_PEDIVEND = PV.ID_PEDIVEND
                            AND NOTA_FISCAL.ID_NOTAFISC = PVNF.ID_NOTAFISC
                            AND NOTA_FISCAL.FL_CANCNOTAFISC = 'N'
	                        AND NOTA_FISCAL.FL_ZONAFRANNOTAFISC = 'S') VW_DESCONTO_PEDIDO ON PV.ID_PEDIVEND = VW_DESCONTO_PEDIDO.ID_PEDIVEND
		
		LEFT OUTER JOIN  NOTA_FISCAL NF ON PVNF.ID_NOTAFISC = NF.ID_NOTAFISC,
        (SELECT PVI.ID_PEDIVEND,
                ROUND(ISNULL(SUM(CONVERT(FLOAT, PVI.VL_UNITITEMPEDIVEND * PVI.QN_PESOPADREXPEITEMPEDIVEND)), 0),2) VL_TOTAITEMPEDI
           FROM PEDIDO_VENDA_ITEM PVI 
         GROUP BY PVI.ID_PEDIVEND ) VW_PEDIDO,
		 
        (SELECT ROUND(ISNULL(PVI.VL_UNITITEMPEDIVEND, 0) * ISNULL(PVI.QN_PESOPADREXPEITEMPEDIVEND, 0), 2) VL_ITEM,
                PVI.ID_ITEMPEDIVEND
           FROM PEDIDO_VENDA_ITEM PVI ) VW_ITEMPEDIVEND 
          WHERE	VW_PEDIDO.ID_PEDIVEND  = PV.ID_PEDIVEND
            AND	PVI.ID_PEDIVEND  = PV.ID_PEDIVEND
            AND	ISNULL(NF.FL_CANCNOTAFISC, 'N')  = 'N'
            AND	VW_ITEMPEDIVEND.ID_ITEMPEDIVEND  = PVI.ID_ITEMPEDIVEND
//

 IF EXISTS ( SELECT NAME 
            FROM SYSOBJECTS  
            WHERE NAME = 'VW_COMIPEDIVEND'
            AND TYPE = 'V')
	DROP VIEW VW_COMIPEDIVEND
//
	
CREATE OR ALTER VIEW VW_COMIPEDIVEND AS
SELECT VW_COMIITEMPEDIVEND.ID_PEDIVEND,
       
	   ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAITEM)), 0) VL_TOTAITEM,
		 
       CASE ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAOPER - VW_COMIITEMPEDIVEND.VL_DESCFINAITEM - VW_COMIITEMPEDIVEND.VL_DESCMANUITEM)), 0) 
       WHEN 0 THEN 0 
       ELSE (ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_FATOCALCCOMI)), 0) / CONVERT(FLOAT, ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAOPER - VW_COMIITEMPEDIVEND.VL_DESCFINAITEM - VW_COMIITEMPEDIVEND.VL_DESCMANUITEM)), 0)) * 100) 
       END AS PC_MEDICOMI,
		 
       CASE ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAITEM)), 0) 
       WHEN 0 THEN 0 
       ELSE (ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_FATOCALCCOMIFIXO)), 0) / CONVERT(FLOAT, ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAITEM)), 0)) * 100) 
       END AS PC_MEDICOMIFIXO,
		
       CASE ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAOPER - VW_COMIITEMPEDIVEND.VL_DESCFINAITEM)), 0) 
       WHEN 0 THEN 0 
       ELSE (ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_FATOLANCCCOMI)), 0) / CONVERT(FLOAT, ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAOPER - VW_COMIITEMPEDIVEND.VL_DESCFINAITEM)), 0)) * 100) 
       END AS PC_LANCCOMI,
	   
       ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTAOPER)), 0) VL_TOTAOPER,
	   
       ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_FATOCALCCOMI)), 0) VL_FATOCALCCOMI,
	   
       ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_TOTADEVOITEM)), 0) AS VL_TOTADEVO,
	   
       ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_DESCZONAFRANITEM)), 0) AS VL_DESCZONAFRAN,
	   
       ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_DESCFINAITEM)), 0) AS VL_DESCFINA,
	   
       ISNULL(SUM(CONVERT(FLOAT, VW_COMIITEMPEDIVEND.VL_DESCMANUITEM)), 0) AS VL_DESCMANU,
	   
       ISNULL(SUM(CONVERT(FLOAT, ISNULL(VW_COMIITEMPEDIVEND.VL_BASEITEMCOMIITEM, 0))), 0) AS VL_BASECOMI,
	   
       ISNULL(SUM(CONVERT(FLOAT, ISNULL(VW_COMIITEMPEDIVEND.VL_COMIITEMCOMIITEM, 0))), 0) AS VL_TOTACOMI
	   
  FROM VW_COMIITEMPEDIVEND 
 GROUP BY VW_COMIITEMPEDIVEND.ID_PEDIVEND 
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_CONSULTA_PESAGENS' AND TYPE = 'V')
    DROP VIEW VW_CONSULTA_PESAGENS
//
CREATE OR ALTER VIEW VW_CONSULTA_PESAGENS                
 (FL_TIPOREGIPESA,
       ID_CHAVEREGIPESA,
       FL_STATREGIPESA,
       QN_TEMPPERMREGIPESA,
       ID_TRANSPORTADOR,
       NM_TRANSPORTADOR,
       ID_MOTOTRAN,
       NM_MOTOTRAN,
       ID_FORNECEDOR,
       NM_FORNECEDOR,
       GN_PLACREGIPESA,
       ID_MATERIAL,
       NM_MATERIAL,
       GN_OBSEREGIPESA,
       DT_DATAPRIMREGIPESA,
       DT_HORAPRIMREGIPESA,
       FL_PRIMMANUREGIPESA,
       QN_PESOPRIMREGIPESA,       
       DT_DATASEGUREGIPESA,
       DT_HORASEGUREGIPESA,       
       FL_SEGUMANUREGIPESA,
       QN_PESOSEGUREGIPESA,
       DT_DATATERCREGIPESA,
       DT_HORATERCREGIPESA,
       FL_TERCMANUREGIPESA,
       QN_PESOTERCREGIPESA,
       DT_DATAQUARREGIPESA,
       DT_HORAQUARREGIPESA,
       FL_QUAMANUREGIPESA,
       QN_PESOQUAREGIPESA,
	   DT_ENTRPESA,
	   EMPRESA,
	   FILIAL,         
	   NM_MOTOTRAN_FECH) AS
SELECT 'AV' FL_TIPOREGIPESA,
       EAV.ID_ENTRAVEVIVA ID_CHAVEREGIPESA,
       CASE WHEN EAV.FL_STATENTRAVEVIVA = 'FE' 
	          THEN 'FE'
		       	ELSE 'AB'
			       END FL_STATREGIPESA,
       CASE WHEN EAV.FL_STATENTRAVEVIVA = 'FE' AND EAVQP.DT_PESOTARAENTRAVEVIVAQUARPESA IS NOT NULL
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, EAVQP.DT_PESOTARAENTRAVEVIVAQUARPESA, EAV.DT_SAIDCAMIENTRAVEVIVA)/60/60),2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, EAVQP.DT_PESOTARAENTRAVEVIVAQUARPESA, EAV.DT_SAIDCAMIENTRAVEVIVA)/60%60), 2)
  
            WHEN EAV.FL_STATENTRAVEVIVA = 'FE' AND EAVQP.DT_PESOTARAENTRAVEVIVAQUARPESA IS NULL
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, EAV.DT_ENTRCAMIENTRAVEVIVA, EAV.DT_SAIDCAMIENTRAVEVIVA)/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, EAV.DT_ENTRCAMIENTRAVEVIVA, EAV.DT_SAIDCAMIENTRAVEVIVA)/60%60), 2)
            
            WHEN EAV.DT_PESOPENDENTRAVEVIVA IS NOT NULL
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, EAV.DT_PESOPENDENTRAVEVIVA, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, EAV.DT_PESOPENDENTRAVEVIVA, GETDATE())/60%60), 2)
            
            ELSE RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, EAV.DT_ENTRCAMIENTRAVEVIVA, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, EAV.DT_ENTRCAMIENTRAVEVIVA, GETDATE())/60%60), 2)
        END QN_TEMPPERMREGIPESA,
       COALESCE(Transportador.ID_FORNECEDOR, 0) ID_TRANSPORTADOR,
       Transportador.NM_FORNECEDOR NM_TRANSPORTADOR,
       COALESCE(Transportador_motorista.ID_MOTOTRAN, 0) ID_MOTOTRAN,
       Transportador_motorista.NM_MOTOTRAN,
       COALESCE(Fornecedor.ID_FORNECEDOR, 0) ID_FORNECEDOR,
       Fornecedor.NM_FORNECEDOR,
       EAV.GN_PLACCAMIENTRAVEVIVA GN_PLACREGIPESA,
       COALESCE(EAV.ID_MATERIAL, 0) ID_MATERIAL,
       M.NM_MATERIAL,
       EAV.GN_OBSEENTRAVEVIVA GN_OBSEREGIPESA,
       CASE WHEN SISTEMA_PARAMETRO.GN_PESOPRIMPESAPARASIST = 'BT' 
	          THEN CONVERT(DATETIME, CONVERT(VARCHAR, EAV.DT_ENTRCAMIENTRAVEVIVA,112)) 
			  ELSE CONVERT(DATETIME, CONVERT(VARCHAR, EAVQP.DT_PESOTARAENTRAVEVIVAQUARPESA,112)) 
       END DT_DATAPRIMREGIPESA,
       CASE WHEN SISTEMA_PARAMETRO.GN_PESOPRIMPESAPARASIST = 'BT' 
	          THEN CONVERT(VARCHAR(23), EAV.DT_ENTRCAMIENTRAVEVIVA, 108)
			  ELSE CONVERT(VARCHAR(23), EAVQP.DT_PESOTARAENTRAVEVIVAQUARPESA, 108)
       END DT_HORAPRIMREGIPESA,
       EAVQP.FL_PESAMANUENTRAVEVIVAQUARPESA FL_PRIMMANUREGIPESA,
       EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA QN_PESOPRIMREGIPESA,       
       CONVERT(DATETIME, CONVERT(VARCHAR, EAV.DT_ENTRCAMIENTRAVEVIVA,112)) DT_DATASEGUREGIPESA,
       CONVERT(VARCHAR(23), EAV.DT_ENTRCAMIENTRAVEVIVA, 108) DT_HORASEGUREGIPESA,       
       EAV.FL_PRIMPESAMANUENTRAVEVIVA FL_SEGUMANUREGIPESA,
       EAV.QN_PESOBRUTENTRAVEVIVA QN_PESOSEGUREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, EAV.DT_PESOPENDENTRAVEVIVA,112)) DT_DATATERCREGIPESA,
       CONVERT(VARCHAR(23), EAV.DT_PESOPENDENTRAVEVIVA, 108) DT_HORATERCREGIPESA,              
       EAV.FL_PESOPENDMANUENTRAVEVIVA FL_TERCMANUREGIPESA,
       EAV.QN_PESOPENDENTRAVEVIVA QN_PESOTERCREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, EAV.DT_SAIDCAMIENTRAVEVIVA,112)) DT_DATAQUARREGIPESA,
       CONVERT(VARCHAR(23), EAV.DT_SAIDCAMIENTRAVEVIVA, 108) DT_HORAQUARREGIPESA,              
       EAV.FL_SEGUPESAMANUENTRAVEVIVA FL_QUAMANUREGIPESA,
       EAV.QN_PESOTARAENTRAVEVIVA QN_PESOQUAREGIPESA,
	   CONVERT(DATETIME, CONVERT(VARCHAR, EAVQP.DT_PESOTARAENTRAVEVIVAQUARPESA,112)) AS DT_ENTRPESA,
       EAV.EMPRESA,
	   EAV.FILIAL,         
	   Transportador_motorista_fech.NM_MOTOTRAN NM_MOTOTRAN_FECH       
  FROM ENTRADA_AVE_VIVA EAV
  LEFT JOIN ENTRADA_AVE_VIVA_QUARTA_PESA EAVQP 
    ON EAV.ID_ENTRAVEVIVA = EAVQP.ID_ENTRAVEVIVA
  JOIN TRANSPORTADOR_VEICULO Transportador_veiculo
    ON EAV.ID_VEICTRAN = Transportador_veiculo.ID_VEICTRAN
  JOIN FORNECEDOR Transportador
       ON Transportador_veiculo.ID_FORNECEDOR_TRANSPORTADOR = Transportador.ID_FORNECEDOR
  JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_motorista_Transp
    ON Transportador_motorista_Transp.ID_TRANMOTOTRAN = EAV.ID_TRANMOTOTRAN
  JOIN TRANSPORTADOR_MOTORISTA Transportador_motorista
    ON Transportador_Motorista_Transp.ID_MOTOTRAN = Transportador_motorista.ID_MOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_Motorista_Tr_Fe 
         ON EAV.ID_FECHTRANMOTOTRAN = Transportador_Motorista_Tr_Fe.ID_TRANMOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA Transportador_motorista_fech 
         ON Transportador_Motorista_Tr_Fe.ID_MOTOTRAN = Transportador_motorista_fech.ID_MOTOTRAN
  JOIN FORNECEDOR
    ON EAV.ID_FORNECEDOR = Fornecedor.ID_FORNECEDOR
  LEFT JOIN MATERIAL M 
    ON EAV.ID_MATERIAL = M.ID_MATERIAL
  LEFT JOIN SISTEMA_PARAMETRO
    ON SISTEMA_PARAMETRO.EMPRESA = EAV.EMPRESA
   AND SISTEMA_PARAMETRO.FILIAL = EAV.FILIAL
 WHERE EAV.FL_STATENTRAVEVIVA <> 'EX'

UNION 

SELECT 'PS' FL_TIPOREGIPESA,
       PRS.ID_REGIPESASAID ID_CHAVEREGIPESA,
       CASE WHEN PRS.FL_STATREGIPESASAID = 'F'
	          THEN 'FE'
		      	ELSE 'AB'
			       END FL_STATREGIPESA,
       CASE WHEN PRS.FL_STATREGIPESASAID = 'E' 
            THEN ''
            
            WHEN PRS.FL_STATREGIPESASAID = 'S' 
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRS.DT_TARAINICREGIPESASAID, PRS.DT_LIBECAMIREGIPESASAID)/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRS.DT_TARAINICREGIPESASAID, PRS.DT_LIBECAMIREGIPESASAID)/60%60), 2)

            WHEN PRS.DT_SAIDCAMIREGIPESASAID IS NOT NULL
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRS.DT_SAIDCAMIREGIPESASAID, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRS.DT_SAIDCAMIREGIPESASAID, GETDATE())/60%60), 2)
            
            WHEN PRS.DT_ENTRCAMIREGIPESASAID IS NOT NULL
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRS.DT_ENTRCAMIREGIPESASAID, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRS.DT_ENTRCAMIREGIPESASAID, GETDATE())/60%60), 2)
            
            ELSE RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRS.DT_TARAINICREGIPESASAID, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRS.DT_TARAINICREGIPESASAID, GETDATE())/60%60), 2)
        END QN_TEMPPERMREGIPESA,
       COALESCE(Fornecedor.ID_FORNECEDOR, 0) ID_TRANSPORTADOR,
       Fornecedor.NM_FORNECEDOR NM_TRANSPORTADOR,
       COALESCE(Transportador_Motorista.ID_MOTOTRAN, 0) ID_MOTOTRAN,
       Transportador_Motorista.NM_MOTOTRAN,
       0 ID_FORNECEDOR,
       '' NM_FORNECEDOR,
       PRS.GN_PLACCAMIREGIPESASAID GN_PLACREGIPESA,
       0 ID_MATERIAL,
       '' NM_MATERIAL,
       PRS.GN_OBSEREGIPESASAID GN_OBSEREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRS.DT_TARAINICREGIPESASAID,112)) DT_DATAPRIMREGIPESA,
       CONVERT(VARCHAR(23), PRS.DT_TARAINICREGIPESASAID, 108) DT_HORAPRIMREGIPESA,       
       PRS.FL_TARAINICMANUREGIPESASAID FL_PRIMMANUREGIPESA,
       PRS.QN_TARAINICREGIPESASAID QN_PESOPRIMREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRS.DT_ENTRCAMIREGIPESASAID,112)) DT_DATASEGUREGIPESA,
       CONVERT(VARCHAR(23), PRS.DT_ENTRCAMIREGIPESASAID, 108) DT_HORASEGUREGIPESA,       
       PRS.FL_PRIMPESAMANUREGIPESASAID FL_SEGUMANUREGIPESA,
       PRS.QN_PESOTARAREGIPESASAID QN_PESOSEGUREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRS.DT_SAIDCAMIREGIPESASAID,112)) DT_DATATERCREGIPESA,
       CONVERT(VARCHAR(23), PRS.DT_SAIDCAMIREGIPESASAID, 108) DT_HORATERCREGIPESA,       
       PRS.FL_SEGUPESAMANUREGIPESASAID FL_TERCMANUREGIPESA,
       PRS.QN_PESOBRUTREGIPESASAID QN_PESOTERCREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRS.DT_LIBECAMIREGIPESASAID,112)) DT_DATAQUAREGIPESA,
       CONVERT(VARCHAR(23), PRS.DT_LIBECAMIREGIPESASAID, 108) DT_HORAQUARREGIPESA,       
       PRS.FL_TERCPESAMANUREGIPESASAID FL_QUAMANUREGIPESA,
       PRS.QN_PESOSAIDREGIPESASAID QN_PESOQUAREGIPESA,
	   CONVERT(DATETIME, CONVERT(VARCHAR, PRS.DT_TARAINICREGIPESASAID,112)) AS DT_ENTRPESA,
       PRS.EMPRESA,
	   PRS.FILIAL,         
	   Transportador_motorista_fech.NM_MOTOTRAN NM_MOTOTRAN_FECH       
  FROM PESAGEM_REGISTRO_SAIDA  PRS
  LEFT JOIN TRANSPORTADOR_VEICULO Transportador_Veiculo
    ON PRS.ID_VEICTRAN  = Transportador_Veiculo.ID_VEICTRAN
  LEFT JOIN FORNECEDOR Fornecedor
    ON Transportador_Veiculo.ID_FORNECEDOR_TRANSPORTADOR  = Fornecedor.ID_FORNECEDOR
  LEFT JOIN EXPEDICAO_CARGA Expedicao_Carga
    ON PRS.ID_CARGEXPE = Expedicao_Carga.ID_CARGEXPE
  LEFT JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_Motorista_Transp  
    ON CASE WHEN PRS.ID_CARGEXPE IS NULL
            THEN PRS.ID_TRANMOTOTRAN
            ELSE Expedicao_Carga.ID_TRANMOTOTRAN  
        END = Transportador_Motorista_Transp.ID_TRANMOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA Transportador_Motorista
    ON Transportador_Motorista_Transp.ID_MOTOTRAN = Transportador_Motorista.ID_MOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_Motorista_Tr_Fe 
         ON PRS.ID_FECHTRANMOTOTRAN = Transportador_Motorista_Tr_Fe.ID_TRANMOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA Transportador_motorista_fech 
         ON Transportador_Motorista_Tr_Fe.ID_MOTOTRAN = Transportador_motorista_fech.ID_MOTOTRAN
 WHERE PRS.FL_STATREGIPESASAID <> 'E'

UNION 

SELECT 'PA' FL_TIPOREGIPESA,
       PT.ID_TICKPESA ID_CHAVEREGIPESA,
       CASE WHEN PT.FL_STATTICKPESA = 'FE'
	          THEN 'FE'
            WHEN PT.FL_STATTICKPESA = 'IM'
	          THEN 'IM'
		      	ELSE 'AB'
		      	 END FL_STATREGIPESA,
       CASE WHEN PT.FL_STATTICKPESA = 'FE' 
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, PT.DT_SEGUPESATICKPESA)/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, PT.DT_SEGUPESATICKPESA)/60%60), 2)

            ELSE RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, GETDATE())/60%60), 2)
            
        END QN_TEMPPERMREGIPESA,
       COALESCE(PT.ID_FORNECEDOR_TRANSPORTADOR, 0) ID_TRANSPORTADOR,
       PT.NM_TRANTICKPESA NM_TRANSPORTADOR,
       COALESCE(PT.ID_MOTOTRAN, 0) ID_MOTOTRAN,
       PT.NM_MOTOTICKPESA NM_MOTOTRAN,
       COALESCE(PT.ID_FORNECEDOR, 0) ID_FORNECEDOR,
       PT.NM_EMISTICKPESA NM_FORNECEDOR,
       PT.GN_PLACVEICTICKPESA GN_PLACREGIPESA,
       COALESCE(PT.ID_MATERIAL, 0) ID_MATERIAL,
       M.NM_MATERIAL,
       PT.GN_OBSETICKPESA GN_OBSEREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PT.DT_PRIMPESATICKPESA,112)) DT_DATAPRIMREGIPESA,
       CONVERT(VARCHAR(23), PT.DT_PRIMPESATICKPESA, 108) DT_HORAPRIMREGIPESA,       
       PT.FL_PRIMPESAMANUTICKPESA FL_PRIMANUREGIPESA,
       PT.QN_PRIMPESATICKPESA QN_PESOPRIMREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PT.DT_SEGUPESATICKPESA,112)) DT_DATASEGUREGIPESA,
       CONVERT(VARCHAR(23), PT.DT_SEGUPESATICKPESA, 108) DT_HORASEGUREGIPESA,
       PT.FL_SEGUPESAMANUTICKPESA FL_SEGUANUREGIPESA,
       PT.QN_SEGUPESATICKPESA QN_PESOSEGUREGIPESA,
       '' DT_DATATERCREGIPESA,
       '' DT_HORATERCREGIPESA,
       '' FL_TERCANUREGIPESA,
       0  QN_PESOTERCREGIPESA,
       '' DT_DATAQUAREGIPESA,
       '' DT_HORAQUARREGIPESA,
       '' FL_QUAMANUREGIPESA,
       0  QN_PESOQUAREGIPESA,
	   CONVERT(DATETIME, CONVERT(VARCHAR, PT.DT_PRIMPESATICKPESA,112)) AS DT_ENTRPESA,
       PT.EMPRESA,
	   PT.FILIAL,
	   PT.NM_MOTOFECHTICKPESA NM_MOTOTRAN_FECH       
  FROM PESAGEM_TICKET PT
  LEFT JOIN MATERIAL M 
    ON PT.ID_MATERIAL = M.ID_MATERIAL
 WHERE PT.FL_TIPOPESA = 'PA'
   AND PT.FL_STATTICKPESA <> 'EX'

UNION

SELECT 'PD' FL_TIPOREGIPESA,
       PT.ID_TICKPESA ID_CHAVEREGIPESA,
       CASE WHEN PT.FL_STATTICKPESA = 'FE'
	          THEN 'FE'
            WHEN PT.FL_STATTICKPESA = 'IM'
	          THEN 'IM'
			      ELSE 'AB'
			       END FL_STATREGIPESA,
       CASE WHEN PT.FL_STATTICKPESA = 'FE' 
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, PT.DT_SEGUPESATICKPESA)/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, PT.DT_SEGUPESATICKPESA)/60%60), 2)

            ELSE RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PT.DT_PRIMPESATICKPESA, GETDATE())/60%60), 2)
            
        END QN_TEMPPERMREGIPESA,
       COALESCE(PT.ID_FORNECEDOR_TRANSPORTADOR, 0) ID_TRANSPORTADOR,
       PT.NM_TRANTICKPESA NM_TRANSPORTADOR,
       COALESCE(PT.ID_MOTOTRAN, 0) ID_MOTOTRAN,
       PT.NM_MOTOTICKPESA NM_MOTOTRAN,
       COALESCE(PT.ID_FORNECEDOR, 0) ID_FORNECEDOR,
       PT.NM_EMISTICKPESA NM_FORNECEDOR,
       PT.GN_PLACVEICTICKPESA GN_PLACREGIPESA,
       COALESCE(PT.ID_MATERIAL, 0) ID_MATERIAL,
       M.NM_MATERIAL,
       PT.GN_OBSETICKPESA GN_OBSEREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PT.DT_PRIMPESATICKPESA,112)) DT_DATAPRIMREGIPESA,
       CONVERT(VARCHAR(23), PT.DT_PRIMPESATICKPESA, 108) DT_HORAPRIMREGIPESA,       
       PT.FL_PRIMPESAMANUTICKPESA FL_PRIMANUREGIPESA,
       PT.QN_PRIMPESATICKPESA QN_PESOPRIMREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PT.DT_SEGUPESATICKPESA,112)) DT_DATASEGUREGIPESA,
       CONVERT(VARCHAR(23), PT.DT_SEGUPESATICKPESA, 108) DT_HORASEGUREGIPESA,
       PT.FL_SEGUPESAMANUTICKPESA FL_SEGUANUREGIPESA,
       PT.QN_SEGUPESATICKPESA QN_PESOSEGUREGIPESA,
       '' DT_DATATERCREGIPESA,
       '' DT_HORATERCREGIPESA,
       '' FL_TERCANUREGIPESA,
       0  QN_PESOTERCREGIPESA,
       '' DT_DATAQUAREGIPESA,
       '' DT_HORAQUARREGIPESA,
       '' FL_QUAMANUREGIPESA,
       0  QN_PESOQUAREGIPESA,
	   CONVERT(DATETIME, CONVERT(VARCHAR, PT.DT_PRIMPESATICKPESA,112)) AS DT_ENTRPESA,
       PT.EMPRESA,
	   PT.FILIAL,
	   PT.NM_MOTOFECHTICKPESA NM_MOTOTRAN_FECH       
  FROM PESAGEM_TICKET PT
  LEFT JOIN MATERIAL M 
    ON PT.ID_MATERIAL = M.ID_MATERIAL
 WHERE PT.FL_TIPOPESA = 'PD'
   AND PT.FL_STATTICKPESA <> 'EX'

UNION 

SELECT 'PE' FL_TIPOREGIPESA,
       PRE.ID_DEVOCARGEXPE ID_CHAVEREGIPESA,
       CASE WHEN PRE.FL_STATREGIPESAENTR = 'F'
	          THEN 'FE'
			      ELSE 'AB'
			       END FL_STATREGIPESA,
       CASE WHEN PRE.FL_STATREGIPESAENTR = 'F' 
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRE.DT_ENTRCAMIREGIPESAENTR, PRE.DT_SAIDCAMIREGIPESAENTR)/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRE.DT_ENTRCAMIREGIPESAENTR, PRE.DT_SAIDCAMIREGIPESAENTR)/60%60), 2)
            
            ELSE RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRE.DT_ENTRCAMIREGIPESAENTR, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRE.DT_ENTRCAMIREGIPESAENTR, GETDATE())/60%60), 2)
            
        END QN_TEMPPERMREGIPESA,
       COALESCE(Fornecedor.ID_FORNECEDOR, 0) ID_TRANSPORTADOR,
       Fornecedor.NM_FORNECEDOR NM_TRANSPORTADOR,
       COALESCE(Transportador_Motorista.ID_MOTOTRAN, 0) ID_MOTOTRAN,
       Transportador_Motorista.NM_MOTOTRAN,
       0 ID_FORNECEDOR,
       '' NM_FORNECEDOR,
       PRE.GN_PLACCAMIREGIPESAENTR GN_PLACREGIPESA,
       0 ID_MATERIAL,
       '' NM_MATERIAL,
       PRE.GN_OBSEREGIPESAENTR GN_OBSEREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRE.DT_ENTRCAMIREGIPESAENTR,112)) DT_DATAPRIMREGIPESA,
       CONVERT(VARCHAR(23), PRE.DT_ENTRCAMIREGIPESAENTR, 108) DT_HORAPRIMREGIPESA,              
       PRE.FL_PRIMPESAMANUREGIPESAENTR FL_PRIMANUREGIPESA,
       PRE.QN_PESOBRUTREGIPESAENTR QN_PESOPRIMREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRE.DT_SAIDCAMIREGIPESAENTR,112)) DT_DATASEGUREGIPESA,
       CONVERT(VARCHAR(23), PRE.DT_SAIDCAMIREGIPESAENTR, 108) DT_HORASEGUREGIPESA,       
       PRE.FL_SEGUPESAMANUREGIPESAENTR FL_SEGUMANUREGIPESA,
       PRE.QN_PESOTARAREGIPESAENTR QN_PESOSEGUMREGIPESA,
       '' DT_DATATERCREGIPESA,
       '' DT_HORATERCREGIPESA,
       '' FL_TERCANUREGIPESA,
       0  QN_PESOTERCREGIPESA,
       '' DT_DATAQUAREGIPESA,
       '' DT_HORAQUARREGIPESA,
       '' FL_QUAMANUREGIPESA,
       0  QN_PESOQUAREGIPESA,
	   CONVERT(DATETIME, CONVERT(VARCHAR, PRE.DT_ENTRCAMIREGIPESAENTR,112)) AS DT_ENTRPESA,
       PRE.EMPRESA,
	   PRE.FILIAL,         
	   Transportador_motorista_fech.NM_MOTOTRAN NM_MOTOTRAN_FECH		 
  FROM PESAGEM_REGISTRO_ENTRADA PRE
  LEFT JOIN TRANSPORTADOR_VEICULO Transportador_Veiculo 
    ON PRE.ID_VEICTRAN = Transportador_Veiculo.ID_VEICTRAN
  LEFT JOIN FORNECEDOR Fornecedor 
    ON Transportador_Veiculo.ID_FORNECEDOR_TRANSPORTADOR = Fornecedor.ID_FORNECEDOR
  LEFT JOIN EXPEDICAO_CARGA_DEVOLUCAO Expedicao_carga_devolucao 
    ON PRE.ID_DEVOCARGEXPE = Expedicao_carga_devolucao.ID_DEVOCARGEXPE
  LEFT JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_Motorista_Transp 
    ON Expedicao_carga_devolucao.ID_TRANMOTOTRAN = Transportador_Motorista_Transp.ID_TRANMOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA Transportador_Motorista 
    ON Transportador_Motorista_Transp.ID_MOTOTRAN = Transportador_Motorista.ID_MOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_Motorista_Tr_Fe 
         ON PRE.ID_FECHTRANMOTOTRAN = Transportador_Motorista_Tr_Fe.ID_TRANMOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA Transportador_motorista_fech 
         ON Transportador_Motorista_Tr_Fe.ID_MOTOTRAN = Transportador_motorista_fech.ID_MOTOTRAN
 WHERE PRE.FL_STATREGIPESAENTR <> 'E'

UNION

SELECT 'PT' FL_TIPOREGIPESA,
       PRT.ID_REGIPESATRAN ID_CHAVEREGIPESA,
       CASE WHEN PRT.FL_STATREGIPESATRAN = 'F'
	          THEN 'FE'
		      	ELSE 'AB'
			       END FL_STATREGIPESA,
       CASE WHEN PRT.FL_STATREGIPESATRAN = 'F' 
            THEN RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRT.DT_ENTRCAMIREGIPESATRAN, PRT.DT_SAIDCAMIREGIPESATRAN)/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRT.DT_ENTRCAMIREGIPESATRAN, PRT.DT_SAIDCAMIREGIPESATRAN)/60%60), 2)

            ELSE RIGHT('0' + CONVERT(VARCHAR(5), DATEDIFF(SECOND, PRT.DT_ENTRCAMIREGIPESATRAN, GETDATE())/60/60), 2)
            + ':' + RIGHT('0' + CONVERT(VARCHAR(2), DATEDIFF(SECOND, PRT.DT_ENTRCAMIREGIPESATRAN, GETDATE())/60%60), 2)
            
        END QN_TEMPPERMREGIPESA,
       COALESCE(Fornecedor.ID_FORNECEDOR, 0) ID_TRANSPORTADOR,
       Fornecedor.NM_FORNECEDOR NM_TRANSPORTADOR,
       COALESCE(Transportador_Motorista.ID_MOTOTRAN, 0) ID_MOTOTRAN,
       Transportador_Motorista.NM_MOTOTRAN,
       0 ID_FORNECEDOR,
       '' NM_FORNECEDOR,
       PRT.GN_PLACCAMIREGIPESATRAN GN_PLACREGIPESA,
       0 ID_MATERIAL,
       '' NM_MATERIAL,
       PRT.GN_OBSEREGIPESATRAN GN_OBSEREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRT.DT_ENTRCAMIREGIPESATRAN,112)) DT_DATAPRIMREGIPESA,
       CONVERT(VARCHAR(23), PRT.DT_ENTRCAMIREGIPESATRAN, 108) DT_HORAPRIMREGIPESA,       
       PRT.FL_PRIMPESAMANUREGIPESATRAN FL_PRIMANUREGIPESA,
       PRT.QN_PESOBRUTREGIPESATRAN QN_PESOPRIMREGIPESA,
       CONVERT(DATETIME, CONVERT(VARCHAR, PRT.DT_SAIDCAMIREGIPESATRAN,112)) DT_DATASEGUREGIPESA,
       CONVERT(VARCHAR(23), PRT.DT_SAIDCAMIREGIPESATRAN, 108) DT_HORASEGUREGIPESA,       
       PRT.FL_SEGUPESAMANUREGIPESATRAN FL_SEGUANUREGIPESA,
       PRT.QN_PESOTARAREGIPESATRAN QN_PESOSEGUREGIPESA,
       '' DT_DATATERCREGIPESA,
       '' DT_HORATERCREGIPESA,
       '' FL_TERCANUREGIPESA,
       0  QN_PESOTERCREGIPESA,
       '' DT_DATAQUAREGIPESA,
       '' DT_HORAQUARREGIPESA,
       '' FL_QUAMANUREGIPESA,
       0  QN_PESOQUAREGIPESA,
	   CONVERT(DATETIME, CONVERT(VARCHAR, PRT.DT_ENTRCAMIREGIPESATRAN,112)) AS DT_ENTRPESA,
       PRT.EMPRESA,
	   PRT.FILIAL,         
	   Transportador_motorista_fech.NM_MOTOTRAN NM_MOTOTRAN_FECH       
  FROM PESAGEM_REGISTRO_TRANSFER PRT
  LEFT JOIN TRANSPORTADOR_VEICULO Transportador_Veiculo 
    ON PRT.ID_VEICTRAN = Transportador_Veiculo.ID_VEICTRAN
  LEFT JOIN FORNECEDOR Fornecedor 
    ON Transportador_Veiculo.ID_FORNECEDOR_TRANSPORTADOR = Fornecedor.ID_FORNECEDOR 
  LEFT JOIN PRODUCAO_REGISTRO_TRANSFER Producao_registro_transfer 
    ON  PRT.ID_TRANREGIPROD  = Producao_registro_transfer.ID_TRANREGIPROD
  LEFT JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_Motorista_Transp 
    ON Producao_registro_transfer.ID_TRANMOTOTRAN = Transportador_Motorista_Transp.ID_TRANMOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA Transportador_Motorista 
    ON Transportador_Motorista_Transp.ID_MOTOTRAN = Transportador_Motorista.ID_MOTOTRAN
   LEFT JOIN TRANSPORTADOR_MOTORISTA_TRANSP Transportador_Motorista_Tr_Fe 
         ON PRT.ID_FECHTRANMOTOTRAN = Transportador_Motorista_Tr_Fe.ID_TRANMOTOTRAN
  LEFT JOIN TRANSPORTADOR_MOTORISTA Transportador_motorista_fech 
         ON Transportador_Motorista_Tr_Fe.ID_MOTOTRAN = Transportador_motorista_fech.ID_MOTOTRAN
WHERE PRT.FL_STATREGIPESATRAN <> 'E'
//

If Exists ( SELECT name 
            FROM sysobjects  
            WHERE name = 'VW_CONSULTA_TRANSFERENCIA'
            AND type = 'V')
	DROP VIEW VW_CONSULTA_TRANSFERENCIA
//

CREATE OR ALTER VIEW VW_CONSULTA_TRANSFERENCIA       (EMPRESA,
                                             FILIAL,
											 ID_ALMO_ATUA,
											 NM_ALMO_ATUA,
                                             ID_REGIPROD,  
                                             ID_IDENREGIPROD,  
                                             FL_STATREGIPROD,  
                                             QN_PESOLIQUREGIPROD,  
                                             DT_PADRREGIPROD,  
                                             DT_REGIPROD,  
                                             NR_LOTERASTREGIPROD,  
                                             DT_MOVIREGIPROD,  
                                             GN_HISTMOVIREGIPROD,
											 ID_TRANREGIPROD,  
                                             ID_PRODMATEEMBA,  
                                             NM_PRODMATEEMBA,
											 IE_MATEEMBA,
											 ID_ALMO_ORIG,
											 ID_ALMO_DEST,
											 FL_TIPOTRANREGIPROD)
											  
 AS (SELECT Producao_registro_movimentacao.EMPRESA,
            Producao_registro_movimentacao.FILIAL,	
			Almo_Atua.ID_ALMOXARIFADO ID_ALMO_ATUA,   
			Almo_Atua.NM_ALMOXARIFADO NM_ALMO_ATUA,
            Producao_registro.ID_REGIPROD,         
            Producao_registro.ID_IDENREGIPROD,         
            Producao_registro.FL_STATREGIPROD,         
            Producao_registro.QN_PESOLIQUREGIPROD,         
            Producao_registro.DT_PADRREGIPROD,         
            Producao_registro.DT_REGIPROD,
			Producao_registro.NR_LOTERASTREGIPROD,     
            Producao_registro_movimentacao.DT_MOVIREGIPROD,       
            Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 
			Producao_registro_movimentacao.ID_TRANREGIPROD,
            Material_embalagem_definicao.ID_PRODDEFIMATEEMBA ID_PRODMATEEMBA,
            Material_embalagem_definicao.NM_PRODDEFIMATEEMBA NM_PRODMATEEMBA,
			Material_embalagem_definicao.IE_DEFIMATEEMBA IE_MATEEMBA,
			Producao_registro_movimentacao.ID_ALMOXARIFADO_ORIG ID_ALMO_ORIG,  
			Producao_registro_movimentacao.ID_ALMOXARIFADO_DEST ID_ALMO_DEST,
            CASE WHEN Producao_registro_movimentacao.ID_TRANREGIPROD IS NULL
			     THEN 'DI'
				 ELSE CASE WHEN COALESCE(Producao_registro_transfer.FL_TIPOTRANREGIPROD, '  ') IN ('  ', 'BU', 'TI')
				           THEN 'DI'
						   ELSE 'TC'
						    END END FL_TIPOTRANREGIPROD
			                        
FROM PRODUCAO_REGISTRO_MOVIMENTACAO Producao_registro_movimentacao
     INNER JOIN PRODUCAO_REGISTRO Producao_registro
             ON Producao_registro_movimentacao.ID_REGIPROD = Producao_registro.ID_REGIPROD
     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO Material_embalagem_definicao
	         ON Producao_registro.ID_MATERIAL = Material_embalagem_definicao.ID_MATERIAL
			AND Producao_registro.ID_EMBALAGEM = Material_embalagem_definicao.ID_EMBALAGEM
     INNER JOIN ALMOXARIFADO Almo_Atua
	         ON Producao_registro.ID_ALMOXARIFADO = Almo_Atua.ID_ALMOXARIFADO
      LEFT JOIN PRODUCAO_REGISTRO_TRANSFER Producao_registro_transfer
	         ON Producao_registro_movimentacao.ID_TRANREGIPROD = Producao_registro_transfer.ID_TRANREGIPROD
			 
WHERE Producao_registro_movimentacao.FL_OPERMOVIREGIPROD IN ('TR', 'TP')) 
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_DEMANDA_ATENDIMENTO' AND TYPE = 'V')
    DROP VIEW VW_DEMANDA_ATENDIMENTO
//    
CREATE OR ALTER VIEW VW_DEMANDA_ATENDIMENTO AS
SELECT VW.ID_CAMISIMUPROGPROD,
       VW.ID_SIMUPROGPROD,
       VW.ID_LINHTIPOAVE,
       VW.ID_ESTRUNIDABAT,
       VW.DT_PADRCARGSIMUPROGPROD,
       VW.ID_CARGSIMUPROGPROD,
       VW.ID_CONSAVE,        
       VW.NR_ORDEABATCARGSIMUPROGPROD,
       VW.FL_SEXOAVECARGSIMUPROGPROD,
       VW.FL_DESTCARGSIMUPROGPROD,
       VW.IE_FAZECARGSIMUPROGPROD,
       VW.IE_LOTECARGSIMUPROGPROD,
       VW.IE_GALPCARGSIMUPROGPROD,
       VW.FL_TIPOLINHESTRUNIDABATCARG,
       VW.FL_TIPOLINHESTRUNIDABATDEMA,
       VW.QN_PESOMEDICARGSIMUPROGPROD,
       VW.NM_CLASPRIMGRADPARASIST AS FL_GRADCARGSIMUPROGPROD,
       CASE WHEN COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) = 100.0 THEN VW.QN_AVECARGLINHSIMUPROGPROD
          ELSE ROUND(VW.QN_AVECARGLINHSIMUPROGPROD * (COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) / 100.0), 0)
        END QN_AVECARGLINHSIMUPROGPROD,
       CASE WHEN COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) = 100.0 THEN COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0)
          ELSE ROUND(COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) / 100.0), 0)
        END QN_USADCARGANIMSIMUPROGPROD,
       CASE WHEN COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) = 100.0 THEN COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0)
          ELSE ROUND(COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) / 100.0), 0)
        END QN_NECECARGANIMSIMUPROGPROD
  FROM VW_DEMANDA_ATENDIMENTO_BASE VW
 WHERE COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) > 0
    OR COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) > 0
UNION ALL
SELECT VW.ID_CAMISIMUPROGPROD,
       VW.ID_SIMUPROGPROD,
       VW.ID_LINHTIPOAVE,
       VW.ID_ESTRUNIDABAT,
       VW.DT_PADRCARGSIMUPROGPROD,
       VW.ID_CARGSIMUPROGPROD,
       VW.ID_CONSAVE,        
       VW.NR_ORDEABATCARGSIMUPROGPROD,
       VW.FL_SEXOAVECARGSIMUPROGPROD,
       VW.FL_DESTCARGSIMUPROGPROD,
       VW.IE_FAZECARGSIMUPROGPROD,
       VW.IE_LOTECARGSIMUPROGPROD,
       VW.IE_GALPCARGSIMUPROGPROD,
       VW.FL_TIPOLINHESTRUNIDABATCARG,
       VW.FL_TIPOLINHESTRUNIDABATDEMA,       
       VW.QN_PESOMEDICARGSIMUPROGPROD,
       VW.NM_CLASSEGUGRADPARASIST AS FL_GRADCARGSIMUPROGPROD,
       CASE WHEN COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) = 100.0 THEN 0
          WHEN COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0) = 100.0 THEN VW.QN_AVECARGLINHSIMUPROGPROD
          WHEN COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0) = 100.0 THEN VW.QN_AVECARGLINHSIMUPROGPROD - ROUND(VW.QN_AVECARGLINHSIMUPROGPROD * (COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) / 100.0), 0)
          ELSE ROUND(VW.QN_AVECARGLINHSIMUPROGPROD * (COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0) / 100.0), 0)
        END QN_AVECARGLINHSIMUPROGPROD,
       CASE WHEN COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) = 100.0 THEN 0
          WHEN COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) = 100.0 THEN COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0)
          WHEN COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) = 100.0 THEN COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0) - ROUND(COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) / 100.0), 0)
          ELSE ROUND(COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) / 100.0), 0)
        END QN_USADCARGANIMSIMUPROGPROD,         
       CASE WHEN COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) = 100.0 THEN 0
          WHEN COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) = 100.0 THEN COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0)
          WHEN COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) = 100.0 THEN COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0) - ROUND(COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) / 100.0), 0)
          ELSE ROUND(COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) / 100.0), 0)
        END QN_NECECARGANIMSIMUPROGPROD         
  FROM VW_DEMANDA_ATENDIMENTO_BASE VW
 WHERE COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0) > 0
    OR COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) > 0 
UNION ALL
SELECT VW.ID_CAMISIMUPROGPROD,
       VW.ID_SIMUPROGPROD,
       VW.ID_LINHTIPOAVE,
       VW.ID_ESTRUNIDABAT,
       VW.DT_PADRCARGSIMUPROGPROD,
       VW.ID_CARGSIMUPROGPROD,
       VW.ID_CONSAVE,        
       VW.NR_ORDEABATCARGSIMUPROGPROD,
       VW.FL_SEXOAVECARGSIMUPROGPROD,
       VW.FL_DESTCARGSIMUPROGPROD,
       VW.IE_FAZECARGSIMUPROGPROD,
       VW.IE_LOTECARGSIMUPROGPROD,
       VW.IE_GALPCARGSIMUPROGPROD,
       VW.FL_TIPOLINHESTRUNIDABATCARG,
       VW.FL_TIPOLINHESTRUNIDABATDEMA,       
       VW.QN_PESOMEDICARGSIMUPROGPROD,
       VW.NM_CLASTERCGRADPARASIST AS FL_GRADCARGSIMUPROGPROD,
       CASE WHEN (COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0)) = 100.0  THEN 0
          WHEN (COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0)) = 0 THEN VW.QN_AVECARGLINHSIMUPROGPROD
          ELSE VW.QN_AVECARGLINHSIMUPROGPROD - (ROUND(VW.QN_AVECARGLINHSIMUPROGPROD * (COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) / 100.0), 0) + 
                                                  ROUND(VW.QN_AVECARGLINHSIMUPROGPROD * (COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0) / 100.0), 0))
        END QN_AVECARGLINHSIMUPROGPROD,
       CASE WHEN (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0)) = 100.0  THEN 0
          WHEN (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0)) = 0 THEN COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0)
          ELSE COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0) - (ROUND(COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) / 100.0), 0) + 
                                                                 ROUND(COALESCE(VW.QN_USADCARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) / 100.0), 0))
        END QN_USADCARGANIMSIMUPROGPROD,
       CASE WHEN (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0)) = 100.0  THEN 0
          WHEN (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0)) = 0 THEN COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0)
          ELSE COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0) - (ROUND(COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) / 100.0), 0) + 
                                                                 ROUND(COALESCE(VW.QN_NECECARGANIMSIMUPROGPROD, 0) * (COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) / 100.0), 0))
        END QN_NECECARGANIMSIMUPROGPROD        
  FROM VW_DEMANDA_ATENDIMENTO_BASE VW
 WHERE (VW.FL_TIPOLINHESTRUNIDABATCARG <> 'NE'
    AND COALESCE(VW.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGSIMUPROGPROD, 0) <> 100.0)
    OR (VW.FL_TIPOLINHESTRUNIDABATDEMA <> 'NE'
    AND COALESCE(VW.PC_GRADCARGANIMSIMUPROGPROD, 0) + COALESCE(VW.PC_SEGUGRADCARGANIMSIMUPROG, 0) <> 100.0)
//

/* ===================================== */
/* MSSQL                                 */
/* ===================================== */
IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_DEMANDA_ATENDIMENTO_BASE' AND TYPE = 'V')
    DROP VIEW VW_DEMANDA_ATENDIMENTO_BASE
//    
CREATE OR ALTER VIEW VW_DEMANDA_ATENDIMENTO_BASE AS
SELECT VW_ANIMAL.ID_CAMISIMUPROGPROD,
       VW_ANIMAL.ID_SIMUPROGPROD,
       VW_ANIMAL.ID_LINHTIPOAVE,
       VW_ANIMAL.ID_ESTRUNIDABAT,
       VW_ANIMAL.DT_PADRCARGSIMUPROGPROD,
       VW_ANIMAL.ID_CARGSIMUPROGPROD,
       VW_ANIMAL.ID_CONSAVE,        
       VW_ANIMAL.NR_ORDEABATCARGSIMUPROGPROD,
       VW_ANIMAL.FL_SEXOAVECARGSIMUPROGPROD,
       VW_ANIMAL.FL_DESTCARGSIMUPROGPROD,
       VW_ANIMAL.IE_FAZECARGSIMUPROGPROD,
       VW_ANIMAL.IE_LOTECARGSIMUPROGPROD,
       VW_ANIMAL.IE_GALPCARGSIMUPROGPROD,
       VW_ANIMAL.FL_TIPOLINHESTRUNIDABATCARG,
       VW_ANIMAL.FL_TIPOLINHESTRUNIDABATDEMA,
       VW_ANIMAL.NM_CLASPRIMGRADPARASIST,
       VW_ANIMAL.NM_CLASSEGUGRADPARASIST,
       VW_ANIMAL.NM_CLASTERCGRADPARASIST,
       VW_ANIMAL.QN_PESOMEDICARGSIMUPROGPROD,
       COALESCE(SUM(COALESCE(VW_ANIMAL.QN_AVECARGLINHSIMUPROGPROD, 0)), 0) QN_AVECARGLINHSIMUPROGPROD,
       VW_ANIMAL.PC_GRADCARGSIMUPROGPROD,
       VW_ANIMAL.PC_SEGUGRADCARGSIMUPROGPROD,       
       COALESCE(SUM(COALESCE(VW_ANIMAL.QN_USADCARGANIMSIMUPROGPROD, 0)), 0) QN_USADCARGANIMSIMUPROGPROD,       
       COALESCE(SUM(COALESCE(VW_ANIMAL.QN_NECECARGANIMSIMUPROGPROD, 0)), 0) QN_NECECARGANIMSIMUPROGPROD,
       VW_ANIMAL.PC_GRADCARGANIMSIMUPROGPROD,
       VW_ANIMAL.PC_SEGUGRADCARGANIMSIMUPROG
  FROM (SELECT PPS_CARG.ID_CAMISIMUPROGPROD,
               PPS_CARG.ID_SIMUPROGPROD,
               PPS_CARG.ID_LINHTIPOAVE,
               PPS_CARG.ID_ESTRUNIDABAT,
               PPS_CARG.DT_PADRCARGSIMUPROGPROD,
               PPS_CARG.ID_CARGSIMUPROGPROD,
               PPS_CARG.ID_CONSAVE,
               PPS_CARG.NR_ORDEABATCARGSIMUPROGPROD,
               PPS_CARG.FL_SEXOAVECARGSIMUPROGPROD,
               PPS_CARG.FL_DESTCARGSIMUPROGPROD,
               PPS_CARG.IE_FAZECARGSIMUPROGPROD,
               PPS_CARG.IE_LOTECARGSIMUPROGPROD,
               PPS_CARG.IE_GALPCARGSIMUPROGPROD,
               AUEL.FL_TIPOLINHESTRUNIDABAT FL_TIPOLINHESTRUNIDABATCARG,
               'NE' FL_TIPOLINHESTRUNIDABATDEMA,
               COALESCE(SP.NM_CLASPRIMGRADPARASIST, 'A') NM_CLASPRIMGRADPARASIST,
               COALESCE(SP.NM_CLASSEGUGRADPARASIST, 'B') NM_CLASSEGUGRADPARASIST,
               COALESCE(SP.NM_CLASTERCGRADPARASIST, 'C') NM_CLASTERCGRADPARASIST,               
               PPS_CARG.QN_PESOMEDICARGSIMUPROGPROD,
               0 QN_AVECARGLINHSIMUPROGPROD,
               0 PC_GRADCARGSIMUPROGPROD,
               0 PC_SEGUGRADCARGSIMUPROGPROD,
               PPSLCA.QN_AVECARGLINHSIMUPROGPROD QN_USADCARGANIMSIMUPROGPROD,       
               0 QN_NECECARGANIMSIMUPROGPROD,
               PPS_CARG.PC_GRADCARGSIMUPROGPROD PC_GRADCARGANIMSIMUPROGPROD,
               PPS_CARG.PC_SEGUGRADCARGSIMUPROGPROD PC_SEGUGRADCARGANIMSIMUPROG               
          FROM PRODUCAO_PROGRAMACAO_SIMU_CARG PPS_CARG
                    JOIN PROD_PROG_SIMU_LINH_CARG_AVE PPSLCA
        			        ON PPS_CARG.ID_CARGSIMUPROGPROD = PPSLCA.ID_CARGSIMUPROGPROD
        			      JOIN ABATE_UNIDADE_ESTRUTURA_LINHA AUEL
        			        ON PPSLCA.ID_LINHESTRUNIDABAT = AUEL.ID_LINHESTRUNIDABAT
                    JOIN ABATE_UNIDADE_ESTRUTURA AUE
                      ON AUEL.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
                    JOIN ABATE_UNIDADE AU
                      ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
               LEFT JOIN SISTEMA_PARAMETRO SP
                      ON SP.EMPRESA = AU.EMPRESA
                     AND SP.FILIAL = AU.FILIAL
        UNION ALL
        SELECT PPS_CARG.ID_CAMISIMUPROGPROD,
               PPS_CARG.ID_SIMUPROGPROD,
               PPS_CARG.ID_LINHTIPOAVE,
               PPS_CARG.ID_ESTRUNIDABAT,
               PPS_CARG.DT_PADRCARGSIMUPROGPROD,
               PPS_CARG.ID_CARGSIMUPROGPROD,
               PPS_CARG.ID_CONSAVE,
               PPS_CARG.NR_ORDEABATCARGSIMUPROGPROD,
               PPS_CARG.FL_SEXOAVECARGSIMUPROGPROD,
               PPS_CARG.FL_DESTCARGSIMUPROGPROD,
               PPS_CARG.IE_FAZECARGSIMUPROGPROD,
               PPS_CARG.IE_LOTECARGSIMUPROGPROD,
               PPS_CARG.IE_GALPCARGSIMUPROGPROD,
        	     'NE' FL_TIPOLINHESTRUNIDABATCARG,
        	     AUEL.FL_TIPOLINHESTRUNIDABAT FL_TIPOLINHESTRUNIDABATDEMA,
               COALESCE(SP.NM_CLASPRIMGRADPARASIST, 'A') NM_CLASPRIMGRADPARASIST,
               COALESCE(SP.NM_CLASSEGUGRADPARASIST, 'B') NM_CLASSEGUGRADPARASIST,
               COALESCE(SP.NM_CLASTERCGRADPARASIST, 'C') NM_CLASTERCGRADPARASIST,               
               PPS_CARG.QN_PESOMEDICARGSIMUPROGPROD,
        	     0 QN_AVECARGLINHSIMUPROGPROD,
               0 PC_GRADCARGSIMUPROGPROD,
               0 PC_SEGUGRADCARGSIMUPROGPROD,               
        	     0 QN_USADCARGANIMSIMUPROGPROD,
        	     PPSAC.QN_NECECARGANIMSIMUPROGPROD,
               PPSAC.PC_GRADCARGANIMSIMUPROGPROD,
               PPSAC.PC_SEGUGRADCARGANIMSIMUPROG
          FROM PRODUCAO_PROGRAMACAO_SIMU_CARG PPS_CARG
        	          JOIN PROD_PROG_SIMU_ANIM_CARG PPSAC
        	            ON PPS_CARG.ID_CARGSIMUPROGPROD = PPSAC.ID_CARGSIMUPROGPROD
        			      JOIN ABATE_UNIDADE_ESTRUTURA_LINHA AUEL
        			        ON PPSAC.ID_LINHESTRUNIDABAT = AUEL.ID_LINHESTRUNIDABAT
                    JOIN ABATE_UNIDADE_ESTRUTURA AUE
                      ON AUEL.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
                    JOIN ABATE_UNIDADE AU
                      ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
               LEFT JOIN SISTEMA_PARAMETRO SP
                      ON SP.EMPRESA = AU.EMPRESA
                     AND SP.FILIAL = AU.FILIAL) VW_ANIMAL
 GROUP BY VW_ANIMAL.ID_CAMISIMUPROGPROD,
          VW_ANIMAL.ID_SIMUPROGPROD,
          VW_ANIMAL.ID_LINHTIPOAVE,
          VW_ANIMAL.ID_ESTRUNIDABAT,
          VW_ANIMAL.DT_PADRCARGSIMUPROGPROD,
          VW_ANIMAL.ID_CARGSIMUPROGPROD,
          VW_ANIMAL.ID_CONSAVE,          
          VW_ANIMAL.NR_ORDEABATCARGSIMUPROGPROD,
          VW_ANIMAL.FL_SEXOAVECARGSIMUPROGPROD,
          VW_ANIMAL.FL_DESTCARGSIMUPROGPROD,
          VW_ANIMAL.IE_FAZECARGSIMUPROGPROD,
          VW_ANIMAL.IE_LOTECARGSIMUPROGPROD,
          VW_ANIMAL.IE_GALPCARGSIMUPROGPROD,
          VW_ANIMAL.FL_TIPOLINHESTRUNIDABATCARG,
          VW_ANIMAL.FL_TIPOLINHESTRUNIDABATDEMA,
          VW_ANIMAL.NM_CLASPRIMGRADPARASIST,
          VW_ANIMAL.NM_CLASSEGUGRADPARASIST,
          VW_ANIMAL.NM_CLASTERCGRADPARASIST,          
          VW_ANIMAL.QN_PESOMEDICARGSIMUPROGPROD,
          VW_ANIMAL.PC_GRADCARGSIMUPROGPROD,
          VW_ANIMAL.PC_SEGUGRADCARGSIMUPROGPROD,       
          VW_ANIMAL.PC_GRADCARGANIMSIMUPROGPROD,
          VW_ANIMAL.PC_SEGUGRADCARGANIMSIMUPROG
//          

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_DEMANDA_ATENDIMENTO_COMP' AND TYPE = 'V')
    DROP VIEW VW_DEMANDA_ATENDIMENTO_COMP
//    
CREATE OR ALTER VIEW VW_DEMANDA_ATENDIMENTO_COMP AS
SELECT VW.ID_CAMISIMUPROGPROD,
       VW.ID_SIMUPROGPROD,
       VW.ID_LINHTIPOAVE,
       VW.ID_ESTRUNIDABAT,
       VW.DT_PADRCARGSIMUPROGPROD,
       VW.ID_CARGSIMUPROGPROD,
       VW.ID_CONSAVE,    
       VW_CONSTITUICAO.ID_PRINPARTAVE, 
       VW_CONSTITUICAO.ID_COMPAVE,       
       VW.NR_ORDEABATCARGSIMUPROGPROD,
       VW.FL_SEXOAVECARGSIMUPROGPROD,
       VW.FL_DESTCARGSIMUPROGPROD,
       VW.IE_FAZECARGSIMUPROGPROD,
       VW.IE_LOTECARGSIMUPROGPROD,
       VW.IE_GALPCARGSIMUPROGPROD,
       VW.FL_TIPOLINHESTRUNIDABATCARG,
       VW.FL_TIPOLINHESTRUNIDABATDEMA,
       VW.QN_PESOMEDICARGSIMUPROGPROD,
       VW.FL_GRADCARGSIMUPROGPROD,
       VW.QN_AVECARGLINHSIMUPROGPROD * CASE WHEN VW.FL_SEXOAVECARGSIMUPROGPROD = 'MA' THEN VW_CONSTITUICAO.PC_MANDINTEMACH
                                          WHEN VW.FL_SEXOAVECARGSIMUPROGPROD = 'FE' THEN VW_CONSTITUICAO.PC_MANDINTEFEME
                                          ELSE VW_CONSTITUICAO.PC_MANDINTEMIST
                                        END QN_AVECARGLINHSIMUPROGPROD,
       VW.QN_USADCARGANIMSIMUPROGPROD * CASE WHEN VW.FL_SEXOAVECARGSIMUPROGPROD = 'MA' THEN VW_CONSTITUICAO.PC_MANDINTEMACH
                                           WHEN VW.FL_SEXOAVECARGSIMUPROGPROD = 'FE' THEN VW_CONSTITUICAO.PC_MANDINTEFEME
                                           ELSE VW_CONSTITUICAO.PC_MANDINTEMIST
                                         END QN_USADCARGANIMSIMUPROGPROD,       
       VW.QN_NECECARGANIMSIMUPROGPROD * CASE WHEN VW.FL_SEXOAVECARGSIMUPROGPROD = 'MA' THEN VW_CONSTITUICAO.PC_MANDINTEMACH
                                           WHEN VW.FL_SEXOAVECARGSIMUPROGPROD = 'FE' THEN VW_CONSTITUICAO.PC_MANDINTEFEME
                                           ELSE VW_CONSTITUICAO.PC_MANDINTEMIST
                                         END QN_NECECARGANIMSIMUPROGPROD
  FROM VW_DEMANDA_ATENDIMENTO VW
            JOIN (SELECT AC.ID_CONSAVE, 
                         APP.ID_PRINPARTAVE,
                         AVC.ID_COMPAVE,
                         ROUND((CAST(ACI.QN_PESOMACHITEMCONSAVE AS FLOAT) / CAST(AC.QN_PESOCONSAVE AS FLOAT)), 6) PC_MANDINTEMACH,
                         ROUND((CAST(ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT) / CAST(AC.QN_PESOCONSAVE AS FLOAT)), 6) PC_MANDINTEFEME,
                         ROUND((((CAST(ACI.QN_PESOMACHITEMCONSAVE AS FLOAT) + CAST(ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT)) / 2) / CAST(AC.QN_PESOCONSAVE AS FLOAT)), 6) PC_MANDINTEMIST
                    FROM AVE_CONSTITUICAO AC
                              JOIN AVE_CONSTITUICAO_ITEM ACI
                                ON AC.ID_CONSAVE = ACI.ID_CONSAVE
                              JOIN AVE_COMPONENTE AVC
                                ON ACI.ID_COMPAVE = AVC.ID_COMPAVE
                              JOIN AVE_PARTE_PRINCIPAL APP
                                ON AVC.ID_PRINPARTAVE = APP.ID_PRINPARTAVE) VW_CONSTITUICAO
              ON VW.ID_CONSAVE = VW_CONSTITUICAO.ID_CONSAVE
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_DEMANDA_MERCADO' AND TYPE = 'V')
    DROP VIEW VW_DEMANDA_MERCADO
//
CREATE OR ALTER VIEW VW_DEMANDA_MERCADO AS
SELECT PPSMME.ID_SIMUPROGPROD,
       PPSMME.ID_TURNSIMUPROGPROD,
       PPSMME.ID_MERCADO,
       PPSMME.ID_PRODMATEEMBA,
       COALESCE(PPSI.QN_QTDEMINIITEMSIMUPROGPROD, 0) QN_QTDEMINIITEMSIMUPROGPROD,
       COALESCE(PPSMME.QN_MATEEMBAMERCSIMUPROGPROD, 0) QN_MATEEMBAMERCSIMUPROGPROD
  FROM PROD_PROG_SIMU_MERC_MATE_EMBA PPSMME
       LEFT JOIN (SELECT PPSI.ID_SIMUPROGPROD,
                         ME.ID_PRODMATEEMBA,
                         PPSI.ID_TURNSIMUPROGPROD,
                         PPSI.ID_MERCADO,
                         SUM(PPSI.QN_QTDEMINIITEMSIMUPROGPROD) QN_QTDEMINIITEMSIMUPROGPROD
                    FROM PRODUCAO_PROGRAMACAO_SIMU_ITEM PPSI
                              JOIN MATERIAL_EMBALAGEM ME
                                ON PPSI.ID_MATEEMBA = ME.ID_MATEEMBA
                   GROUP BY PPSI.ID_SIMUPROGPROD,
                            ME.ID_PRODMATEEMBA,
                            PPSI.ID_TURNSIMUPROGPROD,
                            PPSI.ID_MERCADO) PPSI
              ON PPSMME.ID_SIMUPROGPROD = PPSI.ID_SIMUPROGPROD
             AND PPSMME.ID_PRODMATEEMBA = PPSI.ID_PRODMATEEMBA
             AND PPSMME.ID_TURNSIMUPROGPROD = PPSI.ID_TURNSIMUPROGPROD 
             AND PPSMME.ID_MERCADO = PPSI.ID_MERCADO
UNION ALL
SELECT PPSI.ID_SIMUPROGPROD,
       PPSI.ID_TURNSIMUPROGPROD,
       PPSI.ID_MERCADO,
       PPSI.ID_PRODMATEEMBA,
       COALESCE(PPSI.QN_QTDEMINIITEMSIMUPROGPROD, 0) QN_QTDEMINIITEMSIMUPROGPROD,
       0 QN_MATEEMBAMERCSIMUPROGPROD
  FROM (SELECT PPSI.ID_SIMUPROGPROD,
               ME.ID_PRODMATEEMBA,
               PPSI.ID_TURNSIMUPROGPROD,
               PPSI.ID_MERCADO,
               SUM(PPSI.QN_QTDEMINIITEMSIMUPROGPROD) QN_QTDEMINIITEMSIMUPROGPROD
          FROM PRODUCAO_PROGRAMACAO_SIMU_ITEM PPSI
                    JOIN MATERIAL_EMBALAGEM ME
                      ON PPSI.ID_MATEEMBA = ME.ID_MATEEMBA
         GROUP BY PPSI.ID_SIMUPROGPROD,
                  ME.ID_PRODMATEEMBA,
                  PPSI.ID_TURNSIMUPROGPROD,
                  PPSI.ID_MERCADO) PPSI
 WHERE NOT EXISTS (SELECT PPSMME.ID_MATEEMBAMERCSIMUPROGPROD
                     FROM PROD_PROG_SIMU_MERC_MATE_EMBA PPSMME
                    WHERE PPSMME.ID_SIMUPROGPROD = PPSI.ID_SIMUPROGPROD
                      AND PPSMME.ID_PRODMATEEMBA = PPSI.ID_PRODMATEEMBA
                      AND PPSMME.ID_TURNSIMUPROGPROD = PPSI.ID_TURNSIMUPROGPROD 
                      AND PPSMME.ID_MERCADO = PPSI.ID_MERCADO)
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_DEMANDA_PRODUCAO' AND TYPE = 'V')
    DROP VIEW VW_DEMANDA_PRODUCAO
//
CREATE OR ALTER VIEW VW_DEMANDA_PRODUCAO AS
SELECT VW.ID_SIMUPROGPROD,
       VW.ID_RESUSIMUPROGPROD,
       VW.ID_TURNSIMUPROGPROD,
       VW.ID_PRODMATEEMBA,
       VW.ID_PEDIVEND,
       VW.ID_CLIENTE,
       VW.ID_MERCADO,
       VW.NR_PRIORESUSIMUPROGPROD,
       VW.NR_PRIOITEMSIMUPROGPROD,
       VW.GN_TAGRESUSIMUPROGPROD,
       VW.QN_PRODSUGERESUSIMUPROGPROD,       
       SUM(VW.QN_PRODRESUSIMUPROGPROD) QN_PRODRESUSIMUPROGPROD,
       SUM(VW.QN_QTDEMINIITEMSIMUPROGPROD) QN_QTDEMINIITEMSIMUPROGPROD
  FROM (SELECT PPSR.ID_SIMUPROGPROD,
               PPSR.ID_RESUSIMUPROGPROD,
               PPSR.ID_TURNSIMUPROGPROD,
               PPSR.ID_PRODMATEEMBA,
               PPSR.ID_PEDIVEND,
               PPSR.ID_CLIENTE,
               PPSI.ID_MERCADO,
               PPSR.NR_PRIORESUSIMUPROGPROD,
               PPSI.NR_PRIOITEMSIMUPROGPROD,
               PPSR.GN_TAGRESUSIMUPROGPROD,
               COALESCE(PPSLME.QN_TOTAPRODMATEEMBALINHSIPRPD, 0) QN_PRODRESUSIMUPROGPROD,               
               COALESCE(PPSR.QN_PRODSUGERESUSIMUPROGPROD, 0) QN_PRODSUGERESUSIMUPROGPROD,
               COALESCE(PPSI.QN_QTDEMINIITEMSIMUPROGPROD, 0) QN_QTDEMINIITEMSIMUPROGPROD
          FROM (SELECT PPSLME.ID_SIMUPROGPROD,
                       PPSLME.ID_PRODMATEEMBA,
                       PPSLME.ID_TURNSIMUPROGPROD,
                       PPSLME.ID_ITEMSIMUPROGPROD,
                       SUM(PPSLME.QN_TOTAPRODMATEEMBALINHSIPRPD) QN_TOTAPRODMATEEMBALINHSIPRPD
                  FROM PROD_PROG_SIMU_LINH_MATE_EMBA PPSLME
                 GROUP BY PPSLME.ID_SIMUPROGPROD,
                          PPSLME.ID_PRODMATEEMBA,
                          PPSLME.ID_TURNSIMUPROGPROD,
                          PPSLME.ID_ITEMSIMUPROGPROD) PPSLME
                    JOIN PRODUCAO_PROG_SIMU_RESULTADO PPSR
                      ON PPSR.ID_SIMUPROGPROD = PPSLME.ID_SIMUPROGPROD
                     AND PPSR.ID_PRODMATEEMBA = PPSLME.ID_PRODMATEEMBA
                     AND PPSR.ID_TURNSIMUPROGPROD = PPSLME.ID_TURNSIMUPROGPROD
                     AND PPSR.FL_ATENDEMARESUSIMUPROGPROD = CASE WHEN PPSLME.ID_ITEMSIMUPROGPROD IS NOT NULL THEN 'S'
                                                               ELSE 'N'
                                                             END
                    JOIN MATERIAL_EMBALAGEM ME
                      ON ME.ID_PRODMATEEMBA = PPSR.ID_PRODMATEEMBA
               LEFT JOIN PRODUCAO_PROGRAMACAO_SIMU_ITEM PPSI
                      ON PPSLME.ID_ITEMSIMUPROGPROD = PPSI.ID_ITEMSIMUPROGPROD
                     AND PPSLME.ID_TURNSIMUPROGPROD = PPSI.ID_TURNSIMUPROGPROD                      
        UNION ALL
        SELECT PPSI.ID_SIMUPROGPROD,
               NULL ID_RESUSIMUPROGPROD,
               PPSI.ID_TURNSIMUPROGPROD,
               ME.ID_PRODMATEEMBA,
               PPSI.ID_PEDIVEND,
               PPSI.ID_CLIENTE,
               PPSI.ID_MERCADO,
               NULL NR_PRIORESUSIMUPROGPROD,
               PPSI.NR_PRIOITEMSIMUPROGPROD,
               PPSI.GN_TAGITEMSIMUPROGPROD GN_TAGRESUSIMUPROGPROD,
               0 QN_PRODRESUSIMUPROGPROD,
               0 QN_PRODSUGERESUSIMUPROGPROD,
               COALESCE(PPSI.QN_QTDEMINIITEMSIMUPROGPROD, 0) QN_QTDEMINIITEMSIMUPROGPROD
          FROM PRODUCAO_PROGRAMACAO_SIMU_ITEM PPSI
                    JOIN MATERIAL_EMBALAGEM ME
                      ON PPSI.ID_MATEEMBA = ME.ID_MATEEMBA
         WHERE NOT EXISTS (SELECT PPSLME.ID_MATEEMBALINHSIMUPROGPROD
                             FROM PROD_PROG_SIMU_LINH_MATE_EMBA PPSLME
                            WHERE PPSLME.ID_SIMUPROGPROD = PPSI.ID_SIMUPROGPROD
                              AND PPSLME.ID_ITEMSIMUPROGPROD = PPSI.ID_ITEMSIMUPROGPROD
                              AND PPSLME.ID_TURNSIMUPROGPROD = PPSI.ID_TURNSIMUPROGPROD)) VW
 GROUP BY VW.ID_SIMUPROGPROD,
          VW.ID_RESUSIMUPROGPROD,
          VW.ID_TURNSIMUPROGPROD,
          VW.ID_PRODMATEEMBA,
          VW.ID_PEDIVEND,
          VW.ID_CLIENTE,
          VW.ID_MERCADO,
          VW.NR_PRIORESUSIMUPROGPROD,
          VW.NR_PRIOITEMSIMUPROGPROD,
          VW.GN_TAGRESUSIMUPROGPROD,
          VW.QN_PRODSUGERESUSIMUPROGPROD
//          

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_DEMANDA_PRODUCAO_LINHA' AND TYPE = 'V')
    DROP VIEW VW_DEMANDA_PRODUCAO_LINHA
//    
CREATE OR ALTER VIEW VW_DEMANDA_PRODUCAO_LINHA AS
SELECT VW.ID_SIMUPROGPROD,
       VW.ID_TURNSIMUPROGPROD,
       VW.ID_PRODMATEEMBA,
       VW.ID_LINHESTRUNIDABAT,
       VW.ID_ITEMSIMUPROGPROD,       
       VW.DT_ITEMSIMUPROGPROD,       
       VW.DT_ENTRITEMSIMUPROGPROD,       
       VW.NR_PRIOITEMSIMUPROGPROD,       
       VW.ID_MERCADO,
       VW.ID_PEDIVEND,       
       VW.ID_CLIENTE,
       VW.ID_ETIQUETA,       
       VW.GN_TAGITEMSIMUPROGPROD,
       VW.PC_MINIATENITEMSIMUPROGPROD,
       VW.PC_DOWNSIZEITEMSIMUPROGPROD,
       VW.ID_PRODMATEEMBA_PRODACAB,       
       VW.DT_ENTRACABITEMSIMUPROGPROD,
       VW.QN_MINIACABITEMSIMUPROGPROD,
       SUM(VW.QN_TOTAPRODMATEEMBALINHSIPRPD) QN_TOTAPRODMATEEMBALINHSIPRPD,
       SUM(VW.QN_PESOPRODMATEEMBALINHSIPRPD) QN_PESOPRODMATEEMBALINHSIPRPD,
       SUM(VW.QN_GIVEAWAYMATEEMBALINHSIPRPD) QN_GIVEAWAYMATEEMBALINHSIPRPD,       
       SUM(VW.QN_QTDEMINIITEMSIMUPROGPROD) QN_QTDEMINIITEMSIMUPROGPROD
  FROM (SELECT PPSLME.ID_SIMUPROGPROD,
               PPSLME.ID_TURNSIMUPROGPROD,
               PPSLME.ID_PRODMATEEMBA,
               PPSLME.ID_LINHESTRUNIDABAT,
               PPSI.ID_ITEMSIMUPROGPROD,       
               PPSI.DT_ITEMSIMUPROGPROD,       
               PPSI.DT_ENTRITEMSIMUPROGPROD,       
               PPSI.NR_PRIOITEMSIMUPROGPROD,       
               PPSI.ID_MERCADO,
               PPSI.ID_PEDIVEND,       
               PPSI.ID_CLIENTE,
               PPSI.ID_ETIQUETA,       
               PPSI.GN_TAGITEMSIMUPROGPROD,
               COALESCE(PPSI.PC_MINIATENITEMSIMUPROGPROD, 100) PC_MINIATENITEMSIMUPROGPROD,
               COALESCE(PPSI.PC_DOWNSIZEITEMSIMUPROGPROD, 0) PC_DOWNSIZEITEMSIMUPROGPROD,
               PPSI.ID_PRODMATEEMBA_PRODACAB,       
               PPSI.DT_ENTRACABITEMSIMUPROGPROD,
               COALESCE(PPSI.QN_MINIACABITEMSIMUPROGPROD, 0) QN_MINIACABITEMSIMUPROGPROD,
               COALESCE(PPSLME.QN_TOTAPRODMATEEMBALINHSIPRPD, 0) QN_TOTAPRODMATEEMBALINHSIPRPD,
               COALESCE(PPSLME.QN_PESOPRODMATEEMBALINHSIPRPD, 0) QN_PESOPRODMATEEMBALINHSIPRPD,
               COALESCE(PPSLME.QN_GIVEAWAYMATEEMBALINHSIPRPD, 0) QN_GIVEAWAYMATEEMBALINHSIPRPD,
               COALESCE(PPSI.QN_QTDEMINIITEMSIMUPROGPROD, 0) QN_QTDEMINIITEMSIMUPROGPROD
          FROM PROD_PROG_SIMU_LINH_MATE_EMBA PPSLME
               LEFT JOIN PRODUCAO_PROGRAMACAO_SIMU_ITEM PPSI
                      ON PPSLME.ID_ITEMSIMUPROGPROD = PPSI.ID_ITEMSIMUPROGPROD
                     AND PPSLME.ID_TURNSIMUPROGPROD = PPSI.ID_TURNSIMUPROGPROD
        UNION ALL
        SELECT PPSI.ID_SIMUPROGPROD,
               PPSI.ID_TURNSIMUPROGPROD,
               ME.ID_PRODMATEEMBA,
               NULL ID_LINHESTRUNIDABAT,
               PPSI.ID_ITEMSIMUPROGPROD,       
               PPSI.DT_ITEMSIMUPROGPROD,       
               PPSI.DT_ENTRITEMSIMUPROGPROD,       
               PPSI.NR_PRIOITEMSIMUPROGPROD,       
               PPSI.ID_MERCADO,
               PPSI.ID_PEDIVEND,       
               PPSI.ID_CLIENTE,
               PPSI.ID_ETIQUETA,       
               PPSI.GN_TAGITEMSIMUPROGPROD,
               COALESCE(PPSI.PC_MINIATENITEMSIMUPROGPROD, 100) PC_MINIATENITEMSIMUPROGPROD,
               COALESCE(PPSI.PC_DOWNSIZEITEMSIMUPROGPROD, 0) PC_DOWNSIZEITEMSIMUPROGPROD,
               PPSI.ID_PRODMATEEMBA_PRODACAB,       
               PPSI.DT_ENTRACABITEMSIMUPROGPROD,
               COALESCE(PPSI.QN_MINIACABITEMSIMUPROGPROD, 0) QN_MINIACABITEMSIMUPROGPROD,
               0 QN_TOTAPRODMATEEMBALINHSIPRPD,
               0 QN_PESOPRODMATEEMBALINHSIPRPD,
               0 QN_GIVEAWAYMATEEMBALINHSIPRPD,
               COALESCE(PPSI.QN_QTDEMINIITEMSIMUPROGPROD, 0) QN_QTDEMINIITEMSIMUPROGPROD
          FROM PRODUCAO_PROGRAMACAO_SIMU_ITEM PPSI
		            JOIN MATERIAL_EMBALAGEM ME
					  ON PPSI.ID_MATEEMBA = ME.ID_MATEEMBA
         WHERE NOT EXISTS (SELECT PPSLME.ID_MATEEMBALINHSIMUPROGPROD
                             FROM PROD_PROG_SIMU_LINH_MATE_EMBA PPSLME
                            WHERE PPSLME.ID_ITEMSIMUPROGPROD = PPSI.ID_ITEMSIMUPROGPROD
                              AND PPSLME.ID_TURNSIMUPROGPROD = PPSI.ID_TURNSIMUPROGPROD)) VW
 GROUP BY VW.ID_SIMUPROGPROD,
          VW.ID_TURNSIMUPROGPROD,
          VW.ID_PRODMATEEMBA, 
          VW.ID_LINHESTRUNIDABAT,
          VW.ID_ITEMSIMUPROGPROD,       
          VW.DT_ITEMSIMUPROGPROD,       
          VW.DT_ENTRITEMSIMUPROGPROD,       
          VW.NR_PRIOITEMSIMUPROGPROD,       
          VW.ID_MERCADO,
          VW.ID_PEDIVEND,       
          VW.ID_CLIENTE,
          VW.ID_ETIQUETA,       
          VW.GN_TAGITEMSIMUPROGPROD,
          VW.PC_MINIATENITEMSIMUPROGPROD,
          VW.PC_DOWNSIZEITEMSIMUPROGPROD,
          VW.ID_PRODMATEEMBA_PRODACAB,       
          VW.DT_ENTRACABITEMSIMUPROGPROD,
          VW.QN_MINIACABITEMSIMUPROGPROD
//          

IF  EXISTS ( SELECT NAME
               FROM SYS.OBJECTS 
              WHERE NAME = 'VW_DEVOLUCAO_VENDA'
                AND TYPE = 'V')
  DROP VIEW VW_DEVOLUCAO_VENDA
//

CREATE OR ALTER VIEW VW_DEVOLUCAO_VENDA
AS
  SELECT ID_DEVOVEND,
         DT_DEVOVEND,
         FL_TIPODEVOVEND,
         ID_REGIPROD
    FROM (SELECT PEDIDO_DEVOLUCAO_VENDA.ID_PEDIDEVOVEND ID_DEVOVEND,
                 PEDIDO_DEVOLUCAO_VENDA.DT_PEDIDEVOVEND DT_DEVOVEND,
                 'P' AS FL_TIPODEVOVEND,
                 PEDIDO_DEVOLUCAO_VENDA_IDEN.ID_REGIPROD
            FROM PEDIDO_DEVOLUCAO_VENDA
                      JOIN PEDIDO_DEVOLUCAO_VENDA_IDEN
                        ON PEDIDO_DEVOLUCAO_VENDA_IDEN.ID_PEDIDEVOVEND = PEDIDO_DEVOLUCAO_VENDA.ID_PEDIDEVOVEND
                             WHERE PEDIDO_DEVOLUCAO_VENDA.FL_STATPEDIDEVOVEND = 'FE'

         UNION 
          SELECT PV_VENDA_DEVOLUCAO_DIRETA.ID_DEVOVENDDIRE ID_DEVOVEND,
                 PV_VENDA_DEVOLUCAO.DT_CARRIDENDEVOVEND DT_DEVOVEND,
                 'D' AS FL_TIPODEVOVEND,
                 PV_VENDA_DEVOLUCAO.ID_REGIPROD
            FROM PV_VENDA_DEVOLUCAO_DIRETA
                      JOIN PV_VENDA_DEVOLUCAO
                        ON PV_VENDA_DEVOLUCAO_DIRETA.ID_DEVOVENDDIRE = PV_VENDA_DEVOLUCAO.ID_DEVOVENDDIRE
           WHERE PV_VENDA_DEVOLUCAO_DIRETA.FL_STATDIREDEVOVEND = 'FE'

         UNION
          SELECT PEDIDO_DEVOLUCAO_VENDA.ID_PEDIDEVOVEND ID_DEVOVEND,
                 PEDIDO_DEVOLUCAO_VENDA.DT_PEDIDEVOVEND DT_DEVOVEND,
                 'R' AS FL_TIPODEVOVEND,
                 PRODUCAO_REGISTRO.ID_REGIPROD
            FROM PEDIDO_DEVOLUCAO_VENDA
                      JOIN PRODUCAO_REGISTRO
                        ON PRODUCAO_REGISTRO.ID_PEDIDEVOVEND = PEDIDO_DEVOLUCAO_VENDA.ID_PEDIDEVOVEND
           WHERE PEDIDO_DEVOLUCAO_VENDA.FL_STATPEDIDEVOVEND = 'FE'

         ) VW_PEDIDO_DEVOLUCAO
//
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_EMBALAGEM' AND TYPE = 'V')
    DROP VIEW VW_EMBALAGEM
//    

CREATE OR ALTER VIEW [dbo].[VW_EMBALAGEM] 
	(
		EMPRESA, 
		FILIAL, 
		ID_EMBALAGEM, 
		NM_EMBALAGEM, 
		NM_REDUEMBA, 
		ID_TIPOEMBA, 
		ID_UNIDMEDI_TARAEMBA, 
		ID_UNIDMEDI_DIMEEMBA, 
		QN_COMPEMBA, 
		QN_ALTUEMBA, 
		QN_LARGEMBA, 
		FX_EMBALAGEM, 
		IE_EMBALAGEM, 
		ID_UNIDMEDI,
		FL_CONTEMBA, 
		QN_VALOEMBA, 
		QN_TARAEMBA,
    FL_ATIVEMBA
	)
	AS 
	SELECT
			 ISNULL(VW_EMBALAGEM_MEDIDA.EMPRESA, (		SELECT EMPRESA
			FROM  EMPRESA_FILIAL_LOCAL 
	)) EMPRESA,
			 ISNULL(VW_EMBALAGEM_MEDIDA.FILIAL, (		SELECT FILIAL
			FROM  EMPRESA_FILIAL_LOCAL 
	)) FILIAL,
			 EMBALAGEM_DEFINICAO.ID_DEFIEMBA,
			 EMBALAGEM_DEFINICAO.NM_DEFIEMBA,
			 EMBALAGEM_DEFINICAO.NM_REDUDEFIEMBA,
			 EMBALAGEM_DEFINICAO.ID_TIPOEMBA,
			 EMBALAGEM_DEFINICAO.ID_UNIDMEDI_TARADEFIEMBA,
			 EMBALAGEM_DEFINICAO.ID_UNIDMEDI_DIMEDEFIEMBA,
			 EMBALAGEM_DEFINICAO.QN_COMPDEFIEMBA,
			 EMBALAGEM_DEFINICAO.QN_ALTUDEFIEMBA,
			 EMBALAGEM_DEFINICAO.QN_LARGDEFIEMBA,
			 EMBALAGEM_DEFINICAO.FX_DEFIEMBA,
			 EMBALAGEM_DEFINICAO.IE_DEFIEMBA,
			 EMBALAGEM_DEFINICAO.ID_UNIDMEDI,
			 VW_EMBALAGEM_MEDIDA.FL_CONTMEDIEMBA,
			 VW_EMBALAGEM_MEDIDA.QN_VALOMEDIEMBA,
			 VW_EMBALAGEM_MEDIDA.QN_TARAATUAMEDIEMBA,
       EMBALAGEM_DEFINICAO.FL_ATIVDEFIEMBA
	FROM  EMBALAGEM_DEFINICAO  LEFT OUTER JOIN (	SELECT
				 EMBALAGEM_MEDIDA.EMPRESA,
				 EMBALAGEM_MEDIDA.FILIAL,
				 EMBALAGEM_MEDIDA.ID_DEFIEMBA,
				 EMBALAGEM_MEDIDA.FL_CONTMEDIEMBA,
				 EMBALAGEM_MEDIDA.QN_VALOMEDIEMBA,
				 EMBALAGEM_MEDIDA.QN_TARAATUAMEDIEMBA
		FROM  EMBALAGEM_MEDIDA 
		WHERE EMBALAGEM_MEDIDA.FILIAL = 		
		                    ISNULL((			SELECT FILIAL
				FROM SISTEMA_USUARIO_SESSAO 
				WHERE	 SERIAL# =
					CAST((SELECT @@SPID AS SERIAL#) AS CHAR(50))
	), (			SELECT FILIAL
				FROM EMPRESA_FILIAL_LOCAL 
	))
	) VW_EMBALAGEM_MEDIDA  ON  EMBALAGEM_DEFINICAO.ID_DEFIEMBA  = VW_EMBALAGEM_MEDIDA.ID_DEFIEMBA
//

IF EXISTS (SELECT NAME 
             FROM SYSOBJECTS  
            WHERE NAME = 'VW_EMBALAGEM_CONTROLE_INDI'
              AND TYPE = 'V') 
   DROP VIEW VW_EMBALAGEM_CONTROLE_INDI
//
CREATE OR ALTER VIEW VW_EMBALAGEM_CONTROLE_INDI
AS
  SELECT EMBALAGEM_CONTROLE_INDIVIDUAL.ID_CONTEMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.EMPRESA,
         EMBALAGEM_CONTROLE_INDIVIDUAL.FILIAL,
         EMBALAGEM_CONTROLE_INDIVIDUAL.ID_IDENCONTEMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.ID_REGIPROD,
         EMBALAGEM_CONTROLE_INDIVIDUAL.NR_LOTERASTCONTEMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.DT_PADREMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.FL_MODAEMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.ID_PRODMATEEMBA,
         EMBALAGEM_CONTROLE_INDIVIDUAL.ID_UNIDABAT,
         EMBALAGEM_CONTROLE_INDIVIDUAL.NR_PACKPROD,
         EMBALAGEM_CONTROLE_INDIVIDUAL.DT_ELABEMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.DT_IMPREMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.ID_MODEIDEN,
         EMBALAGEM_CONTROLE_INDIVIDUAL.GN_LOTEEXTECONTEMBAINDI,
         EMBALAGEM_CONTROLE_INDIVIDUAL.FILIAL_IMPRESSA,
         EMBALAGEM_CONTROLE_INDIVIDUAL.EMPRESA_IMPRESSA,
         EMBALAGEM_CONTROLE_INDIVIDUAL.ID_RESTPROD,
         EMBALAGEM_CONTROLE_INDIVIDUAL.IE_VARIDEFIEMBA,
         EMBALAGEM_CONTROLE_INDIVIDUAL.ID_USUASISTEMBAINDI,
		 EMBALAGEM_CONTROLE_INDIVIDUAL.FL_ERROIMPREMBAINDI,
		 EMBALAGEM_CONTROLE_INDIVIDUAL.GN_MENSERROIMPREMBAINDI,
         CASE WHEN EMBALAGEM_CONTROLE_INDIVIDUAL.NR_SEQUTURNCONTEMBAINDI IS NOT NULL
              THEN CAST(EMBALAGEM_CONTROLE_INDIVIDUAL.NR_SEQUTURNCONTEMBAINDI AS VARCHAR(20))
              ELSE COALESCE((SELECT TOP 1 SUBSTRING(GN_SEQUITEMDIARTURNPROD, 1, CHARINDEX('º', GN_SEQUITEMDIARTURNPROD) - 1)                              
                               FROM PRODUCAO_TURNO_DIARIO_ITEM,                                   
                                    PRODUCAO_TURNO_DIARIO                             
                              WHERE PRODUCAO_TURNO_DIARIO_ITEM.ID_DIARTURNPROD = PRODUCAO_TURNO_DIARIO.ID_DIARTURNPROD                               
                                AND EMBALAGEM_CONTROLE_INDIVIDUAL.DT_IMPREMBAINDI BETWEEN PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAINICITEMDIARTURNPROD AND PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAFINAITEMDIARTURNPROD                               
                                AND PRODUCAO_TURNO_DIARIO.ID_UNIDABAT = EMBALAGEM_CONTROLE_INDIVIDUAL.ID_UNIDABAT), '1')
          END NR_SEQUTURNCONTEMBAINDI,
         CASE WHEN EMBALAGEM_CONTROLE_INDIVIDUAL.NR_SEQUTURNCONTEMBAINDI IS NOT NULL 
              THEN 'S' 
              ELSE 'N' 
          END FL_TURNMANUCONTEMBAINDI,
         ID_SSCCCONTEMBAINDI, 		  
         EMBALAGEM_CONTROLE_INDIVIDUAL.FL_PREVISUETIQCONTEMBAINDI
    FROM EMBALAGEM_CONTROLE_INDIVIDUAL
//

IF EXISTS (SELECT NAME 
             FROM SYSOBJECTS  
            WHERE NAME = 'VW_EMBALAGEM_CONTROLE_TURNO'
              AND TYPE = 'V') 
   DROP VIEW VW_EMBALAGEM_CONTROLE_TURNO
//
CREATE OR ALTER VIEW VW_EMBALAGEM_CONTROLE_TURNO
AS
    SELECT ECI.ID_CONTEMBAINDI,
           CASE WHEN ECI.NR_SEQUTURNCONTEMBAINDI IS NOT NULL             
                THEN CAST(ECI.NR_SEQUTURNCONTEMBAINDI AS VARCHAR(20))             
                ELSE COALESCE((SELECT TOP 1 SUBSTRING(GN_SEQUITEMDIARTURNPROD, 1, CHARINDEX('º', GN_SEQUITEMDIARTURNPROD) - 1)                              
                                 FROM PRODUCAO_TURNO_DIARIO_ITEM,                                   
                                      PRODUCAO_TURNO_DIARIO                             
                                WHERE PRODUCAO_TURNO_DIARIO_ITEM.ID_DIARTURNPROD = PRODUCAO_TURNO_DIARIO.ID_DIARTURNPROD                               
                                  AND ECI.DT_IMPREMBAINDI BETWEEN PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAINICITEMDIARTURNPROD AND PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAFINAITEMDIARTURNPROD                               
                                  AND PRODUCAO_TURNO_DIARIO.ID_UNIDABAT = ECI.ID_UNIDABAT), '1')        
            END AS NR_SEQUTURNCONTEMBAINDI,        
           CASE WHEN ECI.NR_SEQUTURNCONTEMBAINDI IS NOT NULL 
                THEN 'S' 
                ELSE 'N' 
            END AS FL_TURNMANUCONTEMBAINDI
      FROM EMBALAGEM_CONTROLE_INDIVIDUAL ECI;
//

------ SQL SERVER -------
If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_ENTRADA_AVE_VIVA_TURNO' AND type = 'V')
    DROP VIEW VW_ENTRADA_AVE_VIVA_TURNO
//	
CREATE OR ALTER VIEW VW_ENTRADA_AVE_VIVA_TURNO AS
 SELECT ENTRADA_AVE_VIVA.EMPRESA,
        ENTRADA_AVE_VIVA.FILIAL,
        PRODUCAO_TURNO.ID_TURNPROD,
        PRODUCAO_TURNO.GN_SEQUTURNPROD,
        PRODUCAO_TURNO.GN_HORAINICTURNPROD,
        PRODUCAO_TURNO.GN_HORAFINATURNPROD,
        DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
        ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
        ENTRADA_AVE_VIVA.ID_REGIDATAPADR,
        ENTRADA_AVE_VIVA.DT_ENTRCAMIENTRAVEVIVA,
        ENTRADA_AVE_VIVA.FL_STATENTRAVEVIVA,
        ENTRADA_AVE_VIVA.FL_IMPRENTRAVEVIVA,
        ENTRADA_AVE_VIVA.GN_PLACCAMIENTRAVEVIVA,
        ENTRADA_AVE_VIVA.ID_FORNECEDOR,
        ENTRADA_AVE_VIVA.ID_TRANMOTOTRAN,
        ENTRADA_AVE_VIVA.ID_REQUSAIDGRAN,
        ENTRADA_AVE_VIVA.ID_LOTECRIA,
        ENTRADA_AVE_VIVA.QN_KMINICENTRAVEVIVA,
        ENTRADA_AVE_VIVA.DT_SAIDORIGENTRAVEVIVA,
        ENTRADA_AVE_VIVA.ID_MATERIAL,
        MATERIAL.NM_MATERIAL,
        ENTRADA_AVE_VIVA.QN_CABEENTRAVEVIVA,
        ENTRADA_AVE_VIVA.QN_KMFINAENTRAVEVIVA,
        ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA,
        ENTRADA_AVE_VIVA.QN_PESOTARAENTRAVEVIVA,
        (ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_PESOTARAENTRAVEVIVA) AS QN_PESOLIQUENTRAVEVIVA,
        ENTRADA_AVE_VIVA.FX_ENTRAVEVIVA,
        ENTRADA_AVE_VIVA.QN_PESOORIGENTRAVEVIVA,
        ENTRADA_AVE_VIVA.ID_VEICTRAN,
        ENTRADA_AVE_VIVA.DT_SAIDCAMIENTRAVEVIVA,
        ENTRADA_AVE_VIVA.ID_USUASIST_ABERENTR,
        ENTRADA_AVE_VIVA.ID_USUASIST_FECHENTR,
        ENTRADA_AVE_VIVA.DT_ABERPENDENTRAVEVIVA,
        ENTRADA_AVE_VIVA.DT_FECHPENDENTRAVEVIVA,
        ENTRADA_AVE_VIVA.QN_CONTINICENTRAVEVIVA,
        ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA,
        (ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_CONTINICENTRAVEVIVA) AS QN_CABEPENDENTRAVEVIVA,
        ((ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_PESOTARAENTRAVEVIVA) /
          CONVERT(FLOAT, (ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_CONTINICENTRAVEVIVA + ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA))) AS QN_PESOMEDIAVEVIVA,
        ENTRADA_AVE_VIVA.QN_GAIOENTRAVEVIVA,
        ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA
   FROM ENTRADA_AVE_VIVA,
        DATA_PADRAO_REGISTRO,
        MATERIAL,
        PRODUCAO_TURNO,
        (SELECT FILIAL,
                COUNT(ID_TURNPROD) AS QN_TURNOS
           FROM PRODUCAO_TURNO
          GROUP BY FILIAL ) VW_TURNO
  WHERE ENTRADA_AVE_VIVA.ID_MATERIAL = MATERIAL.ID_MATERIAL
    AND	ENTRADA_AVE_VIVA.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR
    AND	ENTRADA_AVE_VIVA.EMPRESA  = PRODUCAO_TURNO.EMPRESA
    AND	ENTRADA_AVE_VIVA.FILIAL  = PRODUCAO_TURNO.FILIAL
    AND	ENTRADA_AVE_VIVA.FILIAL  = VW_TURNO.FILIAL
    AND	ENTRADA_AVE_VIVA.FL_STATENTRAVEVIVA  != 'EX'
    AND	((VW_TURNO.QN_TURNOS  = 1)
         OR	(ENTRADA_AVE_VIVA.DT_ABERPENDENTRAVEVIVA BETWEEN CONVERT(DATETIME, (CAST(CONVERT(VARCHAR(23), DT_ABERPENDENTRAVEVIVA, 103) AS VARCHAR) + ' ' +
                                                                                CAST(GN_HORAINICTURNPROD AS VARCHAR)), 103)
                                                         AND CONVERT(DATETIME, (CAST(CONVERT(VARCHAR(23), DT_ABERPENDENTRAVEVIVA, 103) AS VARCHAR) + ' ' +
                                                                                CAST(GN_HORAFINATURNPROD AS VARCHAR)), 103)))
//																				

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_ENTRADA_AVE_VIVA_TURNO_BASE' AND TYPE = 'V')
    DROP VIEW VW_ENTRADA_AVE_VIVA_TURNO_BASE
//    
CREATE VIEW VW_ENTRADA_AVE_VIVA_TURNO_BASE AS
SELECT EAV.EMPRESA,
       EAV.FILIAL,
       EAV.ID_ENTRAVEVIVA,
       EAV.FL_STATENTRAVEVIVA,       
       EAV.ID_LINHTIPOAVE,
       EAV.ID_TRANMOTOTRAN,
       EAV.GN_PLACCAMIENTRAVEVIVA,       
       EAV.ID_PROPGRAN,
       EAV.IE_ORDEPESA,
       EAV.NR_ORDEPENDENTRAVEVIVA,
       EAV.ID_ESTAPENDESTRUNIDABAT,
       AU.ID_UNIDABAT,
       AUE.ID_ESTRUNIDABAT, 
       EAV.ID_REGIDATAPADR,
       EAV.VL_ENTRAVEVIVA, 
       EAV.FL_SEXOENTRAVEVIVA, 
       EAV.ID_MATERIAL, 
       DPR.DT_REGIDATAPADR,
       EAVT.DT_ABERPENDTURNENTRAVEVIVA,
       EAVT.DT_FECHPENDTURNENTRAVEVIVA,
       EAV.FL_STATPENDENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN EAVT.NR_SEQUTURNENTRAVEVIVA
            ELSE COALESCE((SELECT TOP 1 CAST(SUBSTRING(PTDI.GN_SEQUITEMDIARTURNPROD, 1, CHARINDEX('º', PTDI.GN_SEQUITEMDIARTURNPROD) - 1) AS NUMERIC(10))
                             FROM PRODUCAO_TURNO_DIARIO_ITEM PTDI WITH (NOLOCK)
                                  JOIN PRODUCAO_TURNO_DIARIO PTD WITH (NOLOCK) ON PTDI.ID_DIARTURNPROD = PTD.ID_DIARTURNPROD
                            WHERE EAV.DT_ABERPENDENTRAVEVIVA + (COALESCE(SPF.QN_TEMPINICPENDFILIPARASIST, 0) / 24 / 60.0) 
                                  BETWEEN PTDI.DT_HORAINICITEMDIARTURNPROD AND PTDI.DT_HORAFINAITEMDIARTURNPROD
                              AND PTD.ID_UNIDABAT = AU.ID_UNIDABAT), 1)
        END NR_SEQUTURNENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN EAVT.QN_CABETURNENTRAVEVIVA
            ELSE COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0)
        END QN_CABETURNENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)
            ELSE COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)
        END QN_MORTTURNENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAV.QN_CABEENTRAVEVIVA, 0) - 
                           FLOOR((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_CABEENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)))                       
                      ELSE FLOOR((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_CABEENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0))) END
            ELSE COALESCE(EAV.QN_CABEENTRAVEVIVA, 0)
        END QN_CABEENTRTURNAVEVIVA,        
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAV.QN_PESOORIGENTRAVEVIVA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOORIGENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOORIGENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END
            ELSE COALESCE(EAV.QN_PESOORIGENTRAVEVIVA, 0)
        END QN_PESOORIGTURNENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END       
            ELSE COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)
        END QN_PESOTARATURNENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAV.QN_TARAPADRENTRAVEVIVA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_TARAPADRENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_TARAPADRENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END       
            ELSE COALESCE(EAV.QN_TARAPADRENTRAVEVIVA, 0)
        END QN_PESOTARAPADRTURNENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END              
            ELSE COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0)
        END QN_PESOBRUTTURNENTRAVEVIVA,  
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END              
            ELSE COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0)
        END QN_PESOPENDTURNENTRAVEVIVA,                
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN 0
            ELSE COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0)
        END QN_CONTINICTURNENTRAVEVIVA,                
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN EAVT.QN_CABETURNENTRAVEVIVA
            ELSE COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0)
        END QN_CONTFINATURNENTRAVEVIVA,        
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN ROUND((CASE WHEN (CASE WHEN COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) <= 0 THEN EAV.QN_CABEENTRAVEVIVA 
                                        ELSE COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0) END) = 0 THEN 0
                             ELSE (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) / 
                                  (CASE WHEN COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) <= 0 THEN EAV.QN_CABEENTRAVEVIVA 
                                        ELSE COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0) END) END) *
                         COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0), 2)
            ELSE ROUND((CASE WHEN (CASE WHEN COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) <= 0 THEN EAV.QN_CABEENTRAVEVIVA 
                                        ELSE COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0) END) = 0 THEN 0
                             ELSE (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) / 
                                  (CASE WHEN COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) <= 0 THEN EAV.QN_CABEENTRAVEVIVA 
                                        ELSE COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0) END) END) *
                         COALESCE(EAV.QN_MORTENTRAVEVIVA, 0), 2)
        END QN_PESOMORTTURNENTRAVEVIVA,       
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) - 
                            ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                        ELSE (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) / 
                                             (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                   (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) / 
                                            (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                  (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END                     
            ELSE COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)
        END QN_PESOABATTURNENTRAVEVIVA,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END       
            ELSE COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0)
        END QN_PESOTARATURNENTRAVEVIVAQUAR,
       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAVQP.QN_TARAPADRVEICTERCPESA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAVQP.QN_TARAPADRVEICTERCPESA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAVQP.QN_TARAPADRVEICTERCPESA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END       
            ELSE COALESCE(EAVQP.QN_TARAPADRVEICTERCPESA, 0)
        END QN_TARAPADRVEICTURNTERCPESA,
	       CASE WHEN EAVT.ID_ENTRAVEVIVA IS NOT NULL AND EAV.FL_STATPENDENTRAVEVIVA = 'FE'
            THEN CASE WHEN EAVT.NR_SEQUTURNENTRAVEVIVA = VW_TOTATURN.NR_SEQUULTITURN 
                      THEN COALESCE(EAVQP.QN_TARAPADRVEICSEGUPESA, 0) - 
                           ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAVQP.QN_TARAPADRVEICSEGUPESA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (VW_TOTATURN.QN_TOTACABEPRIMTURN + COALESCE(VW_TOTATURN.QN_TOTAMORTPRIMTURN, 0)), 2)                       
                      ELSE ROUND((CASE WHEN (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) = 0 THEN 0
                                       ELSE COALESCE(EAVQP.QN_TARAPADRVEICSEGUPESA, 0) / 
                                           (COALESCE(EAV.QN_CONTFINAENTRAVEVIVA, 0) - COALESCE(EAV.QN_CONTINICENTRAVEVIVA, 0) + COALESCE(EAV.QN_MORTENTRAVEVIVA, 0)) END) *
                                 (EAVT.QN_CABETURNENTRAVEVIVA + COALESCE(EAVT.QN_MORTTURNENTRAVEVIVA, 0)), 2) END       
            ELSE COALESCE(EAVQP.QN_TARAPADRVEICSEGUPESA, 0)
        END QN_TARAPADRVEICTURNSEGUPESA

  FROM ENTRADA_AVE_VIVA EAV WITH (NOLOCK)
       LEFT JOIN ENTRADA_AVE_VIVA_QUARTA_PESA EAVQP  WITH (NOLOCK) ON EAV.ID_ENTRAVEVIVA = EAVQP.ID_ENTRAVEVIVA
       LEFT JOIN ENTRADA_AVE_VIVA_TURNO EAVT WITH (NOLOCK) ON EAV.ID_ENTRAVEVIVA = EAVT.ID_ENTRAVEVIVA  
       LEFT JOIN (SELECT VW1.ID_ENTRAVEVIVA,
                         MAX(VW1.NR_SEQUTURNENTRAVEVIVA) AS NR_SEQUULTITURN,
                         COALESCE((SELECT SUM(VW2.QN_CABETURNENTRAVEVIVA)
                                     FROM ENTRADA_AVE_VIVA_TURNO VW2 WITH (NOLOCK)
                                    WHERE VW1.ID_ENTRAVEVIVA = VW2.ID_ENTRAVEVIVA
                                      AND VW2.NR_SEQUTURNENTRAVEVIVA <> (SELECT MAX(VW3.NR_SEQUTURNENTRAVEVIVA)
                                                                           FROM ENTRADA_AVE_VIVA_TURNO VW3 WITH (NOLOCK)
                                                                          WHERE VW3.ID_ENTRAVEVIVA = VW2.ID_ENTRAVEVIVA)), 0) AS QN_TOTACABEPRIMTURN,
                         COALESCE((SELECT SUM(VW2.QN_MORTTURNENTRAVEVIVA)
                                     FROM ENTRADA_AVE_VIVA_TURNO VW2 WITH (NOLOCK)
                                    WHERE VW1.ID_ENTRAVEVIVA = VW2.ID_ENTRAVEVIVA
                                      AND VW2.NR_SEQUTURNENTRAVEVIVA <> (SELECT MAX(VW3.NR_SEQUTURNENTRAVEVIVA)
                                                                           FROM ENTRADA_AVE_VIVA_TURNO VW3 WITH (NOLOCK)
                                                                          WHERE VW3.ID_ENTRAVEVIVA = VW2.ID_ENTRAVEVIVA)), 0) AS QN_TOTAMORTPRIMTURN
                    FROM ENTRADA_AVE_VIVA_TURNO VW1 WITH (NOLOCK)
                   GROUP BY VW1.ID_ENTRAVEVIVA) VW_TOTATURN ON EAV.ID_ENTRAVEVIVA = VW_TOTATURN.ID_ENTRAVEVIVA
       LEFT JOIN DATA_PADRAO_REGISTRO DPR WITH (NOLOCK) ON DPR.ID_REGIDATAPADR = EAV.ID_REGIDATAPADR
       LEFT JOIN ABAT_UNID_ESTR_PENDURA_ESTACAO AUEPE WITH (NOLOCK) ON EAV.ID_ESTAPENDESTRUNIDABAT = AUEPE.ID_ESTAPENDESTRUNIDABAT
       LEFT JOIN ABATE_UNIDADE_ESTRUTURA AUE WITH (NOLOCK) ON AUEPE.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
       LEFT JOIN ABATE_UNIDADE AU WITH (NOLOCK) ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
       LEFT JOIN SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) ON AU.EMPRESA = SPF.EMPRESA AND AU.FILIAL = SPF.FILIAL
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_ENTRADA_AVE_VIVA_TURNO_DETA' AND TYPE = 'V')
    DROP VIEW VW_ENTRADA_AVE_VIVA_TURNO_DETA
//    
CREATE OR ALTER VIEW [dbo].[VW_ENTRADA_AVE_VIVA_TURNO_DETA] AS
SELECT EAVT.ID_ENTRAVEVIVA,
       EAVT.ID_DETAPENDENTRAVEVIVA,
       EAVT.NR_SEQUDETATURNENTRAVEVIVA,
	   EAVT.QN_CABEDETATURNENTRAVEVIVA,
	   EAVT.QN_MORTDETATURNENTRAVEVIVA
  FROM ENTRADA_AVE_VIVA_TURNO_DETA EAVT
 WHERE EAVT.NR_SEQUDETATURNENTRAVEVIVA = (SELECT MIN(EAVT2.NR_SEQUDETATURNENTRAVEVIVA)
                                            FROM ENTRADA_AVE_VIVA_TURNO_DETA EAVT2
                                           WHERE EAVT2.ID_ENTRAVEVIVA = EAVT.ID_ENTRAVEVIVA AND EAVT2.QN_CABEDETATURNENTRAVEVIVA = (SELECT MAX(EAVT3.QN_CABEDETATURNENTRAVEVIVA)
                                                                                                                                      FROM ENTRADA_AVE_VIVA_TURNO_DETA EAVT3
                                                                                                                                     WHERE EAVT3.ID_ENTRAVEVIVA = EAVT2.ID_ENTRAVEVIVA))
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_ENTRADA_AVE_VIVA_TURNO_PRIN' AND TYPE = 'V')
    DROP VIEW VW_ENTRADA_AVE_VIVA_TURNO_PRIN
//    
CREATE OR ALTER VIEW VW_ENTRADA_AVE_VIVA_TURNO_PRIN
AS
SELECT EAVT.ID_ENTRAVEVIVA,
       EAVT.NR_SEQUTURNENTRAVEVIVA,
       EAVT.QN_CABETURNENTRAVEVIVA,
       EAVT.QN_MORTTURNENTRAVEVIVA,
       EAVT.ID_ESTAPENDESTRUNIDABAT
  FROM ENTRADA_AVE_VIVA_TURNO EAVT
 WHERE EAVT.NR_SEQUTURNENTRAVEVIVA = (SELECT MIN(EAVT2.NR_SEQUTURNENTRAVEVIVA)
                                        FROM ENTRADA_AVE_VIVA_TURNO EAVT2
                                       WHERE EAVT2.ID_ENTRAVEVIVA = EAVT.ID_ENTRAVEVIVA
                                         AND EAVT2.QN_CABETURNENTRAVEVIVA = (SELECT MAX(EAVT3.QN_CABETURNENTRAVEVIVA) 
                                                                               FROM ENTRADA_AVE_VIVA_TURNO EAVT3
                                                                              WHERE EAVT3.ID_ENTRAVEVIVA = EAVT2.ID_ENTRAVEVIVA))   
//

-- SQL SERVER --
IF EXISTS (SELECT NAME 
             FROM SYSOBJECTS  
            WHERE NAME = 'VW_ESTOQUE'
              AND TYPE = 'V')
  DROP VIEW VW_ESTOQUE
//
CREATE OR ALTER VIEW VW_ESTOQUE AS
    SELECT 'Estoque' FL_LOCAREGIPROD,
           FL_STATREGIPROD FL_STATREPOREGIPROD,
           PRODUCAO_REGISTRO.EMPRESA,
           PRODUCAO_REGISTRO.FILIAL,
           PRODUCAO_REGISTRO.ID_REGIPROD,
           PRODUCAO_REGISTRO.ID_IDENREGIPROD,
           PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
           1 QN_EMBAREGIPROD,
           COALESCE(PRODUCAO_REGISTRO.QN_TARAEMBAREGIPROD, 0) QN_TARAEMBAREGIPROD,
           COALESCE(PRODUCAO_REGISTRO.QN_TARACOMPREGIPROD, 0) QN_TARACOMPREGIPROD,
           PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD,
           PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
           EMBALAGEM.QN_TARAEMBA,
           PRODUCAO_REGISTRO.ID_MATERIAL,
           PRODUCAO_REGISTRO.ID_EMBALAGEM,
           PRODUCAO_REGISTRO.ID_MATEALMO,
           PRODUCAO_REGISTRO.DT_REGIPROD,
           PRODUCAO_REGISTRO.DT_PADRREGIPROD,
           PRODUCAO_REGISTRO.DT_ELABREGIPROD,
           PRODUCAO_REGISTRO.DT_ENTRTUNEREGIPROD,
           PRODUCAO_REGISTRO.DT_SAIDTUNEREGIPROD,
           PRODUCAO_REGISTRO.DT_BALAREGIPROD,
           PRODUCAO_REGISTRO.ID_BALANCA,
           PRODUCAO_REGISTRO.ID_TRANREGIPROD,
           PRODUCAO_REGISTRO.ID_ALMOXARIFADO,
           PRODUCAO_REGISTRO.FL_DISPREGIPROD,
           PRODUCAO_REGISTRO.ID_ESTRUNIDABAT,
           PRODUCAO_REGISTRO.NR_LOTERASTREGIPROD,
           PRODUCAO_REGISTRO.DT_CONTREGIPROD,
           COALESCE(PRODUCAO_REGISTRO.FL_SEQUREGIPROD,'N') FL_SEQUREGIPROD,
           PRODUCAO_REGISTRO.DT_VALIREGIPROD,
           PRODUCAO_REGISTRO.ID_PALEEXPE,
           COALESCE(PRODUCAO_REGISTRO.FL_SITUREGIPROD,'NM')FL_SITUREGIPROD,
           PRODUCAO_REGISTRO.ID_BATCPROD,
           PRODUCAO_BATCH.NR_BATCPROD,
           PRODUCAO_REGISTRO.ID_TUNEPROD,
           PRODUCAO_REGISTRO.ID_ENTRAVEVIVA,
           COALESCE(PRODUCAO_REGISTRO.QN_PESOQUEBREGIPROD,0) QN_PESOQUEBREGIPROD,
           COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD,0) QN_PESOORIGREGIPROD,
           COALESCE(PRODUCAO_REGISTRO.QN_PRODEMBAREGIPROD,0) QN_PRODEMBAREGIPROD,
           COALESCE(PRODUCAO_REGISTRO.QN_CAIXREGIPROD,0) QN_CAIXREGIPROD,
           PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD,
           PRODUCAO_REGISTRO.DT_LOTERASTREGIPROD,
           PRODUCAO_REGISTRO.ID_HORASECULOTE,
           CASE WHEN LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE IS NOT NULL
                THEN 'LS ' + CAST(LOTE_SECUNDARIO_HORARIO.NR_HORASECULOTE AS VARCHAR(10)) + ' - ' + CONVERT(CHAR(10), PRODUCAO_REGISTRO.DT_PADRREGIPROD, 103)  
                ELSE NULL
                 END GN_LOTESECU,
           LOTE_SECUNDARIO_HORARIO.GN_TAGHORASECULOTE,
           CASE WHEN PRODUCAO_REGISTRO.NR_SEQUTURNREGIPROD IS NOT NULL 
                THEN CAST(PRODUCAO_REGISTRO.NR_SEQUTURNREGIPROD AS VARCHAR(10)) + COALESCE((SELECT TOP 1 SUBSTRING(PT.GN_SEQUTURNPROD, CHARINDEX('º', PT.GN_SEQUTURNPROD), LEN(PT.GN_SEQUTURNPROD))
                                                                                              FROM PRODUCAO_TURNO PT
                                                                                                   JOIN ABATE_UNIDADE_ESTRUTURA AUE ON PT.ID_UNIDABAT = AUE.ID_UNIDABAT
                                                                                             WHERE AUE.ID_ESTRUNIDABAT = PRODUCAO_REGISTRO.ID_ESTRUNIDABAT), 'º')
                ELSE COALESCE(VW_TURNO.GN_SEQUITEMDIARTURNPROD, '1º') 
            END GN_SEQUITEMDIARTURNPROD,
           CASE WHEN PRODUCAO_REGISTRO.NR_SEQUTURNREGIPROD IS NOT NULL 
                THEN 'S' 
                ELSE 'N' 
            END AS FL_TURNMANUREGIPROD
      FROM PRODUCAO_REGISTRO
           LEFT JOIN PRODUCAO_BATCH 
                  ON PRODUCAO_REGISTRO.ID_BATCPROD = PRODUCAO_BATCH.ID_BATCPROD
                JOIN EMBALAGEM
                  ON PRODUCAO_REGISTRO.ID_EMBALAGEM = EMBALAGEM.ID_EMBALAGEM
                JOIN ABATE_UNIDADE_ESTRUTURA
                  ON PRODUCAO_REGISTRO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
           LEFT JOIN (SELECT PRODUCAO_TURNO_DIARIO_ITEM.GN_SEQUITEMDIARTURNPROD,
                             PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAINICITEMDIARTURNPROD,
                             DATEADD(MS, 990, PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAFINAITEMDIARTURNPROD) DT_HORAFINAITEMDIARTURNPROD,
                             PRODUCAO_TURNO_DIARIO.ID_UNIDABAT
                        FROM PRODUCAO_TURNO_DIARIO_ITEM
                             JOIN PRODUCAO_TURNO_DIARIO ON PRODUCAO_TURNO_DIARIO_ITEM.ID_DIARTURNPROD = PRODUCAO_TURNO_DIARIO.ID_DIARTURNPROD) VW_TURNO
                               ON ABATE_UNIDADE_ESTRUTURA.ID_UNIDABAT = VW_TURNO.ID_UNIDABAT
                              AND PRODUCAO_REGISTRO.DT_REGIPROD >= VW_TURNO.DT_HORAINICITEMDIARTURNPROD 
                              AND PRODUCAO_REGISTRO.DT_REGIPROD <= VW_TURNO.DT_HORAFINAITEMDIARTURNPROD
           LEFT JOIN LOTE_SECUNDARIO_HORARIO
                  ON PRODUCAO_REGISTRO.ID_HORASECULOTE = LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE
     WHERE FL_STATREGIPROD IN ('ES', 'SQ', 'TU', 'CR', 'BQ', 'ST')
       AND PRODUCAO_REGISTRO.ID_PRODMATEEMBA <> '9999'
    UNION ALL
    (SELECT 'Repositório' FL_LOCAREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.EMPRESA,
            PRODUCAO_REGISTRO_REPOSITORIO.FILIAL,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_REGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_IDENREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA,
            CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN -1 
                 ELSE 1 
             END QN_EMBAREGIPROD,
            CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARAEMBAREGIPROD, 0) * -1 
                 ELSE COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARAEMBAREGIPROD, 0) 
             END QN_TARAEMBAREGIPROD,
            CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARACOMPREGIPROD, 0) * -1 
                 ELSE COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARACOMPREGIPROD, 0) 
             END QN_TARACOMPREGIPROD,
            CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD * -1 
                 ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD 
             END QN_PESOLIQUREGIPROD,
            CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD * -1 
                 ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD 
             END QN_PESOPADRREGIPROD,
            CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN EMBALAGEM.QN_TARAEMBA * -1 
                 ELSE EMBALAGEM.QN_TARAEMBA 
             END QN_TARAEMBA,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_MATERIAL,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_MATEALMO,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_REGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
            NULL DT_ELABREGIPROD,
            NULL DT_ENTRTUNEREGIPROD,
            NULL DT_SAIDTUNEREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_BALAREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_BALANCA,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_TRANREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_ALMOXARIFADO,
            'S' FL_DISPREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT,
            PRODUCAO_REGISTRO_REPOSITORIO.NR_LOTERASTREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_CONTREGIPROD,
            'N' FL_SEQUREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_VALIREGIPROD,
            0,
            ' ' FL_SITUREGIPROD,
            Null,
            ' ',
            NULL,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_ENTRAVEVIVA,
            NULL,
            NULL,
            0,
            0,
            PRODUCAO_REGISTRO_REPOSITORIO.FL_TIPOUNIDREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_LOTERASTREGIPROD,
            NULL,
            NULL,
            NULL,
            NULL,
            NULL
       FROM PRODUCAO_REGISTRO_REPOSITORIO
                 JOIN EMBALAGEM
                   ON PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM = EMBALAGEM.ID_EMBALAGEM
                 JOIN ABATE_UNIDADE_ESTRUTURA
                   ON PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
      WHERE PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD <> 'DP'
        AND PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA <> '9999'
    UNION ALL
     SELECT 'Repositório' FL_LOCAREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.EMPRESA,
            PRODUCAO_REGISTRO_REPOSITORIO.FILIAL,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_REGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_IDENREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA,
            1 QN_EMBAREGIPROD,
            COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARAEMBAREGIPROD, 0) QN_TARAEMBAREGIPROD,
            COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARACOMPREGIPROD, 0) QN_TARACOMPREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD,
            EMBALAGEM.QN_TARAEMBA,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_MATERIAL,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_MATEALMO,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_REGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
            NULL DT_ELABREGIPROD,
            NULL DT_ENTRTUNEREGIPROD,
            NULL DT_SAIDTUNEREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_BALAREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_BALANCA,
            NULL ID_TRANREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_ALMOXARIFADO,
            'S' FL_DISPREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT,
            PRODUCAO_REGISTRO_REPOSITORIO.NR_LOTERASTREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_CONTREGIPROD,
            'N' FL_SEQUREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_VALIREGIPROD,
            0,
            ' ' FL_SITUREGIPROD,
            Null,
            ' ',
            NULL,
            PRODUCAO_REGISTRO_REPOSITORIO.ID_ENTRAVEVIVA,
            NULL,
            NULL,
            0,
            0,
            PRODUCAO_REGISTRO_REPOSITORIO.FL_TIPOUNIDREGIPROD,
            PRODUCAO_REGISTRO_REPOSITORIO.DT_LOTERASTREGIPROD,
            NULL,
            NULL,
            NULL,
            NULL,
            NULL
       FROM PRODUCAO_REGISTRO_REPOSITORIO
                 JOIN EMBALAGEM
                   ON PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM = EMBALAGEM.ID_EMBALAGEM
                 JOIN ABATE_UNIDADE_ESTRUTURA
                   ON PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
      WHERE PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'DP'
        AND PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA <> '9999'
    )
//
//

IF EXISTS (SELECT TABLE_NAME
             FROM INFORMATION_SCHEMA.VIEWS
            WHERE TABLE_NAME = 'VW_ETIQUETA')
    DROP VIEW VW_ETIQUETA
//

CREATE OR ALTER VIEW VW_ETIQUETA AS
  (SELECT 'T' FL_TIPOETIQ,
          ETQ.ID_CODIETIQ ID_DESIETIQ,
          ETQ.NM_ETIQUETA NM_DESIETIQ,
          ETQ.GN_CODIETIQ GN_CODIREFEDESIETIQ,
          'P' FL_ATIVDESIETIQ,
          NULL DT_ULTIATUADESIETIQ
     FROM ETIQUETA ETQ
  UNION ALL
   SELECT 'D' FL_TIPOETIQ,
          ED.ID_DESIETIQ,
          ED.NM_DESIETIQ,
          ED.GN_CODIREFEDESIETIQ,
          ED.FL_ATIVDESIETIQ,
          ED.DT_ULTIATUADESIETIQ
     FROM ETIQUETA_DESIGN ED
  )
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_EXPECARG_FRETQUIL' AND TYPE = 'V')
    DROP VIEW VW_EXPECARG_FRETQUIL
// 
CREATE OR ALTER VIEW VW_EXPECARG_FRETQUIL
(  ID_CARGEXPE_PRINCIPAL,  
VL_CUSTFRETBRUTQUIL,  
VL_CUSTFRETQUIL,  
VL_CUSTFRETBRUTQUIL_AGRU,  
VL_CUSTFRETQUIL_AGRU ) 

AS 
SELECT VW.ID_CARGEXPE_PRINCIPAL,        
       SUM(VW.VL_CUSTFRETBRUTQUIL) VL_CUSTFRETBRUTQUIL,        
       SUM(VW.VL_CUSTFRETQUIL) VL_CUSTFRETQUIL,        
       SUM(CASE ISNULL(VW.ID_CARGEXPE_AGRU, 0)               
       WHEN 0 THEN 0               
       ELSE (VW.VL_CUSTFRETBRUTQUIL + VW.VL_CUSTFRETBRUTQUIL_AGRU)             
       END) VL_CUSTFRETBRUTQUIL_AGRU,        
       SUM(CASE ISNULL(VW.ID_CARGEXPE_AGRU, 0)               
       WHEN 0 THEN 0               
       ELSE (VW.VL_CUSTFRETQUIL + VW.VL_CUSTFRETQUIL_AGRU)             
       END) VL_CUSTFRETQUIL_AGRU   
 FROM (SELECT EXPEDICAO_CARGA.ID_CARGEXPE,                
              EXPEDICAO_CARGA.ID_CARGEXPE_PRINCIPAL,                
              EXPEDICAO_CARGA.ID_CARGEXPE_AGRU,                
              ISNULL(CASE VW_PEDIVEND.VL_PESOBRUTPEDIVEND                          
                     WHEN 0 THEN 0                          
                     ELSE (ISNULL(VW_FRETE_APONTAMENTO.VL_APONFINAFRET, 0) / VW_PEDIVEND.VL_PESOBRUTPEDIVEND)                        
                      END, 0) VL_CUSTFRETBRUTQUIL,                
              ISNULL((CASE VW_PEDIVEND.VL_PESOLIQUPEDIVEND                           
                      WHEN 0 THEN CASE VW_PEDIVEND.VL_PESOBRUTPEDIVEND                                        
                                  WHEN 0 THEN 0                                         
                                  ELSE (ISNULL(VW_FRETE_APONTAMENTO.VL_APONFINAFRET, 0) / VW_PEDIVEND.VL_PESOBRUTPEDIVEND)                                         
                                   END                           
                                  ELSE (ISNULL(VW_FRETE_APONTAMENTO.VL_APONFINAFRET, 0) / VW_PEDIVEND.VL_PESOLIQUPEDIVEND)                        
                                   END), 0) VL_CUSTFRETQUIL,                
              ISNULL(CASE VW_PEDIVEND_AGRU.VL_PESOBRUTPEDIVEND_AGRU                         
                     WHEN 0 THEN 0                          
                     ELSE (ISNULL(VW_FRETE_APONTAMENTO_AGRU.VL_APONFINAFRET_AGRU, 0) / VW_PEDIVEND_AGRU.VL_PESOBRUTPEDIVEND_AGRU)                         
                      END, 0) VL_CUSTFRETBRUTQUIL_AGRU,                
              ISNULL((CASE VW_PEDIVEND_AGRU.VL_PESOLIQUPEDIVEND_AGRU                           
                      WHEN 0 THEN CASE VW_PEDIVEND_AGRU.VL_PESOBRUTPEDIVEND_AGRU                                         
                                  WHEN 0 THEN 0                                         
                                  ELSE (ISNULL(VW_FRETE_APONTAMENTO_AGRU.VL_APONFINAFRET_AGRU, 0) / VW_PEDIVEND_AGRU.VL_PESOBRUTPEDIVEND_AGRU)                                      
                                   END                           
                                  ELSE (ISNULL(VW_FRETE_APONTAMENTO_AGRU.VL_APONFINAFRET_AGRU, 0) / VW_PEDIVEND_AGRU.VL_PESOLIQUPEDIVEND_AGRU)                        
                                   END), 0) VL_CUSTFRETQUIL_AGRU           
         FROM EXPEDICAO_CARGA                  
              LEFT OUTER JOIN (SELECT VW.ID_CARGEXPE_PRINCIPAL,                                        
                                      SUM(CASE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)                                              
                                          WHEN 0 THEN ISNULL(PV.QN_PESOPEDIVEND, 0)                                               
                                          ELSE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)  
                                           END) VL_PESOBRUTPEDIVEND,                                        
                                      SUM(CASE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)                                           
                                          WHEN 0 THEN ISNULL(PV.QN_PESOPEDIVEND, 0)                                           
                                          ELSE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)                                         
                                           END - ISNULL(PV.QN_PESOPADRDEVOPEDIVEND, 0)) VL_PESOLIQUPEDIVEND                                   
                                 FROM PEDIDO_VENDA PV,                                        
                                      VW_EXPECARG_PEDIVEND VW                                   
                                WHERE PV.ID_PEDIVEND  = VW.ID_PEDIVEND                                    
                                  AND PV.FL_STATPEDIVEND  NOT IN ( 'CN'  , 'ZR'  )                                
                             GROUP BY VW.ID_CARGEXPE_PRINCIPAL) VW_PEDIVEND 
                             ON EXPEDICAO_CARGA.ID_CARGEXPE_PRINCIPAL = VW_PEDIVEND.ID_CARGEXPE_PRINCIPAL                
              LEFT OUTER JOIN (SELECT EC.ID_CARGEXPE_AGRU,                                        
                                      SUM(CASE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)                                              
                                          WHEN 0 THEN ISNULL(PV.QN_PESOPEDIVEND, 0)                                              
                                          ELSE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)                                             
                                           END) VL_PESOBRUTPEDIVEND_AGRU,                                        
                                      SUM(CASE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)                                               
                                          WHEN 0 THEN ISNULL(PV.QN_PESOPEDIVEND, 0)                                               
                                          ELSE ISNULL(PV.QN_PESOPADREXPEPEDIVEND, 0)                                             
                                           END - ISNULL(PV.QN_PESOPADRDEVOPEDIVEND, 0)) VL_PESOLIQUPEDIVEND_AGRU                                   
                                 FROM PEDIDO_VENDA PV,                                        
                                      EXPEDICAO_CARGA EC                                  
                                WHERE EC.ID_CARGEXPE = PV.ID_CARGEXPE                                    
                                  AND PV.FL_STATPEDIVEND NOT IN ('CN', 'ZR')                                 
                             GROUP BY  EC.ID_CARGEXPE_AGRU) VW_PEDIVEND_AGRU  
                             ON EXPEDICAO_CARGA.ID_CARGEXPE_AGRU = VW_PEDIVEND_AGRU.ID_CARGEXPE_AGRU                
              LEFT OUTER JOIN (SELECT FAF.ID_CARGEXPE,                                        
                                      SUM(FAF.VL_APONFINAFRET) VL_APONFINAFRET                                   
                                 FROM FRETE_APONTAMENTO_FINANCEIRO FAF                                  
                             GROUP BY  FAF.ID_CARGEXPE) VW_FRETE_APONTAMENTO  
                             ON EXPEDICAO_CARGA.ID_CARGEXPE = VW_FRETE_APONTAMENTO.ID_CARGEXPE                
              LEFT OUTER JOIN (SELECT FAF.ID_CARGEXPE ID_CARGEXPE_AGRU,                                        
                                      SUM(FAF.VL_APONFINAFRET) VL_APONFINAFRET_AGRU                                   
                                 FROM FRETE_APONTAMENTO_FINANCEIRO FAF                                  
                             GROUP BY FAF.ID_CARGEXPE) VW_FRETE_APONTAMENTO_AGRU  
                             ON EXPEDICAO_CARGA.ID_CARGEXPE_AGRU = VW_FRETE_APONTAMENTO_AGRU.ID_CARGEXPE_AGRU) VW  
                             GROUP BY VW.ID_CARGEXPE_PRINCIPAL
//
//

IF (OBJECT_ID('dbo.VW_FRETMOD4_ORIGDEST') IS NOT NULL ) DROP VIEW dbo.VW_FRETMOD4_ORIGDEST
//

CREATE OR ALTER VIEW dbo.VW_FRETMOD4_ORIGDEST AS 
( 

  SELECT Expedicao_carga.ID_CARGEXPE_PRINCIPAL ID_CARGEXPE, 
         Null ID_ENTRAVEVIVA, 
         Expedicao_carga.ID_MODACALCFRETCARGEXPE ID_MODACALCFRET, 
         Distribuicao_centro_origem.ID_SUBRLOGI ID_SUBRLOGI_ORIGEM, 
         COALESCE(Distribuicao_centro_cross.ID_SUBRLOGI, Pessoa_endereco.ID_SUBRLOGI) ID_SUBRLOGI_DESTINO, 
         'NM' FL_TIPO, 
         Pedido_venda.ID_PEDIVEND 
    FROM PEDIDO_VENDA Pedido_venda 
         LEFT JOIN DISTRIBUICAO_CENTRO Distribuicao_centro_cross 
                ON (Pedido_Venda.ID_CENTDIST_CROSDOCKPEDIVEND = Distribuicao_centro_cross.ID_CENTDIST)
              JOIN PESSOA_ENDERECO Pessoa_endereco
                ON Pedido_venda.ID_ENDEPESS_ENTREGA = Pessoa_endereco.ID_ENDEPESS 
              JOIN EXPEDICAO_CARGA Expedicao_carga
                ON Expedicao_carga.ID_CARGEXPE = Pedido_venda.ID_CARGEXPE 
              JOIN DISTRIBUICAO_CENTRO Distribuicao_centro_origem 
                ON Expedicao_carga.ID_CENTDIST = Distribuicao_centro_origem.ID_CENTDIST
   WHERE Pedido_venda.FL_STATPEDIVEND NOT IN ('ZR', 'CN') 
     AND NOT EXISTS (SELECT PVNF.ID_PEDIVEND 
                       FROM PEDIDO_VENDA_NOTA_FISCAL PVNF 
                                   JOIN NOTA_FISCAL NF
                                   ON PVNF.ID_NOTAFISC = NF.ID_NOTAFISC
                      WHERE PVNF.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND 
                        AND NF.FL_ACAONFENOTAFISC = '4') 
     AND NOT EXISTS (SELECT ID_PEDIVEND 
                       FROM PEDIDO_DEVOLUCAO_VENDA PDV
                      WHERE PDV.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND
                        AND PDV.FL_STATPEDIDEVOVEND IN ('FE', 'LB', 'AD', 'BQ', 'AP')
                        AND PDV.FL_TIPOPEDIDEVOVEND = 'T'
                        AND PDV.FL_TRANFISCPEDIDEVOVEND = 'CNF')
                      
   UNION ALL 
   
   SELECT Expedicao_carga.ID_CARGEXPE_PRINCIPAL ID_CARGEXPE, 
          Null ID_ENTRAVEVIVA, 
          Expedicao_carga.ID_MODACALCFRETCARGEXPE ID_MODACALCFRET, 
          Distribuicao_centro.ID_SUBRLOGI ID_SUBRLOGI_ORIGEM, 
          Pessoa_endereco.ID_SUBRLOGI ID_SUBRLOGI_DESTINO, 
          'CD' FL_TIPO, Pedido_venda.ID_PEDIVEND 
     FROM PEDIDO_VENDA Pedido_venda 
               JOIN PESSOA_ENDERECO Pessoa_endereco
                 ON Pedido_venda.ID_ENDEPESS_ENTREGA = Pessoa_endereco.ID_ENDEPESS
               JOIN EXPEDICAO_CARGA Expedicao_carga
                 ON Expedicao_carga.ID_CARGEXPE = Pedido_venda.ID_CARGEXPE 
               JOIN DISTRIBUICAO_CENTRO Distribuicao_centro
                 ON Pedido_venda.ID_CENTDIST_CROSDOCKPEDIVEND = Distribuicao_centro.ID_CENTDIST
    WHERE Pedido_venda.FL_STATPEDIVEND NOT IN ('ZR', 'CN') 
        AND COALESCE(Pedido_venda.ID_CENTDIST_CROSDOCKPEDIVEND, -1) > 0 
        AND NOT EXISTS (SELECT PVNF.ID_PEDIVEND 
                        FROM PEDIDO_VENDA_NOTA_FISCAL PVNF 
                                 JOIN NOTA_FISCAL NF
                                   ON PVNF.ID_NOTAFISC = NF.ID_NOTAFISC
                       WHERE PVNF.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND 
                         AND NF.FL_ACAONFENOTAFISC = '4') 
        AND NOT EXISTS (SELECT ID_PEDIVEND 
                          FROM PEDIDO_DEVOLUCAO_VENDA PDV
                         WHERE PDV.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND
                           AND PDV.FL_STATPEDIDEVOVEND IN ('FE', 'LB', 'AD', 'BQ', 'AP')
                           AND PDV.FL_TIPOPEDIDEVOVEND = 'T'
                           AND PDV.FL_TRANFISCPEDIDEVOVEND = 'CNF')
                       
   UNION ALL 
 
   SELECT VW_CARGAGRU.ID_CARGEXPE, 
          Null ID_ENTRAVEVIVA, 
          VW_CARGAGRU.ID_MODACALCFRET, 
          VW_CARGAGRU.ID_SUBRLOGI_ORIGEM, 
          VW_CARGAGRU.ID_SUBRLOGI_DESTINO, 
          VW_CARGAGRU.FL_TIPO, 
          VW_CARGAGRU.ID_PEDIVEND 
     FROM (SELECT Expedicao_carga.ID_CARGEXPE_AGRU ID_CARGEXPE, 
                  Null ID_ENTRAVEVIVA, 

                  Expedicao_carga.ID_MODACALCFRETCARGEXPE ID_MODACALCFRET, 

                  Distribuicao_centro.ID_SUBRLOGI ID_SUBRLOGI_ORIGEM, 

                  Distribuicao_centro_cros.ID_SUBRLOGI ID_SUBRLOGI_DESTINO, 
                  'AG' FL_TIPO, 
                  vw_PediVend.ID_PEDIVEND 
             FROM (SELECT DISTINCT PEDIDO_VENDA.ID_CARGEXPE, 
                          PEDIDO_VENDA.ID_PEDIVEND, 
                          PEDIDO_VENDA.ID_CENTDIST_CROSDOCKPEDIVEND 
                     FROM PEDIDO_VENDA 
                    WHERE FL_STATPEDIVEND NOT IN ('ZR', 'CN') 
                        AND NOT EXISTS (SELECT PVNF.ID_PEDIVEND 
                                        FROM PEDIDO_VENDA_NOTA_FISCAL PVNF 
                                                  JOIN NOTA_FISCAL NF
                                                        ON PVNF.ID_NOTAFISC = NF.ID_NOTAFISC
                                       WHERE PVNF.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND 
                                           AND NF.FL_ACAONFENOTAFISC = '4')
                        AND NOT EXISTS (SELECT ID_PEDIVEND 
                                          FROM PEDIDO_DEVOLUCAO_VENDA PDV
                                         WHERE PDV.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND
                                           AND PDV.FL_STATPEDIDEVOVEND IN ('FE', 'LB', 'AD', 'BQ', 'AP')
                                           AND PDV.FL_TIPOPEDIDEVOVEND = 'T'
                                           AND PDV.FL_TRANFISCPEDIDEVOVEND = 'CNF')) vw_PediVend 
                       JOIN EXPEDICAO_CARGA Expedicao_carga
                         ON Expedicao_carga.ID_CARGEXPE = vw_PediVend.ID_CARGEXPE
                          JOIN DISTRIBUICAO_CENTRO Distribuicao_centro
                         ON Expedicao_carga.ID_CENTDIST = Distribuicao_centro.ID_CENTDIST 
                       JOIN DISTRIBUICAO_CENTRO Distribuicao_centro_cros 
                         ON vw_PediVend.ID_CENTDIST_CROSDOCKPEDIVEND = Distribuicao_centro_cros.ID_CENTDIST
      
    UNION 

    SELECT Expedicao_carga.ID_CARGEXPE_AGRU ID_CARGEXPE, 
           Null ID_ENTRAVEVIVA, 
           Expedicao_carga.ID_MODACALCFRETCARGEXPE ID_MODACALCFRET, 
             Distribuicao_centro.ID_SUBRLOGI ID_SUBRLOGI_ORIGEM, 
           Pessoa_endereco.ID_SUBRLOGI  ID_SUBRLOGI_DESTINO, 
           'AG' FL_TIPO, 
           Pedido_venda.ID_PEDIVEND 
      FROM PEDIDO_VENDA
                JOIN EXPEDICAO_CARGA Expedicao_carga
                  ON Pedido_venda.ID_CARGEXPE = Expedicao_carga.ID_CARGEXPE
                JOIN DISTRIBUICAO_CENTRO Distribuicao_centro
                  ON Expedicao_carga.ID_CENTDIST = Distribuicao_centro.ID_CENTDIST
                JOIN PESSOA_ENDERECO Pessoa_endereco 
                  ON Pedido_venda.ID_ENDEPESS_ENTREGA = Pessoa_endereco.ID_ENDEPESS
     WHERE COALESCE(Pedido_venda.ID_CENTDIST_CROSDOCKPEDIVEND, 0) = 0 
       AND Pedido_venda.FL_STATPEDIVEND NOT IN ('ZR', 'CN') 
       AND NOT EXISTS (SELECT PVNF.ID_PEDIVEND 
                         FROM PEDIDO_VENDA_NOTA_FISCAL PVNF 
                                 JOIN NOTA_FISCAL NF
                                     ON PVNF.ID_NOTAFISC = NF.ID_NOTAFISC
                        WHERE PVNF.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND 
                             AND NF.FL_ACAONFENOTAFISC = '4')
       AND NOT EXISTS (SELECT ID_PEDIVEND 
                         FROM PEDIDO_DEVOLUCAO_VENDA PDV
                        WHERE PDV.ID_PEDIVEND = Pedido_venda.ID_PEDIVEND
                          AND PDV.FL_STATPEDIDEVOVEND IN ('FE', 'LB', 'AD', 'BQ', 'AP')
                          AND PDV.FL_TIPOPEDIDEVOVEND = 'T'
                          AND PDV.FL_TRANFISCPEDIDEVOVEND = 'CNF')) VW_CARGAGRU 
                            
  UNION ALL
                
  SELECT Null ID_CARGEXPE,
         Entrada_ave_viva.ID_ENTRAVEVIVA,
           Entrada_ave_viva.ID_MODACALCFRETFRAGVIVO ID_MODACALCFRET,
         Sistema_filial.ID_SUBRLOGI ID_SUBRLOGI_ORIGEM,
         Pessoa_endereco.ID_SUBRLOGI ID_SUBRLOGI_DESTINO,
         'EA' FL_TIPO,
         Null ID_PEDIVEND
    FROM ENTRADA_AVE_VIVA Entrada_ave_viva
              JOIN GRANJA_PROPRIEDADE Granja_propriedade
                ON Granja_propriedade.ID_PROPGRAN = Entrada_ave_viva.ID_PROPGRAN
              JOIN PESSOA_ENDERECO Pessoa_endereco
                ON Granja_propriedade.ID_ENDEPESS = Pessoa_endereco.ID_ENDEPESS 
              JOIN SISTEMA_FILIAL Sistema_filial
                ON Sistema_filial.EMPRESA = Entrada_ave_viva.EMPRESA
               AND Sistema_filial.FILIAL = Entrada_ave_viva.FILIAL
              JOIN FORNECEDOR Fornecedor
                ON Granja_propriedade.ID_FORNECEDOR_INTEGRADO = Fornecedor.ID_FORNECEDOR                    

                                                                                        
         
)       
//

IF (OBJECT_ID('dbo.VW_GALPORDEPESAINTE') IS NOT NULL ) DROP VIEW dbo.VW_GALPORDEPESAINTE
//

CREATE OR ALTER VIEW VW_GALPORDEPESAINTE AS
SELECT DISTINCT
       POG.ID_ORDEPESA,
       COALESCE(POG.NM_REALGALPORDEPESA, ' ') AS NM_GALPORDEPESA,
       COALESCE(POG.NR_ANIMGAIOREALGALPORDEPESA, 0) AS NR_ANIMGAIOGALPORDEPESA,
       COALESCE(POG.QN_GAIOREALGALPORDEPESA, 0) AS QN_GAIOGALPORDEPESA,
       COALESCE(POG.QN_CABEREALGALPORDEPESA, 0) AS QN_CABEGALPORDEPESA,
       CASE WHEN POG.DT_RETIALIMREALGALPORDEPESA <= CAST(0 AS DATETIME) THEN NULL ELSE POG.DT_RETIALIMREALGALPORDEPESA END AS DT_RETIALIMGALPORDEPESA,
	   0 AS QN_CABEFEMEENTRAVEVIVAGALP,
       0 AS QN_CABEMACHENTRAVEVIVAGALP,
	   0 AS QN_CABEMISTENTRAVEVIVAGALP,
	   '' AS FL_ULTIGALPENTRAVEVIVAGALP
  FROM PESAGEM_ORDEM_GALPAO POG,
       PESAGEM_ORDEM PO,
	   ENTRADA_AVE_VIVA EAV
 WHERE POG.ID_ORDEPESA = PO.ID_ORDEPESA
   AND PO.ID_ENTRAVEVIVA = EAV.ID_ENTRAVEVIVA
   AND (CASE
          WHEN ((COALESCE(PO.FL_FINAHANDHELDORDEPESA, 'N') = 'S') AND
                (PO.DT_LIBEMTECHANDHELDORDEPESA >= PO.DT_FINAHANDHELDORDEPESA) AND
                (PO.ID_USUASIST_LIBEMTEC IS NULL)) THEN 'H'
          ELSE 'E'
        END) = 'H'
   AND COALESCE(POG.QN_CABEREALGALPORDEPESA, 0) > 0
UNION ALL
SELECT DISTINCT
       PO.ID_ORDEPESA,
       COALESCE(EAVG.NR_GALPENTRAVEVIVAGALP, ' ') AS NM_GALPORDEPESA,
       COALESCE(ROUND(EAVG.QN_CABEENTRAVEVIVAGALP / EAVG.QN_GAIOENTRAVEVIVAGALP, 0), 0) AS NR_ANIMGAIOGALPORDEPESA,
       COALESCE(EAVG.QN_GAIOENTRAVEVIVAGALP, 0) AS QN_GAIOGALPORDEPESA,
       COALESCE(EAVG.QN_CABEENTRAVEVIVAGALP, 0) AS QN_CABEGALPORDEPESA,
       CASE WHEN EAVG.DT_RETIALIMENTRAVEVIVAGALP <= CAST(0 AS DATETIME) THEN NULL ELSE EAVG.DT_RETIALIMENTRAVEVIVAGALP END AS DT_RETIALIMGALPORDEPESA,
	   EAVG.QN_CABEFEMEENTRAVEVIVAGALP AS QN_CABEFEMEENTRAVEVIVAGALP,
       EAVG.QN_CABEMACHENTRAVEVIVAGALP AS QN_CABEMACHENTRAVEVIVAGALP,
	   EAVG.QN_CABEMISTENTRAVEVIVAGALP AS QN_CABEMISTENTRAVEVIVAGALP,
	   EAVG.FL_ULTIGALPENTRAVEVIVAGALP AS FL_ULTIGALPENTRAVEVIVAGALP
  FROM ENTRADA_AVE_VIVA_GALPAO EAVG,
       PESAGEM_ORDEM PO,
	   ENTRADA_AVE_VIVA EAV
 WHERE EAVG.ID_ENTRAVEVIVA = PO.ID_ENTRAVEVIVA
   AND PO.ID_ENTRAVEVIVA = EAV.ID_ENTRAVEVIVA
   AND (CASE
          WHEN ((COALESCE(PO.FL_FINAHANDHELDORDEPESA, 'N') = 'S') AND
                (PO.DT_LIBEMTECHANDHELDORDEPESA >= PO.DT_FINAHANDHELDORDEPESA) AND
                (PO.ID_USUASIST_LIBEMTEC IS NULL)) THEN 'H'
          ELSE 'E'
        END) = 'E'
   AND COALESCE(EAVG.QN_CABEENTRAVEVIVAGALP, 0) > 0
   AND COALESCE(EAVG.QN_GAIOENTRAVEVIVAGALP, 0) > 0
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_ICMS_SUBSTITUICAO_TITULO' AND type = 'V')
    DROP VIEW VW_ICMS_SUBSTITUICAO_TITULO
//	
CREATE OR ALTER VIEW VW_ICMS_SUBSTITUICAO_TITULO AS 
SELECT NF.VL_NOTAFISC VL_NOTAFISC_COMST,
       PV.ID_PEDIVEND,
       FPP.NR_PARCFORMPAGA,
       CASE FPP.NR_PARCFORMPAGA 
       WHEN 1 THEN (ISNULL((SELECT SUM(NFBI.VL_ICMSSTICMSNOTAFISC)
                              FROM NOTA_FISCAL_BASE_ICMS NFBI 
                             WHERE NFBI.ID_NOTAFISC  = NF.ID_NOTAFISC), 0) * FPP.PC_PARCFORMPAGA / 100) + 
                   ISNULL((SELECT SUM((ISNULL(VW_NOTA_FISCAL_BASE_ICMS.VL_ICMSSTICMSNOTAFISC, 0) * FORMA_PAGAMENTO_PARCELA.PC_PARCFORMPAGA / 100) - 
                                      (ROUND((ISNULL(VW_NOTA_FISCAL_BASE_ICMS.VL_ICMSSTICMSNOTAFISC, 0) * FORMA_PAGAMENTO_PARCELA.PC_PARCFORMPAGA / 100), 2, 1)))
                             FROM FORMA_PAGAMENTO,
                                  FORMA_PAGAMENTO_PARCELA,
                                  (SELECT NFBI.ID_NOTAFISC,
                                          SUM(NFBI.VL_ICMSSTICMSNOTAFISC) VL_ICMSSTICMSNOTAFISC
                                     FROM NOTA_FISCAL_BASE_ICMS NFBI
                                   GROUP BY NFBI.ID_NOTAFISC) VW_NOTA_FISCAL_BASE_ICMS								  
                            WHERE VW_NOTA_FISCAL_BASE_ICMS.ID_NOTAFISC = NF.ID_NOTAFISC 
							  AND PV.ID_FORMPAGA  = FORMA_PAGAMENTO.ID_FORMPAGA
                              AND FORMA_PAGAMENTO.ID_FORMPAGA  = FORMA_PAGAMENTO_PARCELA.ID_FORMPAGA
                              AND FORMA_PAGAMENTO_PARCELA.NR_PARCFORMPAGA <> 1), 0) 
       ELSE (ROUND((ISNULL((SELECT SUM(NFBI.VL_ICMSSTICMSNOTAFISC)
                              FROM NOTA_FISCAL_BASE_ICMS NFBI
                             WHERE NFBI.ID_NOTAFISC = NF.ID_NOTAFISC), 0) * FPP.PC_PARCFORMPAGA / 100), 2, 1)) 
       END VL_ICMSSTTITURECE,       
       CASE FPP.NR_PARCFORMPAGA 
         WHEN 1 THEN (ISNULL((SELECT SUM(ISNULL(PDV.VL_ICMSSTQUEBPEDIDEVOVEND, 0) + ISNULL(PDV.VL_ICMSSTDEVOPEDIDEVOVEND, 0))
                                FROM PEDIDO_DEVOLUCAO_VENDA PDV
                               WHERE PDV.ID_PEDIVEND = PV.ID_PEDIVEND
                                 AND (ISNULL(PDV.FL_BLOQAJUSFINAPEDIDEVOVEND, 'N')  = 'S' OR ISNULL(PDV.FL_CONFPEDIDEVOVEND, 'S')  = 'N')
                                 AND PDV.FL_STATPEDIDEVOVEND  = 'FE'), 0) * FPP.PC_PARCFORMPAGA / 100) + 
                     ISNULL((SELECT SUM((VW_PEDIDO_DEVOLUCAO_VENDA.VL_ICMSDEVOPEDIDEVOVEND * FORMA_PAGAMENTO_PARCELA.PC_PARCFORMPAGA / 100) - 
										(ROUND((VW_PEDIDO_DEVOLUCAO_VENDA.VL_ICMSDEVOPEDIDEVOVEND * FORMA_PAGAMENTO_PARCELA.PC_PARCFORMPAGA / 100), 2, 1)))
                               FROM FORMA_PAGAMENTO,
                                    FORMA_PAGAMENTO_PARCELA,
									(SELECT ID_PEDIVEND,
									        SUM(ISNULL(PDV.VL_ICMSSTQUEBPEDIDEVOVEND, 0) + ISNULL(PDV.VL_ICMSSTDEVOPEDIDEVOVEND, 0)) VL_ICMSDEVOPEDIDEVOVEND
                                       FROM PEDIDO_DEVOLUCAO_VENDA PDV
                                      WHERE (ISNULL(PDV.FL_BLOQAJUSFINAPEDIDEVOVEND, 'N')  = 'S' OR ISNULL(PDV.FL_CONFPEDIDEVOVEND, 'S')  = 'N')
                                        AND PDV.FL_STATPEDIDEVOVEND  = 'FE'
									GROUP BY ID_PEDIVEND) VW_PEDIDO_DEVOLUCAO_VENDA
                              WHERE VW_PEDIDO_DEVOLUCAO_VENDA.ID_PEDIVEND = PV.ID_PEDIVEND
							    AND PV.ID_FORMPAGA  = FP.ID_FORMPAGA
                                AND FP.ID_FORMPAGA  = FPP.ID_FORMPAGA
                                AND FPP.NR_PARCFORMPAGA  <> 1), 0) 
         ELSE (ROUND((ISNULL((SELECT SUM(ISNULL(PDV.VL_ICMSSTQUEBPEDIDEVOVEND, 0) + ISNULL(PDV.VL_ICMSSTDEVOPEDIDEVOVEND, 0))
                                FROM PEDIDO_DEVOLUCAO_VENDA PDV 
                               WHERE PDV.ID_PEDIVEND  = PV.ID_PEDIVEND
                                 AND (ISNULL(PDV.FL_BLOQAJUSFINAPEDIDEVOVEND, 'N')  = 'S' OR ISNULL(PDV.FL_CONFPEDIDEVOVEND, 'S')  = 'N')
                                 AND PDV.FL_STATPEDIDEVOVEND  = 'FE'), 0) * FPP.PC_PARCFORMPAGA / 100), 2, 1)) 
       END VL_ICMSSTDEVOTITURECE	   
  FROM NOTA_FISCAL NF,
       PEDIDO_VENDA_NOTA_FISCAL PVNF,
       PEDIDO_VENDA PV,
       FORMA_PAGAMENTO FP,
       FORMA_PAGAMENTO_PARCELA FPP 
 WHERE NF.ID_NOTAFISC = PVNF.ID_NOTAFISC
   AND PVNF.ID_PEDIVEND = PV.ID_PEDIVEND
   AND NF.FL_CANCNOTAFISC <> 'S'
   AND PV.ID_FORMPAGA = FP.ID_FORMPAGA
   AND FP.ID_FORMPAGA = FPP.ID_FORMPAGA
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_LOTE_INSPECAO' AND TYPE = 'V')
    DROP VIEW VW_LOTE_INSPECAO
// 
CREATE OR ALTER VIEW VW_LOTE_INSPECAO AS
SELECT VW.ID_LOTEINSP,
       VW.ID_HORASECULOTE,
       VW.DT_PADRLOTEINSP,
       VW.ID_PRODMATEEMBA,
       VW.ID_UNIDABAT,
       VW.FILIAL

FROM

(SELECT Inspecao_lote.ID_LOTEINSP,
        Inspecao_lote_lote_secu.ID_HORASECULOTE,
        Inspecao_lote.DT_PADRLOTEINSP,
        COALESCE(Inspecao_lote.ID_PRODMATEEMBA, VW_MULTPROD.ID_MULTPRODMATEEMBA) ID_PRODMATEEMBA,
        Inspecao_lote.ID_UNIDABAT,
        Inspecao_lote.FILIAL
   FROM INSPECAO_LOTE Inspecao_lote
        JOIN INSPECAO_LOTE_LOTE_SECU Inspecao_lote_lote_secu 
          ON Inspecao_lote.ID_LOTEINSP = Inspecao_lote_lote_secu.ID_LOTEINSP
         AND Inspecao_lote_lote_secu.FL_ATIVLOTESECULOTEINSP = 'S'             
        LEFT JOIN (SELECT DISTINCT ID_PRODMATEEMBA AS ID_MULTPRODMATEEMBA,
                          Inspecao_lote_produto.ID_LOTEINSP 
                     FROM INSPECAO_LOTE_PRODUTO Inspecao_lote_produto) VW_MULTPROD
                       ON Inspecao_lote.ID_LOTEINSP = VW_MULTPROD.ID_LOTEINSP
  WHERE COALESCE(Inspecao_lote.FL_STATLOTEINSP, 'AT') = 'AT'                      
     ) VW
//  

If Exists ( SELECT name 
            FROM sysobjects  
            WHERE name = 'VW_MANUTENCAO_ETIQUETA'
            AND type = 'V')
	DROP VIEW VW_MANUTENCAO_ETIQUETA
//

CREATE OR ALTER VIEW VW_MANUTENCAO_ETIQUETA          (EMPRESA,
                                             FILIAL,
                                             ID_REGIPROD,  
                                             ID_IDENREGIPROD,  
                                             FL_STATREGIPROD,  
                                             QN_PESOLIQUREGIPROD,  
                                             QN_PESOLIQUANTE,  
                                             DT_PADRREGIPROD,  
                                             DT_BALAREGIPROD,  
                                             DT_MOVIREGIPROD,  
                                             GN_HISTMOVIREGIPROD,  
                                             FL_OPERMOVIREGIPROD,  
                                             NR_BALANCA,  
                                             ID_USUASIST_BALANCA,  
                                             NM_USUASIST_BALANCA,  
                                             ID_USUASIST_MANUTENCAO,          
                                             NM_USUASIST_MANUTENCAO,  
                                             ID_PRODMATEEMBA,  
                                             ID_PRODANTE,  
                                             NM_PRODMATEEMBA,  
                                             NM_PRODANTE,  
                                             NR_LOTERASTREGIPROD,  
                                             NR_LOTERASTANTE  ) 
AS (SELECT Almoxarifado.EMPRESA,
            Almoxarifado.FILIAL,
            Producao_registro.ID_REGIPROD,         
            Producao_registro.ID_IDENREGIPROD,         
            Producao_registro.FL_STATREGIPROD,         
            Producao_registro.QN_PESOLIQUREGIPROD,         
            Producao_registro.QN_PESOLIQUREGIPROD QN_PESOLIQUANTE,         
            Producao_registro.DT_PADRREGIPROD,         
            Producao_registro.DT_BALAREGIPROD,         
            Producao_registro_movimentacao.DT_MOVIREGIPROD,         
            Producao_registro_movimentacao.GN_HISTMOVIREGIPROD,         
            Producao_registro_movimentacao.FL_OPERMOVIREGIPROD,         
            Producao_balanca.NR_BALANCA,         
            Sistema_usuario_balanca.ID_USUASIST ID_USUASIST_BALANCA,         
            Sistema_usuario_balanca.NM_USUASIST NM_USUASIST_BALANCA,         
            Sistema_usuario_manutencao.ID_USUASIST ID_USUASIST_MANUTENCAO,                 
            Sistema_usuario_manutencao.NM_USUASIST NM_USUASIST_MANUTENCAO,                  
            MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,                         
            CASE COALESCE((SELECT ME.ID_PRODMATEEMBA                         
                           FROM PRODUCAO_REGISTRO_MOVIMENTACAO PRM,                              
                                MATERIAL_EMBALAGEM ME                       
                           WHERE PRM.ID_MOVIREGIPROD = Producao_registro_movimentacao.ID_MOVIREGIPROD 
                             AND ME.ID_PRODMATEEMBA = (SUBSTRING(PRM.GN_HISTMOVIREGIPROD, dbo.INSTR(PRM.GN_HISTMOVIREGIPROD, ':', 1, 1) +2, 4))), '0000')           
            WHEN '0000' THEN MATERIAL_EMBALAGEM.ID_PRODMATEEMBA           
            ELSE (SELECT ME.ID_PRODMATEEMBA                   
                  FROM PRODUCAO_REGISTRO_MOVIMENTACAO PRM,                        
                       MATERIAL_EMBALAGEM ME                 
                  WHERE PRM.ID_MOVIREGIPROD = Producao_registro_movimentacao.ID_MOVIREGIPROD                   
                    AND ME.ID_PRODMATEEMBA = (SUBSTRING(PRM.GN_HISTMOVIREGIPROD, dbo.INSTR(PRM.GN_HISTMOVIREGIPROD, ':', 1, 1) +2, 4)))         
            END ID_PRODANTE,                  
            MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,                  
            CASE COALESCE((SELECT ME.ID_PRODMATEEMBA                         
                           FROM PRODUCAO_REGISTRO_MOVIMENTACAO PRM,                              
                                MATERIAL_EMBALAGEM ME                       
                           WHERE PRM.ID_MOVIREGIPROD = Producao_registro_movimentacao.ID_MOVIREGIPROD                         
                             AND ME.ID_PRODMATEEMBA = (SUBSTRING(PRM.GN_HISTMOVIREGIPROD, dbo.INSTR(PRM.GN_HISTMOVIREGIPROD, ':', 1, 1) +2, 4))), '0000')           
            WHEN '0000' THEN MATERIAL_EMBALAGEM.NM_PRODMATEEMBA           
            ELSE (SELECT ME.NM_PRODMATEEMBA                   
                  FROM PRODUCAO_REGISTRO_MOVIMENTACAO PRM,                        
                       MATERIAL_EMBALAGEM ME                 
                  WHERE PRM.ID_MOVIREGIPROD = Producao_registro_movimentacao.ID_MOVIREGIPROD                   
                    AND ME.ID_PRODMATEEMBA = (SUBSTRING(PRM.GN_HISTMOVIREGIPROD, dbo.INSTR(PRM.GN_HISTMOVIREGIPROD, ':', 1, 1) +2, 4)))         
            END NM_PRODANTE,  
            Producao_registro.NR_LOTERASTREGIPROD,                  
            CASE SIGN(dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 2))           
            WHEN 0 THEN 
                   CASE COALESCE((SELECT ME.ID_PRODMATEEMBA                                        
                                  FROM PRODUCAO_REGISTRO_MOVIMENTACAO PRM,                                             
                                       MATERIAL_EMBALAGEM ME                                       
                                  WHERE PRM.ID_MOVIREGIPROD = Producao_registro_movimentacao.ID_MOVIREGIPROD                                         
                                    AND ME.ID_PRODMATEEMBA = (SUBSTRING(PRM.GN_HISTMOVIREGIPROD, dbo.INSTR(PRM.GN_HISTMOVIREGIPROD, ':', 1, 1) +2, 4))), '0000')                         
                   WHEN '0000' THEN CASE WHEN dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ')', 1, 1) - (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 1) + 2) < 0 THEN NULL
                                    ELSE SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 1) + 2, dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ')', 1, 1) - (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 1) + 2)) END
                   ELSE Producao_registro.NR_LOTERASTREGIPROD                       
                   END 
            ELSE CASE WHEN dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ')', 1, 2) - (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 2) + 2) < 0 THEN NULL
              ELSE SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 2) + 2, dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ')', 1, 2) - (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 2) + 2)) END
            END NR_LOTERASTANTE             
FROM PRODUCAO_REGISTRO Producao_registro,         
     PRODUCAO_REGISTRO_MOVIMENTACAO Producao_registro_movimentacao,         
     MATERIAL_EMBALAGEM Material_embalagem,         
     PRODUCAO_BALANCA Producao_balanca,         
     SISTEMA_USUARIO Sistema_usuario_balanca,         
     SISTEMA_USUARIO Sistema_usuario_manutencao,
     ALMOXARIFADO Almoxarifado	 	 
WHERE Producao_registro_movimentacao.ID_REGIPROD = Producao_registro.ID_REGIPROD     
  AND Material_embalagem.ID_MATERIAL = Producao_registro.ID_MATERIAL     
  AND Material_embalagem.ID_EMBALAGEM = Producao_registro.ID_EMBALAGEM     
  AND Producao_balanca.ID_BALANCA = Producao_registro.ID_BALANCA     
  AND Sistema_usuario_balanca.ID_USUASIST = Producao_registro.ID_USUASIST_REGIPROD     
  AND Sistema_usuario_manutencao.ID_USUASIST = Producao_registro_movimentacao.ID_USUASIST 
  AND Almoxarifado.ID_ALMOXARIFADO = Producao_registro.ID_ALMOXARIFADO  
  AND Producao_registro_movimentacao.FL_OPERMOVIREGIPROD IN ('MP','LR')
UNION ALL   
SELECT Almoxarifado.EMPRESA,
       Almoxarifado.FILIAL,
       Producao_registro.ID_REGIPROD,         
       Producao_registro.ID_IDENREGIPROD,         
       Producao_registro.FL_STATREGIPROD,         
       Producao_registro.QN_PESOLIQUREGIPROD,                  
       CASE  WHEN Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%-%' and Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%Anterior:%' AND 
                 Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%Simula%' and  Producao_registro_movimentacao.GN_HISTMOVIREGIPROD NOT LIKE '%- Usu%'   
            THEN CONVERT(NUMERIC(10,3),REPLACE(REPLACE(SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 'Anterior:', 1, 1) + 10, (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, '- Sim', 1, 1)) -
                 (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 'Anterior:', 1, 1) + 10) ), ',', '.'), ')', ''))
            WHEN Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%-%' and Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%Anterior:%' and 
                 Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%Usu%' --then 0
            THEN CONVERT(NUMERIC(10,3),REPLACE(REPLACE(SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 
                dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 'Anterior:', 1, 1) + 10, (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, '- Usu', 1, 1)) -
                 (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 'Anterior:', 1, 1) + 10) ), ',', '.'), ')', ''))
	        WHEN Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%/%'
            THEN CONVERT(NUMERIC(10, 3), REPLACE(REPLACE(SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 1) + 2, 
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD,' ',1,1)-8),')',''),',','.')) 
	        WHEN Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%) - %'
            THEN CONVERT(NUMERIC(10, 3), REPLACE(REPLACE(SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':', 1, 1) + 2, 
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD,' ',1,1)-4),')',''),',','.')) 
            WHEN Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%.:%'
            THEN CONVERT(NUMERIC(10, 3), (REPLACE(SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD,    
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, '.:',1,1)+3,
                 ((dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ' ',1,1)-3))),',','.')))
            WHEN Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%-%' and Producao_registro_movimentacao.GN_HISTMOVIREGIPROD LIKE '%Tara Anterior:%'
            THEN CONVERT(NUMERIC(10,3),REPLACE(REPLACE(SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 'Anterior:', 1, 1) + 10, (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 'Tara Anterior', 1, 1)) -
                 (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 'Anterior:', 1, 1) + 10) ), ',', '.'), ')', ''))
            ELSE CONVERT(NUMERIC(10, 3), REPLACE((REPLACE(SUBSTRING(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, 
                 dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':',1,1) + 2, 
                 (LEN(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD)+1) - 
                 (dbo.INSTR(Producao_registro_movimentacao.GN_HISTMOVIREGIPROD, ':',1,1) + 2)), ')', '')),',','.'))   
	         END QN_PESOLIQUANTE,
       Producao_registro.DT_PADRREGIPROD,                 
       Producao_registro.DT_BALAREGIPROD,         
       Producao_registro_movimentacao.DT_MOVIREGIPROD,         
       Producao_registro_movimentacao.GN_HISTMOVIREGIPROD,         
       Producao_registro_movimentacao.FL_OPERMOVIREGIPROD,         
       Producao_balanca.NR_BALANCA,         
       Sistema_usuario_balanca.ID_USUASIST ID_USUASIST_BALANCA,         
       Sistema_usuario_balanca.NM_USUASIST NM_USUASIST_BALANCA,         
       Sistema_usuario_manutencao.ID_USUASIST ID_USUASIST_MANUTENCAO,                 
       Sistema_usuario_manutencao.NM_USUASIST NM_USUASIST_MANUTENCAO,         
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,	            
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA ID_PRODANTE,                
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,         
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA NM_PRODANTE,   
       Producao_registro.NR_LOTERASTREGIPROD,         
       Producao_registro.NR_LOTERASTREGIPROD NR_LOTERASTANTE             
FROM PRODUCAO_REGISTRO Producao_registro,         
     PRODUCAO_REGISTRO_MOVIMENTACAO Producao_registro_movimentacao,         
     MATERIAL_EMBALAGEM Material_embalagem,         
     PRODUCAO_BALANCA Producao_balanca,         
     SISTEMA_USUARIO Sistema_usuario_balanca,         
     SISTEMA_USUARIO Sistema_usuario_manutencao,
	 ALMOXARIFADO Almoxarifado	 
WHERE Producao_registro_movimentacao.ID_REGIPROD = Producao_registro.ID_REGIPROD     
  AND Material_embalagem.ID_MATERIAL = Producao_registro.ID_MATERIAL     
  AND Material_embalagem.ID_EMBALAGEM = Producao_registro.ID_EMBALAGEM     
  AND Producao_balanca.ID_BALANCA = Producao_registro.ID_BALANCA     
  AND Sistema_usuario_balanca.ID_USUASIST = Producao_registro.ID_USUASIST_REGIPROD     
  AND Sistema_usuario_manutencao.ID_USUASIST = Producao_registro_movimentacao.ID_USUASIST
  AND Almoxarifado.ID_ALMOXARIFADO = Producao_registro.ID_ALMOXARIFADO  
  AND Producao_registro_movimentacao.FL_OPERMOVIREGIPROD = 'RS'       
UNION ALL   
SELECT Almoxarifado.EMPRESA,
       Almoxarifado.FILIAL,
       Producao_registro.ID_REGIPROD,         
       Producao_registro.ID_IDENREGIPROD,         
       Producao_registro.FL_STATREGIPROD,         
       Producao_registro.QN_PESOLIQUREGIPROD,         
       Producao_registro.QN_PESOLIQUREGIPROD QN_PESOLIQUANTE,         
       Producao_registro.DT_PADRREGIPROD,                 
       Producao_registro.DT_BALAREGIPROD,         
       Producao_registro_movimentacao.DT_MOVIREGIPROD,         
       Producao_registro_movimentacao.GN_HISTMOVIREGIPROD,         
       Producao_registro_movimentacao.FL_OPERMOVIREGIPROD,         
       Producao_balanca.NR_BALANCA,         
       Sistema_usuario_balanca.ID_USUASIST ID_USUASIST_BALANCA,         
       Sistema_usuario_balanca.NM_USUASIST NM_USUASIST_BALANCA,         
       Sistema_usuario_manutencao.ID_USUASIST ID_USUASIST_MANUTENCAO,                 
       Sistema_usuario_manutencao.NM_USUASIST NM_USUASIST_MANUTENCAO,                
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,                
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA ID_PRODANTE,         
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,         
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA NM_PRODANTE,         
       Producao_registro.NR_LOTERASTREGIPROD,         
       Producao_registro.NR_LOTERASTREGIPROD NR_LOTERASTANTE             
FROM PRODUCAO_REGISTRO Producao_registro,         
     PRODUCAO_REGISTRO_MOVIMENTACAO Producao_registro_movimentacao,         
     MATERIAL_EMBALAGEM Material_embalagem,         
     PRODUCAO_BALANCA Producao_balanca,         
     SISTEMA_USUARIO Sistema_usuario_balanca,         
     SISTEMA_USUARIO Sistema_usuario_manutencao,
	 ALMOXARIFADO Almoxarifado	 
WHERE Producao_registro_movimentacao.ID_REGIPROD = Producao_registro.ID_REGIPROD     
  AND Material_embalagem.ID_MATERIAL = Producao_registro.ID_MATERIAL     
  AND Material_embalagem.ID_EMBALAGEM = Producao_registro.ID_EMBALAGEM     
  AND Producao_balanca.ID_BALANCA = Producao_registro.ID_BALANCA     
  AND Sistema_usuario_balanca.ID_USUASIST = Producao_registro.ID_USUASIST_REGIPROD     
  AND Sistema_usuario_manutencao.ID_USUASIST = Producao_registro_movimentacao.ID_USUASIST     
  AND Almoxarifado.ID_ALMOXARIFADO = Producao_registro.ID_ALMOXARIFADO
  AND Producao_registro_movimentacao.FL_OPERMOVIREGIPROD = 'CL')
//

IF EXISTS (SELECT TABLE_NAME
             FROM INFORMATION_SCHEMA.VIEWS
            WHERE TABLE_NAME = 'VW_MATEEMBAFILI_DESIETIQ')
    DROP VIEW VW_MATEEMBAFILI_DESIETIQ
//

CREATE OR ALTER VIEW VW_MATEEMBAFILI_DESIETIQ AS
  SELECT VW_ETIQINFO.EMPRESA,
         VW_ETIQINFO.FILIAL,
         VW_ETIQINFO.ID_MATEEMBAFILI,
         VW_ETIQINFO.ID_DEFIMATEEMBA,
         VW_ETIQINFO.FL_TIPOMODEETIQ,
         VW_ETIQINFO.ID_MODEETIQMATEEMBAFILI,
         MED.ID_PRODDEFIMATEEMBA,
         MED.NM_PRODDEFIMATEEMBA,
         MED.NM_PRODREDUDEFIMATEEMBA,
         SF.NM_FILISIST,
         VW_ETIQ.FL_TIPOETIQ,
         VW_ETIQ.ID_DESIETIQ,
         VW_ETIQ.NM_DESIETIQ,
         VW_ETIQ.GN_CODIREFEDESIETIQ,
         VW_ETIQ.DT_ULTIATUADESIETIQ,
         VW_ETIQ.FL_ATIVDESIETIQ
    FROM (
          SELECT MEF1.EMPRESA,
                 MEF1.FILIAL,
                 MEF1.ID_MATEEMBAFILI,
                 MEF1.ID_DEFIMATEEMBA,
                 1 FL_TIPOMODEETIQ,
                 MEF1.ID_MODEETIQIMPRMATEEMBAFILI ID_MODEETIQMATEEMBAFILI -- Caixa no Produtop
            FROM MATERIAL_EMBALAGEM_FILIAL MEF1
           WHERE (COALESCE(MEF1.ID_MODEETIQIMPRMATEEMBAFILI,0)>0)
         UNION ALL
          SELECT MEF2.EMPRESA,
                 MEF2.FILIAL,
                 MEF2.ID_MATEEMBAFILI,
                 MEF2.ID_DEFIMATEEMBA,
                 2 FL_TIPOMODEETIQ,
                 MEF2.ID_MODEETIQPRIMMATEEMBAFILI ID_MODEETIQMATEEMBAFILI -- Primária no Produto
            FROM MATERIAL_EMBALAGEM_FILIAL MEF2
           WHERE (COALESCE(MEF2.ID_MODEETIQPRIMMATEEMBAFILI,0)>0)
         UNION ALL
          SELECT MEF3.EMPRESA,
                 MEF3.FILIAL,
                 MEF3.ID_MATEEMBAFILI,
                 MEF3.ID_DEFIMATEEMBA,
                 3 FL_TIPOMODEETIQ,
                 MEF3.ID_MODEETIQIMPRPREMATEEMBAFILI ID_MODEETIQMATEEMBAFILI -- Pré no Produto
            FROM MATERIAL_EMBALAGEM_FILIAL MEF3
           WHERE (COALESCE(MEF3.ID_MODEETIQIMPRPREMATEEMBAFILI,0)>0)
         UNION ALL
          SELECT MEF4.EMPRESA,
                 MEF4.FILIAL,
                 MEF4.ID_MATEEMBAFILI,
                 MEF4.ID_DEFIMATEEMBA,
                 4 FL_TIPOMODEETIQ,
                 MEF4.ID_MODEETIQCOMPMATEEMBAFILI ID_MODEETIQMATEEMBAFILI -- Complementar no Produto
            FROM MATERIAL_EMBALAGEM_FILIAL MEF4
           WHERE (COALESCE(MEF4.ID_MODEETIQCOMPMATEEMBAFILI,0)>0)
         UNION ALL
          SELECT MEF5.EMPRESA,
                 MEF5.FILIAL,
                 MEF5.ID_MATEEMBAFILI,
                 MEF5.ID_DEFIMATEEMBA,
                 5 FL_TIPOMODEETIQ,
                 MEF5.ID_MODEETIQPALEMATEEMBAFILI ID_MODEETIQMATEEMBAFILI -- Palete no Produto
            FROM MATERIAL_EMBALAGEM_FILIAL MEF5
           WHERE (COALESCE(MEF5.ID_MODEETIQPALEMATEEMBAFILI,0)>0)
         UNION ALL
          SELECT MEF6.EMPRESA,
                 MEF6.FILIAL,
                 MEF6.ID_MATEEMBAFILI,
                 MEF6.ID_DEFIMATEEMBA,
                 6 FL_TIPOMODEETIQ,
                 SPF.NR_MODETIQREGIBATCFILIPARASIST ID_MODEETIQMATEEMBAFILI -- Batch
            FROM MATERIAL_EMBALAGEM_FILIAL MEF6
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF6.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON MEF6.FILIAL = SPF.FILIAL
	       WHERE (COALESCE(MED.FL_PRODBATCDEFIMATEEMBA, 'N') = 'S')
		     AND (COALESCE(SPF.NR_MODETIQREGIBATCFILIPARASIST,0)>0)
         UNION ALL
          SELECT MEF7.EMPRESA,
                 MEF7.FILIAL,
                 MEF7.ID_MATEEMBAFILI,
                 MEF7.ID_DEFIMATEEMBA,
                 7 FL_TIPOMODEETIQ,
                 SPF.NR_MODETIQREPOBATCFILIPARASIST ID_MODEETIQMATEEMBAFILI -- Repositório do Batch
            FROM MATERIAL_EMBALAGEM_FILIAL MEF7
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF7.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON MEF7.FILIAL = SPF.FILIAL
	       WHERE (COALESCE(MED.FL_PRODBATCDEFIMATEEMBA, 'N') = 'S')
		     AND (COALESCE(SPF.NR_MODETIQREPOBATCFILIPARASIST,0)>0)
         UNION ALL
          SELECT MEF8.EMPRESA,
                 MEF8.FILIAL,
                 MEF8.ID_MATEEMBAFILI,
                 MEF8.ID_DEFIMATEEMBA,
                 8 FL_TIPOMODEETIQ,
                 SPF.NR_MODETIQREPOPESAFILIPARASIST ID_MODEETIQMATEEMBAFILI -- Pesagem do Repositório do Batch
            FROM MATERIAL_EMBALAGEM_FILIAL MEF8
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF8.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON MEF8.FILIAL = SPF.FILIAL
	       WHERE (COALESCE(MED.FL_PRODBATCDEFIMATEEMBA, 'N') = 'S')
		     AND (COALESCE(SPF.NR_MODETIQREPOPESAFILIPARASIST,0)>0)
	     UNION ALL
          SELECT MEF9.EMPRESA,
                 MEF9.FILIAL,
                 MEF9.ID_MATEEMBAFILI,
                 MEF9.ID_DEFIMATEEMBA,
                 9 FL_TIPOMODEETIQ,
                 SP.NR_MODEETIQENDEPARASIST ID_MODEETIQMATEEMBAFILI -- Etiqueta de Endereço
            FROM MATERIAL_EMBALAGEM_FILIAL MEF9
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF9.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON MEF9.FILIAL = SPF.FILIAL
				 INNER JOIN SISTEMA_PARAMETRO SP ON SPF.FILIAL = SP.FILIAL
	       WHERE (COALESCE(SP.NR_MODEETIQENDEPARASIST,0)>0)
         UNION ALL
          SELECT MEF5.EMPRESA,
                 MEF5.FILIAL,
                 MEF5.ID_MATEEMBAFILI,
                 MEF5.ID_DEFIMATEEMBA,
                 10 FL_TIPOMODEETIQ,
                 MEF5.ID_PRIMFICHPALEMATEEMBAFILI ID_MODEETIQMATEEMBAFILI -- Ficha Palete 1 no Produto
            FROM MATERIAL_EMBALAGEM_FILIAL MEF5
           WHERE (COALESCE(MEF5.ID_PRIMFICHPALEMATEEMBAFILI,0)>0)         
         UNION ALL
          SELECT MEF5.EMPRESA,
                 MEF5.FILIAL,
                 MEF5.ID_MATEEMBAFILI,
                 MEF5.ID_DEFIMATEEMBA,
                 11 FL_TIPOMODEETIQ,
                 MEF5.ID_SEGUFICHPALEMATEEMBAFILI ID_MODEETIQMATEEMBAFILI -- Ficha Palete 2 no Produto
            FROM MATERIAL_EMBALAGEM_FILIAL MEF5
           WHERE (COALESCE(MEF5.ID_SEGUFICHPALEMATEEMBAFILI,0)>0)    
	     UNION ALL
          SELECT MEF12.EMPRESA,
                 MEF12.FILIAL,
                 MEF12.ID_MATEEMBAFILI,
                 MEF12.ID_DEFIMATEEMBA,
                 12 FL_TIPOMODEETIQ,
                 SF.ID_MODEETIQPALEFILISIST ID_MODEETIQMATEEMBAFILI -- Ficha Palete 1 da Filial
            FROM MATERIAL_EMBALAGEM_FILIAL MEF12
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF12.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_FILIAL SF ON MEF12.FILIAL = SF.FILIAL
	       WHERE (COALESCE(SF.ID_MODEETIQPALEFILISIST,0)>0)		          
	     UNION ALL
          SELECT MEF13.EMPRESA,
                 MEF13.FILIAL,
                 MEF13.ID_MATEEMBAFILI,
                 MEF13.ID_DEFIMATEEMBA,
                 13 FL_TIPOMODEETIQ,
                 SF.ID_SEGUMODEFICHPALEFILISIST ID_MODEETIQMATEEMBAFILI -- Ficha Palete 2 da Filial
            FROM MATERIAL_EMBALAGEM_FILIAL MEF13
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF13.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_FILIAL SF ON MEF13.FILIAL = SF.FILIAL
	       WHERE (COALESCE(SF.ID_SEGUMODEFICHPALEFILISIST,0)>0)		    
	     UNION ALL
          SELECT MEF14.EMPRESA,
                 MEF14.FILIAL,
                 MEF14.ID_MATEEMBAFILI,
                 MEF14.ID_DEFIMATEEMBA,
                 14 FL_TIPOMODEETIQ,
                 SP.GN_MODEETIQPALEPARASIST ID_MODEETIQMATEEMBAFILI -- Palete da Filial
            FROM MATERIAL_EMBALAGEM_FILIAL MEF14
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF14.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON MEF14.FILIAL = SPF.FILIAL
				 INNER JOIN SISTEMA_PARAMETRO SP ON SPF.FILIAL = SP.FILIAL
	       WHERE (COALESCE(SP.GN_MODEETIQPALEPARASIST,0)>0)		         
	     UNION ALL
          SELECT MEF15.EMPRESA,
                 MEF15.FILIAL,
                 MEF15.ID_MATEEMBAFILI,
                 MEF15.ID_DEFIMATEEMBA,
                 15 FL_TIPOMODEETIQ,
                 SPF.NR_MODEETSQPALEFILIPARASIST ID_MODEETIQMATEEMBAFILI -- Etiqueta Sequestro Palete da Filial
            FROM MATERIAL_EMBALAGEM_FILIAL MEF15
			     INNER JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON MEF15.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA
			     INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON MEF15.FILIAL = SPF.FILIAL
				 INNER JOIN SISTEMA_PARAMETRO SP ON SPF.FILIAL = SP.FILIAL
	       WHERE (COALESCE(SPF.NR_MODEETSQPALEFILIPARASIST,0)>0)			   		   
         ) VW_ETIQINFO
              JOIN MATERIAL_EMBALAGEM_DEFINICAO MED 
                ON MED.ID_DEFIMATEEMBA = VW_ETIQINFO.ID_DEFIMATEEMBA
              JOIN SISTEMA_FILIAL SF 
                ON SF.EMPRESA = VW_ETIQINFO.EMPRESA 
               AND SF.FILIAL = VW_ETIQINFO.FILIAL
              JOIN VW_ETIQUETA VW_ETIQ 
                ON VW_ETIQ.ID_DESIETIQ = VW_ETIQINFO.ID_MODEETIQMATEEMBAFILI
//

IF EXISTS (SELECT NAME 
             FROM SYSOBJECTS  
      WHERE NAME = 'MATERIAL_ALMOXARIFADO_ESTOQUE' 
        AND TYPE = 'V')
    DROP VIEW MATERIAL_ALMOXARIFADO_ESTOQUE
//
CREATE OR ALTER VIEW MATERIAL_ALMOXARIFADO_ESTOQUE
(
  ID_MATERIAL,
  ID_ALMOXARIFADO,
  EMPRESA,
  FILIAL,
  NR_LOTEFORNESTOMATEALMO,
  NR_LOTEINTEESTOMATEALMO,
  ID_FORNECEDOR_LOTE,
  DT_PRODESTOMATEALMO,
  DT_VALIESTOMATEALMO,
  QN_ESTOMATEALMO,
  QN_ESTOMATESEQU
)
AS
(
  SELECT MA.ID_MATERIAL,
         MA.ID_ALMOXARIFADO,
         MV.EMPRESA,
         MV.FILIAL,
         MV.NR_LOTEFORNMOVIMATE,
         MV.NR_LOTEINTEMOVIMATE,
         MV.ID_FORNECEDOR_LOTE,
         MV.DT_PRODMOVIMATE,
         MV.DT_VALIMOVIMATE,
         COALESCE(SUM((CASE WHEN FL_OPERMOVIMATE = 'E' 
                            THEN 1 
                            ELSE -1 
                        END) * QN_MOVIMATE),0)  + 
         COALESCE(SUM(CASE WHEN FL_TIPOMOVIMATE = 'SQ'
                           THEN (QN_MOVIMATE * 1)
                           ELSE CASE WHEN FL_TIPOMOVIMATE = 'EQ'
                           THEN (QN_MOVIMATE * -1)
                           ELSE 0
                       END END) ,0) QN_ESTOQUE,
         COALESCE(SUM(CASE WHEN FL_TIPOMOVIMATE = 'SQ'
                           THEN (QN_MOVIMATE * 1)
                           ELSE CASE WHEN FL_TIPOMOVIMATE = 'EQ'
                           THEN (QN_MOVIMATE * -1)
                           ELSE 0
                       END END) ,0) QN_ESTOSEQU
    FROM MATERIAL_ALMOXARIFADO MA
         LEFT JOIN MATERIAL_MOVIMENTACAO MV
                ON MA.ID_MATERIAL = MV.ID_MATERIAL
               AND MA.ID_ALMOXARIFADO = MV.ID_ALMOXARIFADO
               AND MV.DT_MOVIMATE <= GETDATE()
   WHERE MA.ID_EMBALAGEM IS NULL			   
   GROUP BY MA.ID_ALMOXARIFADO,
            MA.ID_MATERIAL,
            MV.EMPRESA,
            MV.FILIAL,
            MV.NR_LOTEFORNMOVIMATE,
            MV.NR_LOTEINTEMOVIMATE,
            MV.ID_FORNECEDOR_LOTE,
            MV.DT_PRODMOVIMATE,
            MV.DT_VALIMOVIMATE
)
//


If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRODUCAO_REPROCESSO' AND type = 'V')
    DROP VIEW VW_PRODUCAO_REPROCESSO
//

CREATE OR ALTER VIEW VW_PRODUCAO_REPROCESSO  AS   
 SELECT Data_Padrao_Registro.ID_REGIDATAPADR,
        Data_Padrao_Registro.DT_REGIDATAPADR,
        ISNULL(Vw_DestRegiProd.QN_PESOVENDREGIPROD, 0) QN_PESOVENDDESTREPR,
        ISNULL(Vw_DestRegiProd.QN_PESOPADRREGIPROD, 0) QN_PESOPADRREGIPROD,
        ISNULL(Vw_DestRegiProd.QN_PESOLIQUREGIPROD, 0) QN_PESOLIQUDESTREPR,
        ISNULL(Vw_ReprRegiProd.QN_PESOVENDREGIPROD, 0) QN_PESOVENDREPRPROD,
        ISNULL(Vw_ReprRegiProd.QN_PESOPADRREGIPROD, 0) QN_PESOPADRREPRPROD,
        ISNULL(Vw_ReprRegiProd.QN_PESOLIQUREGIPROD, 0) QN_PESOLIQUREPRPROD
   FROM DATA_PADRAO_REGISTRO Data_Padrao_Registro 
        LEFT OUTER JOIN (SELECT Data_Padrao_Registro.ID_REGIDATAPADR,
								Data_Padrao_Registro.DT_REGIDATAPADR,
								SUM(CONVERT(FLOAT, CONVERT(FLOAT, CASE ISNULL(Producao_Registro.QN_PESOPADRREGIPROD, 0)
																  WHEN 0 THEN Producao_Registro.QN_PESOLIQUREGIPROD
																  ELSE Producao_Registro.QN_PESOPADRREGIPROD
																  END))) QN_PESOVENDREGIPROD,
								MAX(ISNULL(Producao_Registro.QN_PESOPADRREGIPROD, 0)) QN_PESOPADRREGIPROD,
								SUM(CONVERT(FLOAT, CONVERT(FLOAT, Producao_Registro.QN_PESOLIQUREGIPROD))) QN_PESOLIQUREGIPROD
						   FROM PRODUCAO_REGISTRO_DESTINACAO Producao_Registro_Destinacao,
								PRODUCAO_REGISTRO_DEST_ITEM Producao_Registro_Dest_Item,
								PRODUCAO_REGISTRO Producao_Registro,
								DATA_PADRAO_REGISTRO Data_Padrao_Registro
						  WHERE	Producao_Registro_Destinacao.ID_DESTREGIPROD  = Producao_Registro_Dest_Item.ID_DESTREGIPROD
							AND	Producao_Registro_Dest_Item.ID_REGIPROD  = Producao_Registro.ID_REGIPROD
							AND	Producao_Registro_Destinacao.ID_REGIDATAPADR  = Data_Padrao_Registro.ID_REGIDATAPADR
							AND	Producao_Registro_Dest_Item.FL_TIPOITEMDESTREGIPROD  = 'RP'
						  GROUP BY Data_Padrao_Registro.ID_REGIDATAPADR, Data_Padrao_Registro.DT_REGIDATAPADR) Vw_DestRegiProd 
					 ON Data_Padrao_Registro.ID_REGIDATAPADR = Vw_DestRegiProd.ID_REGIDATAPADR
        LEFT OUTER JOIN (SELECT DT_PADRREGIPROD,
                                SUM(CONVERT(FLOAT, CONVERT(FLOAT, CASE ISNULL(QN_PESOPADRREGIPROD, 0)
                                                                  WHEN 0 THEN QN_PESOLIQUREGIPROD
                                                                  ELSE QN_PESOPADRREGIPROD
                                    END))) QN_PESOVENDREGIPROD,
                                SUM(CONVERT(FLOAT, CONVERT(FLOAT, QN_PESOPADRREGIPROD))) QN_PESOPADRREGIPROD,
                                SUM(CONVERT(FLOAT, CONVERT(FLOAT, QN_PESOLIQUREGIPROD))) QN_PESOLIQUREGIPROD
                           FROM PRODUCAO_REGISTRO
                          WHERE FL_ORIGREGIPROD  = 'RP'
                            AND	FL_STATREGIPROD  NOT IN ( 'ER'  , 'CO'  )
                          GROUP BY  DT_PADRREGIPROD) Vw_ReprRegiProd  
					 ON Data_Padrao_Registro.DT_REGIDATAPADR  = Vw_ReprRegiProd.DT_PADRREGIPROD
//						  				

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_MATERIAL_EMBALAGEM' AND TYPE = 'V')
    DROP VIEW VW_MATERIAL_EMBALAGEM
//    
CREATE VIEW [dbo].[VW_MATERIAL_EMBALAGEM]                
 (EMPRESA,                               
  FILIAL,
  ID_MATEEMBA,                                                            
  ID_PRODMATEEMBA,
  NM_PRODMATEEMBA,
  NM_PRODREDUMATEEMBA,
  ID_MATERIAL,
  ID_EMBALAGEM,
  QN_CAPAMINIMATEEMBA,
  QN_CAPAMAXIMATEEMBA,
  QN_CAPAPADRMATEEMBA,
  QN_CAPAMEDIMATEEMBA,
  QN_CAPAPADRUNIDMATEEMBA,
  QN_CAPAMEDIUNIDMATEEMBA,
  ID_INTEMATEEMBA,
  PC_TOLEMINIMATEEMBA,
  PC_TOLEMAXIMATEEMBA,
  ID_VALIMATEEMBA,
  FL_ESPEMATEEMBA,
  FL_ESTAMATEEMBA,
  QN_PESOMINIMATEEMBA,
  QN_PESOMAXIMATEEMBA,
  PC_TEMPMATEEMBA,
  ID_TIPOAVE,
  PC_QUEBMATEEMBA,
  IE_MATEEMBA,
  ID_MARCA,
  FL_TIPODESTCUSTMATEEMBA,
  FL_IDENPRODMATEEMBA,
  ID_FAMIPROD,
  ID_OBSECERT,
  GN_CODIEA13MATEEMBA,
  GN_CODIEA14MATEEMBA,
  FL_MODAIDENMATEEMBA,
  NM_SIGLPRODMATEEMBA,
  GN_NUMESENAMATEEMBA,
  ID_CLASEXTE,
  GN_DESCETIQLINHUMMATEEMBA,
  GN_DESCETIQLINHDOISMATEEMBA,
  GN_DESCETIQLINHTRESMATEEMBA,
  ID_TEXTETIQ,
  ID_INSTCONS,
  FL_IMPRPRODCERTMATEEMBA,
  ID_UNIDMEDIFATUMATEEMBA,
  FL_TIPOEXPEMATEEMBA,
  FL_ATIVMATEEMBA,
  FL_PRODMATEEMBA,
  QN_TARACOMPMATEEMBA,
  QN_ETIQEXPEMATEEMBA,
  FL_PESAESTAMATEEMBA,
  FL_REPEMATEEMBA,
  NR_REGIMINIAGRIMATEEMBA,
  NM_REGIMINIAGRIMATEEMBA,
  QN_FORMPALEMATEEMBA,
  FL_CONTTUNEMATEEMBA,
  ID_MODEETIQIMPRMATEEMBA,
  ID_MODEETIQIMPRPREMATEEMBA,
  ID_MODEETIQCOMPMATEEMBA,
  FX_MATEEMBA,
  NM_PACKMATEEMBA,
  FL_STATSINCMATEEMBA,
  NR_ESTETUNEMATEEMBA,
  FL_SIMUPRODMATEEMBA,
  FL_VALIRESTPESODEFIMATEEMBA,
  FL_TRATLIMIPESOMATEEMBA,
  ID_MODELOTERASTFILISIST,
  QN_INICPENDMATEEMBA,
  FL_PRODBATCMATEEMBA,
  FL_SEMIACABMATEEMBA,
  FL_STATMATEPRIMMATEEMBA,
  FL_DESMAUTOMATEEMBA,
  QN_UNIDDESMAUTOMATEEMBA,
  ID_PRODDESMAUTOMATEEMBA,
  FL_AGRUDIVIFATUMATEEMBA,
  QN_CAPAPADRUNIDTLMATEEMBA,
  ID_MODEETIQPRIMMATEEMBA,
  NM_PRODFILIMATEEMBA,
  ID_IMAGETIQ,
  GN_RECEMATEEMBAFILI, 
  NR_LOG1MATEEMBAFILI, 
  NR_LOG2MATEEMBAFILI, 
  NR_LOG3MATEEMBAFILI, 
  NR_CODIBAR1MATEEMBAFILI, 
  NR_CODIBAR2MATEEMBAFILI, 
  NR_CODIBAR3MATEEMBAFILI, 
  NR_LAY1MATEEMBAFILI, 
  NR_LAY2MATEEMBAFILI, 
  GN_CODIBAR1MATEEMBAFILI, 
  GN_CODIBAR2MATEEMBAFILI, 
  GN_CODIBAR3MATEEMBAFILI, 
  ID_CLASGRAD, 
  GN_GRADMATEEMBAFILI,
  FL_TIPOGRADMATEEMBAFILI,  
  FL_BINMATEEMBAFILI, 
  ID_VALONUTR,
  FL_AUTOENDEMATEEMBAFILI,
  ID_PROCLINH,
  ID_PROCLINH_DESTREPR, 
  ID_PROCLINH_DESTPROC,
  FL_SEPAPRODMATEEMBAFILI,
  QN_PRODEMBAMATEEMBA,
  FL_QTDEINDIMATEEMBA,
  QN_PRODEMBAATUAMATEEMBA,
  PC_QUEBAUTOMATEEMBA,
  FL_OBRIPALEPESAGRUMATEEMBA,
  PC_TOLEPESOPESAGRUMATEEMBA,
  FL_RASTMATESECUMATEEMBA,
  HR_TEMPQUEBAUTOMATEEMBA,
  ID_ALMOXARIFADO,
  FL_EXIGTARAPRODMATEEMBAFILI,
  FL_PPCPMATEEMBA,
  PC_GIVEAWAYMATEEMBA,
  QN_MINIPRODEMBAMATEEMBA,
  ID_UNIDMEDI_UNIDMATEEMBA,
  QN_PECAPRODMATEEMBA,
  ID_UNIDMEDI_PECAMATEEMBA,
  QN_DIASTOLEDTPADRMATEEMBA,
  QN_DATATOLEDTPADRMATEEMBA,
  ID_GRUPDEMA,
  FL_UTILFORMPPCPMATEEMBA,
  QN_LIMIDEMAPPCPMATEEMBA,
  PC_MINIDEMAPPCPMATEEMBA,
  ID_CENTCUST,
  ID_ESTRMATEEMBAFILI,
  NM_ESTRMATEEMBAFILI,
  ID_AREAPROD,
  FL_CONDMATEEMBA,
  QN_ANIMEMBAMATEEMBA,
  ID_ALMOXARIFADO_PALETIZACAO,
  QN_ETIQPICKPEDIMATEEMBA,
  FL_UTILALMOPADTUNEMATEEMBA,
  FL_ALTEPRODPALEMATEEMBA,
  FL_RESTPRODMATEEMBA,
  FL_UTILDATAINDIMATEEMBA,
  FL_PERMTURNDIFEMATEEMBA,
  ID_MODEETIQPALEMATEEMBA,
  FL_EXIGLAUDMATEEMBA,
  ID_PRIMFICHPALEMATEEMBA,
  ID_SEGUFICHPALEMATEEMBA,
  FL_CALCCUSTMATEEMBA,
  FL_PALEPESAAGRUMATEEMBA,
  FL_PALEREGIPRODMATEEMBA,
  ID_EMBAPALEPRODMATEEMBA,
  FL_LOCADESMAUTOMATEEMBA,
  ID_QUEBPROGNORMMATEEMBA,
  ID_QUEBPROGCONGMATEEMBA,
  FL_SEQUAUTOPRODMATEEMBA,
  ID_MOTISEQUAUTOMATEEMBA,
  FL_INFOPESOSIMUMATEEMBA,
  FL_UNDTIPOPESODEFIMATEEMBA,
  QN_UNDCAPANOMIDEFIMATEEMBA,
  PC_UNDTOLEMINIDEFIMATEEMBA,
  PC_UNDTOLEMAXIDEFIMATEEMBA,
  QN_UNDTARADEFIMATEEMBA,
  ID_MATEEMBAFILI,
  ID_MATEEMBALOCA,
  FL_PALEPESAMATEEMBA,
  FL_REGIPRODPALEMATEEMBA,
  FL_INTEPALEPRODMATEEMBAFILI,
  FL_EXIGLOTEEMBUMATEEMBA,
  FL_CONTEXCEPALEMATEEMBA,
  FL_RESTEMBAPALEMATEEMBA,
  NR_LIMIDATAPADRMATEEMBA,
  NR_LIMIDATARETRMATEEMBA,
  FL_PRODCONTCORTMATEEMBA,
  FL_CONSRENDMATEEMBA,
  FL_ESTOPRODUDESTMATEEMBA,
  ID_GRUPPROD,
  QN_REPEREGIPRODMATEEMBA,
  FL_AGRUPRODPALEMATEEMBA,
  FL_UTILEMBAREUTMATEEMBA,
  FL_LOTEEMBUPAAUMATEEMBA,
  FL_PRODCONTMATEEMBA,
  PC_INJEMATEEMBA) AS
SELECT ISNULL(MEF.EMPRESA, (SELECT EMPRESA FROM EMPRESA_FILIAL_LOCAL)) EMPRESA,
       CAST(ISNULL(MEF.FILIAL, (SELECT FILIAL    FROM EMPRESA_FILIAL_LOCAL)) AS NUMERIC(5)) FILIAL,
       MED.ID_DEFIMATEEMBA,
       MED.ID_PRODDEFIMATEEMBA,
       MED.NM_PRODDEFIMATEEMBA,
       MED.NM_PRODREDUDEFIMATEEMBA,
       MED.ID_MATERIAL,
       MED.ID_EMBALAGEM,
       MED.QN_CAPAMINIDEFIMATEEMBA,
       MED.QN_CAPAMAXIDEFIMATEEMBA,
       MED.QN_CAPAPADRDEFIMATEEMBA,
       MED.QN_CAPAMEDIDEFIMATEEMBA,
       MED.QN_CAPAPADRUNIDDEFIMATEEMBA,
       MED.QN_CAPAMEDIUNIDDEFIMATEEMBA,
       MED.ID_INTEDEFIMATEEMBA,
       COALESCE(MEF.PC_TOLEMINIMATEEMBAFILI, MED.PC_TOLEMINIDEFIMATEEMBA) PC_TOLEMINIDEFIMATEEMBA,
       COALESCE(MEF.PC_TOLEMAXIMATEEMBAFILI, MED.PC_TOLEMAXIDEFIMATEEMBA) PC_TOLEMAXIDEFIMATEEMBA,
       MED.ID_VALIMATEEMBA,
       MED.FL_ESPEDEFIMATEEMBA,
       MED.FL_ESTADEFIMATEEMBA,
       MED.QN_PESOMINIDEFIMATEEMBA,
       MED.QN_PESOMAXIDEFIMATEEMBA,
       COALESCE(COALESCE(MEF.PC_TEMPMATEEMBAFILI,MED.PC_TEMPDEFIMATEEMBA),0) PC_TEMPMATEEMBA,
       MED.ID_TIPOAVE,
       MED.PC_QUEBDEFIMATEEMBA,
       MED.IE_DEFIMATEEMBA,
       MED.ID_MARCA,
	   MED.FL_TIPODESTCUSTDEFIMATEEMBA,
       MEF.FL_IDENPRODMATEEMBAFILI,
       MED.ID_FAMIPROD,
       MEF.ID_OBSECERT,
       MED.GN_CODIEA13DEFIMATEEMBA,
       MED.GN_CODIEA14DEFIMATEEMBA,
       MEF.FL_MODAIDENMATEEMBAFILI,
       MED.NM_SIGLPRODDEFIMATEEMBA,
       MED.GN_NUMESENADEFIMATEEMBA,
       MED.ID_CLASEXTE,
       MED.GN_DESCETIQLINH1DEFIMATEEMBA,
       MED.GN_DESCETIQLINH2DEFIMATEEMBA,
       MED.GN_DESCETIQLINH3DEFIMATEEMBA,
       MED.ID_TEXTETIQ,
       MED.ID_INSTCONS,
       MED.FL_IMPRPRODCERTDEFIMATEEMBA,
       MED.ID_UNIDMEDI_FATUDEFIMATEEMBA,
       MEF.FL_TIPOEXPEMATEEMBAFILI,
       MEF.FL_ATIVMATEEMBAFILI,
       MEF.FL_PRODMATEEMBAFILI,
       MEL.QN_TARACOMPMATEEMBALOCA,
       MEF.QN_ETIQEXPEMATEEMBAFILI,
       MEF.FL_PESAESTAMATEEMBAFILI,
       MEF.FL_REPEMATEEMBAFILI,
       MEF.NR_REGIMINIAGRIMATEEMBAFILI,
       MEF.NM_REGIMINIAGRIMATEEMBAFILI,
       MEF.QN_FORMPALEMATEEMBAFILI,
       MEF.FL_CONTTUNEMATEEMBAFILI,
       COALESCE(MEF.ID_MODEETIQIMPRMATEEMBAFILI, MED.ID_MODEETIQIMPRMATEEMBADEFI) ID_MODEETIQIMPRMATEEMBAFILI,
       COALESCE(MEF.ID_MODEETIQIMPRPREMATEEMBAFILI, MED.ID_MODEETIQIMPRPREMATEEMBADEFI) ID_MODEETIQIMPRPREMATEEMBAFILI,
       MEF.ID_MODEETIQCOMPMATEEMBAFILI, 
       MEF.FX_MATEEMBAFILI,
       MED.NM_PACKDEFIMATEEMBA,
       ISNULL(MEL.FL_STATSINCMATEEMBALOCA ,MEF.FL_STATSINCMATEEMBAFILI) AS FL_STATSINCMATEEMBAFILI,
       MEL.NR_ESTETUNEMATEEMBALOCA,
       MEF.FL_SIMUPRODMATEEMBAFILI,
       MED.FL_VALIRESTPESODEFIMATEEMBA,
       MEF.FL_TRATLIMIPESOMATEEMBAFILI,
       MEF.ID_MODELOTERASTFILISIST,
       MEF.QN_INICPENDMATEEMBAFILI,
       COALESCE(MED.FL_PRODBATCDEFIMATEEMBA, 'N') FL_PRODBATCDEFIMATEEMBA,
       COALESCE(MED.FL_SEMIACABDEFIMATEEMBA, 'N') FL_SEMIACABDEFIMATEEMBA,
       COALESCE(MEF.FL_STATMATEPRIMMATEEMBAFILI, 'LB') FL_STATMATEPRIMMATEEMBAFILI,
       COALESCE(MEF.FL_DESMAUTOMATEEMBAFILI, 'N') FL_DESMAUTOMATEEMBAFILI,
       MEF.QN_UNIDDESMAUTOMATEEMBAFILI QN_UNIDDESMAUTOMATEEMBAFILI,
       MEF.ID_PRODDESMAUTOMATEEMBAFILI ID_PRODDESMAUTOMATEEMBAFILI,
       MED.FL_AGRUDIVIFATUDEFIMATEEMBA,
       MED.QN_CAPAPADRUNIDTLDEFIMATEEMBA,
       COALESCE(MEF.ID_MODEETIQPRIMMATEEMBAFILI, MED.ID_MODEETIQPRIMMATEEMBADEFI) ID_MODEETIQPRIMMATEEMBAFILI,
       MEF.NM_PRODFILIMATEEMBA,
       MEF.ID_IMAGETIQ,
       MEF.GN_RECEMATEEMBAFILI, 
       MEF.NR_LOG1MATEEMBAFILI, 
       MEF.NR_LOG2MATEEMBAFILI, 
       MEF.NR_LOG3MATEEMBAFILI, 
       MEF.NR_CODIBAR1MATEEMBAFILI, 
       MEF.NR_CODIBAR2MATEEMBAFILI, 
       MEF.NR_CODIBAR3MATEEMBAFILI, 
       MEF.NR_LAY1MATEEMBAFILI, 
       MEF.NR_LAY2MATEEMBAFILI, 
       MEF.GN_CODIBAR1MATEEMBAFILI, 
       MEF.GN_CODIBAR2MATEEMBAFILI, 
       MEF.GN_CODIBAR3MATEEMBAFILI, 
       MEF.ID_CLASGRAD, 
       MEF.NM_CLASGRAD,
       COALESCE(MEF.FL_TIPOCLASGRAD, 'C') FL_TIPOCLASGRAD,     
       MEF.FL_BINMATEEMBAFILI, 
       MED.ID_VALONUTR,
       MEF.FL_AUTOENDEMATEEMBAFILI,
       MEF.ID_PROCLINH,
       MEF.ID_PROCLINH_DESTREPR, 
       MEF.ID_PROCLINH_DESTPROC,
       MEF.FL_SEPAPRODMATEEMBAFILI,
       COALESCE(MEF.QN_PRODEMBAMATEEMBAFILI, MED.QN_PRODEMBAMATEEMBADEFI) QN_PRODEMBAMATEEMBAFILI,
       MEF.FL_QTDEINDIMATEEMBAFILI,
       MEL.QN_PRODEMBAATUAMATEEMBALOCA,
       MEF.PC_QUEBMATEEMBAFILI,
       MEF.FL_OBRIPALEPESAGRUMATEEMBAFILI,
       MEF.PC_TOLEPESOPESAGRUMATEEMBAFILI,
       MEF.FL_RASTMATESECUMATEEMBAFILI,
       MEF.HR_TEMPQUEBAUTOMATEEMBAFILI,
       MEF.ID_ALMOXARIFADO,
       COALESCE(MEF.FL_EXIGTARAPRODMATEEMBAFILI, 'N') FL_EXIGTARAPRODMATEEMBAFILI,
       COALESCE(MEF.FL_PPCPMATEEMBAFILI, 'S') FL_PPCPMATEEMBAFILI,
       COALESCE(MEF.PC_GIVEAWAYMATEEMBAFILI, 0) PC_GIVEAWAYMATEEMBAFILI,
       COALESCE(MEL.QN_MINIPRODMATEEMBALOCA, 0) QN_MINIPRODMATEEMBALOCA,
       COALESCE(MEF.ID_UNIDMEDI_UNIDMATEEMBAFILI, MED.ID_UNIDMEDI_UNIDMATEEMBADEFI),
       COALESCE(MEF.QN_PECAPRODMATEEMBAFILI, MED.QN_PECAPRODMATEEMBADEFI),
       COALESCE(MEF.ID_UNIDMEDI_PECAMATEEMBAFILI, MED.ID_UNIDMEDI_PECAMATEEMBADEFI),
       MEF.QN_DIASTOLEDTPADRMATEEMBAFILI,
       MEF.QN_DATATOLEDTPADRMATEEMBAFILI,
       MED.ID_GRUPDEMA,
       COALESCE(MEF.FL_UTILFORMPPCPMATEEMBAFILI, 'N') FL_UTILFORMPPCPMATEEMBAFILI,
       COALESCE(MEF.QN_LIMIDEMAPPCPMATEEMBAFILI, 0) QN_LIMIDEMAPPCPMATEEMBAFILI,
       COALESCE(MEF.PC_MINIDEMAPPCPMATEEMBAFILI, 100) PC_MINIDEMAPPCPMATEEMBAFILI,
       MEF.ID_CENTCUST,
       COALESCE(MEF.ID_ESTRMATEEMBAFILI, 0) ID_ESTRMATEEMBAFILI,
       MEF.NM_ESTRMATEEMBAFILI,
       MEF.ID_AREAPROD,
       MED.FL_CONDDEFIMATEEMBA,
       MEF.QN_ANIMEMBAMATEEMBAFILI,
	   MEF.ID_ALMOXARIFADO_PALETIZACAO,
       MEF.QN_ETIQPICKPEDIMATEEMBAFILI,
	   MEF.FL_UTILALMOPADTUNEMATEEMBAFILI,
	   COALESCE(MEF.FL_ALTEPRODPALEMATEEMBAFILI, MED.FL_ALTEPRODPALEDEFIMATEEMBA) FL_ALTEPRODPALEMATEEMBA,
       COALESCE(MEF.FL_RESTPRODMATEEMBAFILI, 'N') FL_RESTPRODMATEEMBAFILI,
       COALESCE(MEF.FL_UTILDATAINDIMATEEMBAFILI, 'N') FL_UTILDATAINDIMATEEMBAFILI,
       COALESCE(MEF.FL_PERMTURNDIFEMATEEMBAFILI, 'S') FL_PERMTURNDIFEMATEEMBAFILI,
       MEF.ID_MODEETIQPALEMATEEMBAFILI,
       COALESCE(MEF.FL_EXIGLAUDMATEEMBAFILI, 'N') FL_EXIGLAUDMATEEMBAFILI,
       MEF.ID_PRIMFICHPALEMATEEMBAFILI,
       MEF.ID_SEGUFICHPALEMATEEMBAFILI,
	   COALESCE(MED.FL_CALCCUSTDEFIMATEEMBA, case when FL_SEMIACABDEFIMATEEMBA = 'N' then 'S' else 'N'end) FL_CALCCUSTDEFIMATEEMBA,
       COALESCE(MEF.FL_PALEPESAAGRUMATEEMBAFILI, 'N') FL_PALEPESAAGRUMATEEMBAFILI,
	   COALESCE(MEF.FL_PALEREGIPRODMATEEMBAFILI, 'N') FL_PALEREGIPRODMATEEMBAFILI,
       MEF.ID_EMBAPALEPRODMATEEMBAFILI,
       MEF.FL_LOCADESMAUTOMATEEMBAFILI,
       MEF.ID_QUEBPROGNORMMATEEMBAFILI,
       MEF.ID_QUEBPROGCONGMATEEMBAFILI,
       MEF.FL_SEQUAUTOPRODMATEEMBAFILI,
       MEF.ID_MOTISEQUAUTOMATEEMBAFILI,
       COALESCE(MEF.FL_INFOPESOSIMUMATEEMBAFILI, 'N') FL_INFOPESOSIMUMATEEMBAFILI,
	   MED.FL_UNDTIPOPESODEFIMATEEMBA,
       MED.QN_UNDCAPANOMIDEFIMATEEMBA,
       MED.PC_UNDTOLEMINIDEFIMATEEMBA,
       MED.PC_UNDTOLEMAXIDEFIMATEEMBA,
       MED.QN_UNDTARADEFIMATEEMBA,
	   MEF.ID_MATEEMBAFILI,
       MEL.ID_MATEEMBALOCA,
       COALESCE(MEF.FL_PALEPESAMATEEMBAFILI, 'N') FL_PALEPESAMATEEMBAFILI,
       COALESCE(MEF.FL_REGIPRODPALEMATEEMBAFILI, 'N') FL_REGIPRODPALEMATEEMBAFILI,
       COALESCE(MEF.FL_INTEPALEPRODMATEEMBAFILI, 'N') FL_INTEPALEPRODMATEEMBAFILI,
       COALESCE(MEF.FL_EXIGLOTEEMBUMATEEMBAFILI, 'N') FL_EXIGLOTEEMBUMATEEMBAFILI,
       COALESCE(MEF.FL_CONTEXCEPALEMATEEMBAFILI, 'S') FL_CONTEXCEPALEMATEEMBAFILI,
	   COALESCE(MEF.FL_RESTEMBAPALEMATEEMBAFILI, 'N') FL_RESTEMBAPALEMATEEMBAFILI,
       MEF.NR_LIMIDATAPADRMATEEMBAFILI,
       MEF.NR_LIMIDATARETRMATEEMBAFILI,
       MED.FL_PRODCONTCORTDEFIMATEEMBA,
	   COALESCE(MEF.FL_CONSRENDMATEEMBAFILI, 'S') AS FL_CONSRENDMATEEMBAFILI,
       COALESCE(MEF.FL_ESTOPRODUDESTMATEEMBAFILI, 'N') AS  FL_ESTOPRODUDESTMATEEMBAFILI,
       MEF.ID_GRUPPROD,
	   COALESCE(MEF.QN_REPEREGIPRODMATEEMBAFILI, 0) QN_REPEREGIPRODMATEEMBAFILI,
	   COALESCE(MED.FL_AGRUPRODPALEDEFIMATEEMBA, 'N') FL_AGRUPRODPALEDEFIMATEEMBA,
	   COALESCE(MEF.FL_UTILEMBAREUTMATEEMBAFILI, 'N') FL_UTILEMBAREUTMATEEMBAFILI,
	   COALESCE(MEF.FL_LOTEEMBUPAAUMATEEMBAFILI, 'N') FL_LOTEEMBUPAAUMATEEMBAFILI,
	   COALESCE(MEF.FL_PRODCONTMATEEMBAFILI, 'N') FL_PRODCONTMATEEMBAFILI,
	   MEF.PC_INJEMATEEMBAFILI
  FROM MATERIAL_EMBALAGEM_DEFINICAO MED  
       LEFT JOIN (SELECT MEF_1.EMPRESA,
                          MEF_1.FILIAL,
                          MEF_1.FL_IDENPRODMATEEMBAFILI,
                          MEF_1.ID_OBSECERT,
                          MEF_1.FL_MODAIDENMATEEMBAFILI,
                          MEF_1.FL_TIPOEXPEMATEEMBAFILI,
                          MEF_1.FL_ATIVMATEEMBAFILI,
                          MEF_1.FL_PRODMATEEMBAFILI,
                          MEF_1.QN_ETIQEXPEMATEEMBAFILI,
                          MEF_1.FL_PESAESTAMATEEMBAFILI,
                          MEF_1.FL_REPEMATEEMBAFILI,
                          MEF_1.NR_REGIMINIAGRIMATEEMBAFILI,
                          MEF_1.NM_REGIMINIAGRIMATEEMBAFILI,
                          MEF_1.QN_FORMPALEMATEEMBAFILI,
                          MEF_1.FL_CONTTUNEMATEEMBAFILI,
                          MEF_1.ID_MODEETIQIMPRMATEEMBAFILI,
                          MEF_1.ID_MODEETIQIMPRPREMATEEMBAFILI,
                          MEF_1.ID_MODEETIQCOMPMATEEMBAFILI, 
                          MEF_1.FX_MATEEMBAFILI,
                          MEF_1.FL_STATSINCMATEEMBAFILI,
                          MEF_1.FL_SIMUPRODMATEEMBAFILI,
                          MEF_1.ID_DEFIMATEEMBA,
                          MEF_1.ID_MATEEMBAFILI,
                          MEF_1.FL_TRATLIMIPESOMATEEMBAFILI,
                          MEF_1.ID_MODELOTERASTFILISIST,
                          MEF_1.QN_INICPENDMATEEMBAFILI,
                          MEF_1.FL_STATMATEPRIMMATEEMBAFILI,
                          MEF_1.FL_DESMAUTOMATEEMBAFILI,
                          MEF_1.QN_UNIDDESMAUTOMATEEMBAFILI,
                          MEF_1.ID_PRODDESMAUTOMATEEMBAFILI,
                          MEF_1.ID_MODEETIQPRIMMATEEMBAFILI,
                          MEF_1.NM_PRODFILIMATEEMBA,
                          MEF_1.ID_IMAGETIQ,
                          MEF_1.GN_RECEMATEEMBAFILI,                                     
                          MEF_1.NR_LOG1MATEEMBAFILI,                                         
                          MEF_1.NR_LOG2MATEEMBAFILI,                                     
                          MEF_1.NR_LOG3MATEEMBAFILI,                                 
                          MEF_1.NR_CODIBAR1MATEEMBAFILI,                                 
                          MEF_1.NR_CODIBAR2MATEEMBAFILI,                             
                          MEF_1.NR_CODIBAR3MATEEMBAFILI,                                 
                          MEF_1.NR_LAY1MATEEMBAFILI,                                     
                          MEF_1.NR_LAY2MATEEMBAFILI,                                     
                          MEF_1.GN_CODIBAR1MATEEMBAFILI,                                 
                          MEF_1.GN_CODIBAR2MATEEMBAFILI,                             
                          MEF_1.GN_CODIBAR3MATEEMBAFILI,                                 
                          MEF_1.ID_CLASGRAD,        
                          GC.NM_CLASGRAD,                           
                          GC.FL_TIPOCLASGRAD,                           
                          MEF_1.FL_BINMATEEMBAFILI,
                          MEF_1.FL_AUTOENDEMATEEMBAFILI,
                          MEF_1.ID_PROCLINH,
                          MEF_1.ID_PROCLINH_DESTREPR, 
                          MEF_1.ID_PROCLINH_DESTPROC,
                          MEF_1.FL_SEPAPRODMATEEMBAFILI,
                          MEF_1.QN_PRODEMBAMATEEMBAFILI,
                          MEF_1.FL_QTDEINDIMATEEMBAFILI,
                          MEF_1.PC_QUEBMATEEMBAFILI,
                          MEF_1.FL_OBRIPALEPESAGRUMATEEMBAFILI,
                          MEF_1.PC_TOLEPESOPESAGRUMATEEMBAFILI,
                          MEF_1.FL_RASTMATESECUMATEEMBAFILI,
                          MEF_1.PC_TOLEMINIMATEEMBAFILI,
                          MEF_1.PC_TOLEMAXIMATEEMBAFILI,
                          MEF_1.HR_TEMPQUEBAUTOMATEEMBAFILI,
                          MEF_1.ID_ALMOXARIFADO,
                          MEF_1.FL_EXIGTARAPRODMATEEMBAFILI,
                          MEF_1.FL_PPCPMATEEMBAFILI,
                          MEF_1.PC_GIVEAWAYMATEEMBAFILI,
                          MEF_1.ID_UNIDMEDI_UNIDMATEEMBAFILI,
                          MEF_1.QN_PECAPRODMATEEMBAFILI,
                          MEF_1.ID_UNIDMEDI_PECAMATEEMBAFILI,
                          MEF_1.QN_DIASTOLEDTPADRMATEEMBAFILI,
                          MEF_1.QN_DATATOLEDTPADRMATEEMBAFILI,
                          MEF_1.FL_UTILFORMPPCPMATEEMBAFILI,
                          MEF_1.QN_LIMIDEMAPPCPMATEEMBAFILI,
                          MEF_1.PC_MINIDEMAPPCPMATEEMBAFILI,
                          MEF_1.ID_CENTCUST,
                          MEF_1.ID_ESTRMATEEMBAFILI,
                          MEF_1.NM_ESTRMATEEMBAFILI,
                          MEF_1.ID_AREAPROD,
                          MEF_1.QN_ANIMEMBAMATEEMBAFILI,
						  MEF_1.ID_ALMOXARIFADO_PALETIZACAO,
                          MEF_1.QN_ETIQPICKPEDIMATEEMBAFILI,
						  MEF_1.FL_UTILALMOPADTUNEMATEEMBAFILI,
						  MEF_1.FL_ALTEPRODPALEMATEEMBAFILI,
                          MEF_1.FL_RESTPRODMATEEMBAFILI,
                          MEF_1.FL_UTILDATAINDIMATEEMBAFILI,
                          MEF_1.FL_PERMTURNDIFEMATEEMBAFILI,
                          MEF_1.ID_MODEETIQPALEMATEEMBAFILI,
                          MEF_1.FL_EXIGLAUDMATEEMBAFILI,
                          MEF_1.ID_PRIMFICHPALEMATEEMBAFILI,
                          MEF_1.ID_SEGUFICHPALEMATEEMBAFILI,
                          MEF_1.FL_PALEPESAAGRUMATEEMBAFILI,
						  MEF_1.FL_PALEREGIPRODMATEEMBAFILI,
                          MEF_1.ID_EMBAPALEPRODMATEEMBAFILI,
                          MEF_1.FL_LOCADESMAUTOMATEEMBAFILI,
                          MEF_1.ID_QUEBPROGNORMMATEEMBAFILI,
                          MEF_1.ID_QUEBPROGCONGMATEEMBAFILI,
                          MEF_1.FL_SEQUAUTOPRODMATEEMBAFILI,
                          MEF_1.ID_MOTISEQUAUTOMATEEMBAFILI,
                          COALESCE(MEF_1.FL_INFOPESOSIMUMATEEMBAFILI, 'N') FL_INFOPESOSIMUMATEEMBAFILI,
                          MEF_1.FL_PALEPESAMATEEMBAFILI,
                          MEF_1.FL_REGIPRODPALEMATEEMBAFILI,
                          MEF_1.FL_INTEPALEPRODMATEEMBAFILI,
                          MEF_1.FL_EXIGLOTEEMBUMATEEMBAFILI,
                          MEF_1.FL_CONTEXCEPALEMATEEMBAFILI,
						  MEF_1.FL_RESTEMBAPALEMATEEMBAFILI,
                          MEF_1.NR_LIMIDATAPADRMATEEMBAFILI,
                          MEF_1.NR_LIMIDATARETRMATEEMBAFILI,
                          MEF_1.PC_TEMPMATEEMBAFILI,
						  MEF_1.FL_CONSRENDMATEEMBAFILI,
                          MEF_1.FL_ESTOPRODUDESTMATEEMBAFILI,
                          MEF_1.ID_GRUPPROD,
						  MEF_1.QN_REPEREGIPRODMATEEMBAFILI,
						  MEF_1.FL_UTILEMBAREUTMATEEMBAFILI,
						  MEF_1.FL_LOTEEMBUPAAUMATEEMBAFILI,
						  MEF_1.FL_PRODCONTMATEEMBAFILI,
						  MEF_1.PC_INJEMATEEMBAFILI
                     FROM MATERIAL_EMBALAGEM_FILIAL MEF_1 
                     LEFT OUTER JOIN GRADE_CLASSIFICADORA GC
                       ON (MEF_1.ID_CLASGRAD = GC.ID_CLASGRAD)    
                    WHERE MEF_1.FILIAL = ISNULL((SELECT FILIAL    
                                                   FROM SISTEMA_USUARIO_SESSAO 
                                                  WHERE SERIAL# = CAST((SELECT @@SPID AS SERIAL#) AS CHAR(50))), 
                                                (SELECT FILIAL FROM EMPRESA_FILIAL_LOCAL))) MEF ON MED.ID_DEFIMATEEMBA = MEF.ID_DEFIMATEEMBA
  LEFT OUTER JOIN (SELECT MEL_1.ID_MATEEMBALOCA,
                          MEL_1.QN_TARACOMPMATEEMBALOCA,
                          MEL_1.NR_ESTETUNEMATEEMBALOCA,
                          MEL_1.ID_MATEEMBAFILI,
                          MEL_1.QN_PRODEMBAATUAMATEEMBALOCA,
                          MEL_1.FL_STATSINCMATEEMBALOCA,
                          MEL_1.QN_MINIPRODMATEEMBALOCA
                     FROM MATERIAL_EMBALAGEM_LOCAL MEL_1 
                    WHERE MEL_1.FILIAL = ISNULL((SELECT FILIAL
                                                   FROM SISTEMA_USUARIO_SESSAO 
                                                  WHERE SERIAL# = CAST((SELECT @@SPID AS SERIAL#) AS CHAR(50))), 
                                                (SELECT FILIAL FROM EMPRESA_FILIAL_LOCAL))) MEL ON MEF.ID_MATEEMBAFILI = MEL.ID_MATEEMBAFILI
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_MATERIAL_EMBALAGEM_AVE_COMP' AND TYPE = 'V')
    DROP VIEW VW_MATERIAL_EMBALAGEM_AVE_COMP
//    
CREATE OR ALTER VIEW VW_MATERIAL_EMBALAGEM_AVE_COMP AS
SELECT AUE.ID_ESTRUNIDABAT,
       MEAC.ID_MATEEMBA,
       ACI.ID_CONSAVE,
       MEAC.ID_COMPAVE,
       (ACI.QN_PESOMACHITEMCONSAVE / VW_CONSTITUICAO.QN_PESOMACHCONSAVE) PC_MACHCOMPAVEMATEEMBA,
       (ACI.QN_PESOFEMEITEMCONSAVE / VW_CONSTITUICAO.QN_PESOFEMECONSAVE) PC_FEMECOMPAVEMATEEMBA,
       (((ACI.QN_PESOMACHITEMCONSAVE + ACI.QN_PESOFEMEITEMCONSAVE) / 2) / VW_CONSTITUICAO.QN_PESOMISTCONSAVE) PC_MISTCOMPAVEMATEEMBA
  FROM MATERIAL_EMBALAGEM_DEFINICAO MED
            JOIN MATERIAL_EMBALAGEM_FILIAL MEF
              ON MED.ID_DEFIMATEEMBA = MEF.ID_DEFIMATEEMBA
            JOIN ABATE_UNIDADE AU
              ON MEF.EMPRESA = AU.EMPRESA
             AND MEF.FILIAL = AU.FILIAL
            JOIN ABATE_UNIDADE_ESTRUTURA AUE
              ON AU.ID_UNIDABAT = AUE.ID_UNIDABAT
            JOIN MATERIAL_EMBALAGEM_AVE_COMP MEAC
              ON MED.ID_DEFIMATEEMBA = MEAC.ID_MATEEMBA
            JOIN AVE_CONSTITUICAO_ITEM ACI
			        ON MEAC.ID_COMPAVE = ACI.ID_COMPAVE
            JOIN (SELECT ACI.ID_CONSAVE,
                         MEAC.ID_MATEEMBA,
                         SUM(CAST(ACI.QN_PESOMACHITEMCONSAVE AS FLOAT)) QN_PESOMACHCONSAVE,
                         SUM(CAST(ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT)) QN_PESOFEMECONSAVE,
                         SUM(CAST(ACI.QN_PESOMACHITEMCONSAVE + ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT) / 2) QN_PESOMISTCONSAVE
                    FROM AVE_CONSTITUICAO_ITEM ACI                           
                              JOIN MATERIAL_EMBALAGEM_AVE_COMP MEAC
                                ON ACI.ID_COMPAVE = MEAC.ID_COMPAVE
                   GROUP BY ACI.ID_CONSAVE,
                            MEAC.ID_MATEEMBA) VW_CONSTITUICAO
              ON MEAC.ID_MATEEMBA = VW_CONSTITUICAO.ID_MATEEMBA
             AND ACI.ID_CONSAVE = VW_CONSTITUICAO.ID_CONSAVE   
 WHERE COALESCE(MEF.FL_UTILFORMPPCPMATEEMBAFILI, 'N') = 'N'
UNION ALL
SELECT AUE.ID_ESTRUNIDABAT,
       MED.ID_DEFIMATEEMBA ID_MATEEMBA,
       ACI_MP.ID_CONSAVE,
       MEAC_MP.ID_COMPAVE,
       (ACI_MP.QN_PESOMACHITEMCONSAVE / VW_CONSTITUICAO.QN_PESOMACHCONSAVE) * (MEMP.QN_QTDEPRIMMATEMATEEMBA / VW_RECEITA.QN_QTDEPRIMMATEMATEEMBA) PC_MACHCOMPAVEMATEEMBA,
       (ACI_MP.QN_PESOFEMEITEMCONSAVE / VW_CONSTITUICAO.QN_PESOFEMECONSAVE) * (MEMP.QN_QTDEPRIMMATEMATEEMBA / VW_RECEITA.QN_QTDEPRIMMATEMATEEMBA)PC_FEMECOMPAVEMATEEMBA,
       (((ACI_MP.QN_PESOMACHITEMCONSAVE + ACI_MP.QN_PESOFEMEITEMCONSAVE) / 2) / VW_CONSTITUICAO.QN_PESOMISTCONSAVE) * (MEMP.QN_QTDEPRIMMATEMATEEMBA / VW_RECEITA.QN_QTDEPRIMMATEMATEEMBA) PC_MISTCOMPAVEMATEEMBA
  FROM MATERIAL_EMBALAGEM_DEFINICAO MED
            JOIN MATERIAL_EMBALAGEM_FILIAL MEF
              ON MED.ID_DEFIMATEEMBA = MEF.ID_DEFIMATEEMBA
            JOIN ABATE_UNIDADE AU
              ON MEF.EMPRESA = AU.EMPRESA
             AND MEF.FILIAL = AU.FILIAL
            JOIN ABATE_UNIDADE_ESTRUTURA AUE
              ON AU.ID_UNIDABAT = AUE.ID_UNIDABAT
            JOIN MATERIAL_EMBALAGEM_MATE_PRIM MEMP
              ON MEMP.ID_MATEEMBAFILI = MEF.ID_MATEEMBAFILI
             AND MEMP.ID_RECEPRIMMATEMATEEMBA = MEF.ID_RECEMATEEMBAFILI
            JOIN (SELECT MEMP.ID_MATEEMBAFILI,
                         MEMP.ID_RECEPRIMMATEMATEEMBA,
                         SUM(MEMP.QN_QTDEPRIMMATEMATEEMBA) QN_QTDEPRIMMATEMATEEMBA
                    FROM MATERIAL_EMBALAGEM_MATE_PRIM MEMP
                   GROUP BY MEMP.ID_MATEEMBAFILI,
                            MEMP.ID_RECEPRIMMATEMATEEMBA) VW_RECEITA
              ON VW_RECEITA.ID_MATEEMBAFILI = MEF.ID_MATEEMBAFILI
             AND VW_RECEITA.ID_RECEPRIMMATEMATEEMBA = MEF.ID_RECEMATEEMBAFILI
            JOIN MATERIAL_EMBALAGEM ME_MP
              ON MEMP.ID_PRODMATEEMBA_MATEPRIM = ME_MP.ID_PRODMATEEMBA
            JOIN MATERIAL_EMBALAGEM_AVE_COMP MEAC_MP
              ON ME_MP.ID_MATEEMBA = MEAC_MP.ID_MATEEMBA
            JOIN AVE_CONSTITUICAO_ITEM ACI_MP
			        ON MEAC_MP.ID_COMPAVE = ACI_MP.ID_COMPAVE
            JOIN (SELECT ACI.ID_CONSAVE,
                         MEAC.ID_MATEEMBA,
                         SUM(CAST(ACI.QN_PESOMACHITEMCONSAVE AS FLOAT)) QN_PESOMACHCONSAVE,
                         SUM(CAST(ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT)) QN_PESOFEMECONSAVE,
                         SUM(CAST(ACI.QN_PESOMACHITEMCONSAVE + ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT) / 2) QN_PESOMISTCONSAVE
                    FROM AVE_CONSTITUICAO_ITEM ACI                           
                              JOIN MATERIAL_EMBALAGEM_AVE_COMP MEAC
                                ON ACI.ID_COMPAVE = MEAC.ID_COMPAVE
                   GROUP BY ACI.ID_CONSAVE,
                            MEAC.ID_MATEEMBA) VW_CONSTITUICAO
              ON MEAC_MP.ID_MATEEMBA = VW_CONSTITUICAO.ID_MATEEMBA
             AND ACI_MP.ID_CONSAVE = VW_CONSTITUICAO.ID_CONSAVE   
 WHERE COALESCE(MEF.FL_UTILFORMPPCPMATEEMBAFILI, 'N') = 'S'
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_NOTAFISCPEDI' AND type = 'V')
    DROP VIEW VW_NOTAFISCPEDI
//	
CREATE OR ALTER VIEW VW_NOTAFISCPEDI AS
SELECT NOTA_FISCAL.*, PEDIDO_VENDA_NOTA_FISCAL.ID_PEDIVEND
  FROM NOTA_FISCAL,
       PEDIDO_VENDA_NOTA_FISCAL
 WHERE PEDIDO_VENDA_NOTA_FISCAL.ID_NOTAFISC = NOTA_FISCAL.ID_NOTAFISC
   AND ISNULL(NOTA_FISCAL.FL_CANCNOTAFISC, 'N') = 'N'
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_ORDEPESA_ENTRAVES' AND TYPE = 'V')
    DROP VIEW VW_ORDEPESA_ENTRAVES
//    

CREATE OR ALTER VIEW [dbo].[VW_ORDEPESA_ENTRAVES] 
	(ID_ORDEPESA,
   ID_ENTRAVEVIVA,
   NR_EQUIAPAN,
   NR_SEGUEQUIAPAN,
   ID_APANMETO,
   DT_SAIDORIG,
   DT_ENTRTRAN,
   DT_SAIDTRAN,
   DT_INICAPAN,
   DT_FINAAPAN,
   DT_CHEGEQUIAPAN,
   QN_CABECA,
   FL_ORIGINFOAPAN) 
   
   AS

SELECT PESAGEM_ORDEM.ID_ORDEPESA ID_ORDEPESA,        
       ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA ID_ENTRAVEVIVA,        
	     ENTRADA_AVE_VIVA.NR_EQUIAPANENTRAVEVIVA NR_EQUIAPAN,        
	     ENTRADA_AVE_VIVA.NR_SEGUEQUIAPANENTRAVEVIVA NR_SEGUEQUIAPAN,        
	     ENTRADA_AVE_VIVA.ID_APANMETO ID_APANMETO,        
	     ENTRADA_AVE_VIVA.DT_SAIDORIGENTRAVEVIVA DT_SAIDORIG,        
	     ENTRADA_AVE_VIVA.DT_ENTRTRANENTRAVEVIVA DT_ENTRTRAN,        
	     ENTRADA_AVE_VIVA.DT_SAIDTRANENTRAVEVIVA DT_SAIDTRAN,        
	     ENTRADA_AVE_VIVA.DT_INICAPANENTRAVEVIVA DT_INICAPAN,        
	     ENTRADA_AVE_VIVA.DT_FINAAPANENTRAVEVIVA DT_FINAAPAN,        
	     ENTRADA_AVE_VIVA.DT_CHEGEQUIAPAN DT_CHEGEQUIAPAN,        
	     ENTRADA_AVE_VIVA.QN_CABEENTRAVEVIVA QN_CABECA,        
	     'EA' FL_ORIGINFOAPAN   
  FROM PESAGEM_ORDEM        
	     LEFT OUTER JOIN ENTRADA_AVE_VIVA 
	                  ON PESAGEM_ORDEM.ID_ENTRAVEVIVA = ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA  
 WHERE (CASE WHEN ((COALESCE(PESAGEM_ORDEM.FL_FINAHANDHELDORDEPESA, 'N') = 'S') AND                 
	                 (PESAGEM_ORDEM.DT_LIBEMTECHANDHELDORDEPESA >= PESAGEM_ORDEM.DT_FINAHANDHELDORDEPESA) AND                 
	                 (PESAGEM_ORDEM.ID_USUASIST_LIBEMTEC IS NULL)) 
	           THEN 'PO'           
	           ELSE 'EA'         
	            END) = 'EA' 
	   
UNION ALL 
	   
SELECT PESAGEM_ORDEM.ID_ORDEPESA ID_ORDEPESA,        
       ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA ID_ENTRAVEVIVA,        
	     PESAGEM_ORDEM.NR_EQUIAPANORDETRAN NR_EQUIAPAN,       
	     PESAGEM_ORDEM.NR_SEGUEQUIAPANORDETRAN NR_SEGUEQUIAPAN,       
	     PESAGEM_ORDEM.ID_APANMETO_REAL ID_APANMETO,        
	     PESAGEM_ORDEM.DT_SAIDTRANORDEPESA DT_SAIDORIG,        
	     PESAGEM_ORDEM.DT_ENTRTRANORDEPESA DT_ENTRTRAN,        
	     PESAGEM_ORDEM.DT_SAIDTRANORDEPESA DT_SAIDTRAN,        
	     PESAGEM_ORDEM.DT_INICAPANORDEPESA DT_INICAPAN,        
	     PESAGEM_ORDEM.DT_FINAAPANORDEPESA DT_FINAAPAN,  
	     PESAGEM_ORDEM.DT_CHEGEQUIAPANORDEPESA DT_CHEGEQUIAPAN,        
	     (SELECT COALESCE(SUM(POG.QN_CABEREALGALPORDEPESA), 0)           
	        FROM PESAGEM_ORDEM_GALPAO POG          
	       WHERE POG.ID_ORDEPESA = PESAGEM_ORDEM.ID_ORDEPESA) QN_CABECA,       
	     'PO' FL_ORIGINFOAPAN            
  FROM PESAGEM_ORDEM        
	     LEFT OUTER JOIN ENTRADA_AVE_VIVA 
	                  ON PESAGEM_ORDEM.ID_ENTRAVEVIVA = ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA  
 WHERE (CASE WHEN ((COALESCE(PESAGEM_ORDEM.FL_FINAHANDHELDORDEPESA, 'N') = 'S') AND                 
	                 (PESAGEM_ORDEM.DT_LIBEMTECHANDHELDORDEPESA >= PESAGEM_ORDEM.DT_FINAHANDHELDORDEPESA) AND                 
	                 (PESAGEM_ORDEM.ID_USUASIST_LIBEMTEC IS NULL)) 
		         THEN 'PO'           
			       ELSE 'EA'         
			        END) = 'PO'
//


IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'Vw_Parada_Abate' AND TYPE = 'V')
    DROP VIEW Vw_Parada_Abate
//  			   
CREATE OR ALTER VIEW Vw_Parada_Abate AS
SELECT Producao_Medicao.ID_LINHTIPOAVE,
                    Producao_Medicao.DT_PADRMEDIPROD,
                    SUM(QN_MEDIPROD) AS PARADA_ABATE
               FROM PRODUCAO_MEDICAO Producao_Medicao
               JOIN PRODUCAO_EVENTO Producao_Evento
                 ON Producao_Medicao.ID_EVENPROD =
                    Producao_Evento.ID_EVENPROD
                AND Producao_Evento.FL_PROGEVENPROD = 'N'
                AND Producao_Medicao.ID_TIPOMEDIPROD = 4
              GROUP BY Producao_Medicao.ID_LINHTIPOAVE,
                       Producao_Medicao.DT_PADRMEDIPROD

//
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'Vw_Parada_Producao' AND TYPE = 'V')
    DROP VIEW Vw_Parada_Producao
//  
CREATE  VIEW Vw_Parada_Producao AS
(SELECT Producao_Medicao.ID_LINHTIPOAVE,
                    Producao_Medicao.DT_PADRMEDIPROD,
                    SUM(Producao_Medicao.QN_MEDIPROD) AS TEMPO_PARADA
               FROM PRODUCAO_MEDICAO Producao_Medicao
               JOIN PRODUCAO_EVENTO Producao_Evento
                 ON Producao_Medicao.ID_EVENPROD =
                    Producao_Evento.ID_EVENPROD
                AND Producao_Medicao.ID_TIPOMEDIPROD = 4
                AND Producao_Evento.FL_PROGEVENPROD = 'S'
              WHERE Producao_Medicao.ID_TIPOMEDIPROD = 4
              GROUP BY Producao_Medicao.ID_LINHTIPOAVE,
                       Producao_Medicao.DT_PADRMEDIPROD)
//
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PESOCARGEMBABASE' AND type = 'V')
    DROP VIEW VW_PESOCARGEMBABASE
//
CREATE OR ALTER VIEW [dbo].[VW_PESOCARGEMBABASE] AS
SELECT EXPEDICAO_CARGA.ID_CARGEXPE,
       COALESCE(VW_PALE.QN_PESOLIQUBASEPALEEXPE, 0) QN_PESOLIQUBASEPALEEXPE,
       COALESCE(VW_PALE.QN_PESOSTREPALEEXPE, 0) QN_PESOSTREPALEEXPE,
       COALESCE(VW_BASE.QN_PESOLIQUEMBABASECARGEXPE, 0) QN_PESOLIQUEMBABASECARGEXPE,
       CASE (SELECT FL_PESAAGRUPPARASIST 
	           FROM SISTEMA_PARAMETRO 
			  WHERE SISTEMA_PARAMETRO.EMPRESA = EXPEDICAO_CARGA.EMPRESA 
			    AND SISTEMA_PARAMETRO.FILIAL = EXPEDICAO_CARGA.FILIAL)
			WHEN 'S' THEN (COALESCE(VW_PALE.QN_PESOLIQUBASEPALEEXPE,0) +  
						   COALESCE(VW_PALE.QN_PESOSTREPALEEXPE,0) + 
						   COALESCE(VW_BASE.QN_PESOLIQUEMBABASECARGEXPE, 0))   
			ELSE 0 END QN_TOTAPESOBASECARGEXPE

FROM EXPEDICAO_CARGA  

     LEFT JOIN (SELECT SUM(COALESCE(EXPEDICAO_PALETE.QN_PESOLIQUBASEPALEEXPE, 0)) QN_PESOLIQUBASEPALEEXPE,
                       SUM(COALESCE(EXPEDICAO_PALETE.QN_PESOSTREPALEEXPE, 0)) QN_PESOSTREPALEEXPE, 
                       EXPEDICAO_CARGA_PALETE.ID_CARGEXPE
                  FROM EXPEDICAO_CARGA_PALETE,           
                       EXPEDICAO_PALETE
                 WHERE EXPEDICAO_CARGA_PALETE.ID_PALEEXPE = EXPEDICAO_PALETE.ID_PALEEXPE
                   AND EXPEDICAO_PALETE.FL_STATPALEEXPE <> 'ER'
              GROUP BY EXPEDICAO_CARGA_PALETE.ID_CARGEXPE) VW_PALE ON VW_PALE.ID_CARGEXPE = EXPEDICAO_CARGA.ID_CARGEXPE
              
     LEFT JOIN (SELECT (SUM(COALESCE(QN_LIQUPESAEMBABASECARGEXPE, 0)) + 
                        SUM(COALESCE(QN_LIQUPESAPALEBASECARGEXPE, 0))) QN_PESOLIQUEMBABASECARGEXPE,
                       EXPEDICAO_CARGA_BASE.ID_CARGEXPE
                  FROM EXPEDICAO_CARGA_BASE
              GROUP BY EXPEDICAO_CARGA_BASE.ID_CARGEXPE) VW_BASE ON VW_BASE.ID_CARGEXPE = EXPEDICAO_CARGA.ID_CARGEXPE
//
//

IF EXISTS (SELECT NAME 
             FROM SYSOBJECTS  
            WHERE NAME = 'VW_PRO006'
              AND TYPE = 'V')
  DROP VIEW VW_PRO006
//

CREATE OR ALTER VIEW VW_PRO006
AS
  SELECT 'Estoque' FL_LOCAREGIPROD,
         FL_STATREGIPROD FL_STATREPOREGIPROD,
         PRODUCAO_REGISTRO.EMPRESA,
         PRODUCAO_REGISTRO.FILIAL,
         PRODUCAO_REGISTRO.ID_REGIPROD,
         PRODUCAO_REGISTRO.ID_IDENREGIPROD,
         PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
         1 QN_EMBAREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_TARAEMBAREGIPROD, 0) QN_TARAEMBAREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_TARACOMPREGIPROD, 0) QN_TARACOMPREGIPROD,
         PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD,
         PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
         EMBALAGEM.QN_TARAEMBA,
         PRODUCAO_REGISTRO.ID_MATERIAL,
         PRODUCAO_REGISTRO.ID_EMBALAGEM,
         PRODUCAO_REGISTRO.ID_MATEALMO,
         PRODUCAO_REGISTRO.DT_REGIPROD,
         PRODUCAO_REGISTRO.DT_PADRREGIPROD,
         PRODUCAO_REGISTRO.DT_ELABREGIPROD,
         PRODUCAO_REGISTRO.DT_ENTRTUNEREGIPROD,
         PRODUCAO_REGISTRO.DT_SAIDTUNEREGIPROD,
         PRODUCAO_REGISTRO.DT_BALAREGIPROD,
         PRODUCAO_REGISTRO.ID_BALANCA,
         PRODUCAO_REGISTRO.ID_TRANREGIPROD,
         PRODUCAO_REGISTRO.ID_ALMOXARIFADO,
         PRODUCAO_REGISTRO.FL_DISPREGIPROD,
         PRODUCAO_REGISTRO.ID_ESTRUNIDABAT,
         PRODUCAO_REGISTRO.NR_LOTERASTREGIPROD,
         PRODUCAO_REGISTRO.DT_CONTREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.FL_SEQUREGIPROD,'N') FL_SEQUREGIPROD,
         PRODUCAO_REGISTRO.DT_VALIREGIPROD,
         PRODUCAO_REGISTRO.ID_PALEEXPE,
         COALESCE(PRODUCAO_REGISTRO.FL_SITUREGIPROD,'NM')FL_SITUREGIPROD,
         PRODUCAO_REGISTRO.ID_BATCPROD,
         PRODUCAO_BATCH.NR_BATCPROD,
         PRODUCAO_REGISTRO.ID_TUNEPROD,
         PRODUCAO_REGISTRO.ID_ENTRAVEVIVA,
         COALESCE(PRODUCAO_REGISTRO.QN_PESOQUEBREGIPROD,0) QN_PESOQUEBREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD,0) QN_PESOORIGREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_PRODEMBAREGIPROD,0) QN_PRODEMBAREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_CAIXREGIPROD,0) QN_CAIXREGIPROD,
         PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD,
         PRODUCAO_REGISTRO.DT_LOTERASTREGIPROD,
         PRODUCAO_REGISTRO.ID_HORASECULOTE,
         CASE WHEN LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE IS NOT NULL
              THEN 'LS ' + CAST(LOTE_SECUNDARIO_HORARIO.NR_HORASECULOTE AS VARCHAR(10)) + ' - ' + CONVERT(CHAR(10), PRODUCAO_REGISTRO.DT_PADRREGIPROD, 103)
              ELSE NULL
          END GN_LOTESECU,
         LOTE_SECUNDARIO_HORARIO.GN_TAGHORASECULOTE,
         PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD GN_SEQUITEMDIARTURNPROD,
         PRODUCAO_REGISTRO_TURNO.FL_TURNMANUREGIPROD,
         PRODUCAO_REGISTRO.FL_SIMUREGIPROD,
         PRODUCAO_REGISTRO.GN_PERIRASTREGIPROD,
         PRODUCAO_REGISTRO.GN_SSCCREGIPROD,
		 PRODUCAO_REGISTRO.NR_LOTERASTTERCREGIPROD,
		 PRODUCAO_REGISTRO.ID_VARIDEFIEMBA,
	 	 PRODUCAO_REGISTRO.ID_RECIPIENTE
    FROM PRODUCAO_REGISTRO
         LEFT JOIN PRODUCAO_BATCH 
                ON PRODUCAO_REGISTRO.ID_BATCPROD = PRODUCAO_BATCH.ID_BATCPROD
              JOIN EMBALAGEM
                ON PRODUCAO_REGISTRO.ID_EMBALAGEM = EMBALAGEM.ID_EMBALAGEM
              JOIN ABATE_UNIDADE_ESTRUTURA
                ON PRODUCAO_REGISTRO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
         LEFT JOIN PRODUCAO_REGISTRO_TURNO
                ON PRODUCAO_REGISTRO.ID_REGIPROD = PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
         LEFT JOIN LOTE_SECUNDARIO_HORARIO
                ON PRODUCAO_REGISTRO.ID_HORASECULOTE = LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE
     WHERE FL_STATREGIPROD IN ('ES', 'SQ', 'TU', 'CR', 'BQ', 'ST')
     AND PRODUCAO_REGISTRO.ID_PRODMATEEMBA <> '9999'
  UNION ALL
  (SELECT 'Repositório' FL_LOCAREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.EMPRESA,
          PRODUCAO_REGISTRO_REPOSITORIO.FILIAL,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_REGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_IDENREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA,
          CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN -1 
               ELSE 1 
           END QN_EMBAREGIPROD,
          CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARAEMBAREGIPROD, 0) * -1 
               ELSE COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARAEMBAREGIPROD, 0) 
           END QN_TARAEMBAREGIPROD,
          CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARACOMPREGIPROD, 0) * -1 
               ELSE COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARACOMPREGIPROD, 0) 
           END QN_TARACOMPREGIPROD,
          CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD * -1 
               ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD 
           END QN_PESOLIQUREGIPROD,
          CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD * -1 
               ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD 
           END QN_PESOPADRREGIPROD,
          CASE WHEN PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'SE' THEN EMBALAGEM.QN_TARAEMBA * -1 
               ELSE EMBALAGEM.QN_TARAEMBA 
           END QN_TARAEMBA,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_MATERIAL,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_MATEALMO,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_REGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
          NULL DT_ELABREGIPROD,
          NULL DT_ENTRTUNEREGIPROD,
          NULL DT_SAIDTUNEREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_BALAREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_BALANCA,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_TRANREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_ALMOXARIFADO,
          'S' FL_DISPREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT,
          PRODUCAO_REGISTRO_REPOSITORIO.NR_LOTERASTREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_CONTREGIPROD,
          'N' FL_SEQUREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_VALIREGIPROD,
          0,
          ' ' FL_SITUREGIPROD,
          Null,
          ' ',
          NULL,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_ENTRAVEVIVA,
          NULL,
          NULL,
          0,
          0,
          PRODUCAO_REGISTRO_REPOSITORIO.FL_TIPOUNIDREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_LOTERASTREGIPROD,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          PRODUCAO_REGISTRO_REPOSITORIO.FL_SIMUREGIPROD,
          NULL GN_PERIRASTREGIPROD,
          NULL GN_SSCCREGIPROD,
		  NULL NR_LOTERASTTERCREGIPROD,
		  PRODUCAO_REGISTRO_REPOSITORIO.ID_VARIDEFIEMBA,
		  PRODUCAO_REGISTRO_REPOSITORIO.ID_RECIPIENTE
     FROM PRODUCAO_REGISTRO_REPOSITORIO
               JOIN EMBALAGEM
                 ON PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM = EMBALAGEM.ID_EMBALAGEM
               JOIN ABATE_UNIDADE_ESTRUTURA
                 ON PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
    WHERE PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD <> 'DP'
      AND PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA <> '9999'
  UNION ALL
   SELECT 'Repositório' FL_LOCAREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.EMPRESA,
          PRODUCAO_REGISTRO_REPOSITORIO.FILIAL,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_REGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_IDENREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA,
          1 QN_EMBAREGIPROD,
          COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARAEMBAREGIPROD, 0) QN_TARAEMBAREGIPROD,
          COALESCE(PRODUCAO_REGISTRO_REPOSITORIO.QN_TARACOMPREGIPROD, 0) QN_TARACOMPREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD,
          EMBALAGEM.QN_TARAEMBA,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_MATERIAL,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_MATEALMO,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_REGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
          NULL DT_ELABREGIPROD,
          NULL DT_ENTRTUNEREGIPROD,
          NULL DT_SAIDTUNEREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_BALAREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_BALANCA,
          NULL ID_TRANREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_ALMOXARIFADO,
          'S' FL_DISPREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT,
          PRODUCAO_REGISTRO_REPOSITORIO.NR_LOTERASTREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_CONTREGIPROD,
          'N' FL_SEQUREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_VALIREGIPROD,
          0,
          ' ' FL_SITUREGIPROD,
          Null,
          ' ',
          NULL,
          PRODUCAO_REGISTRO_REPOSITORIO.ID_ENTRAVEVIVA,
          NULL,
          NULL,
          0,
          0,
          PRODUCAO_REGISTRO_REPOSITORIO.FL_TIPOUNIDREGIPROD,
          PRODUCAO_REGISTRO_REPOSITORIO.DT_LOTERASTREGIPROD,
          NULL,
          NULL,
          NULL,
          NULL,
          NULL,
          PRODUCAO_REGISTRO_REPOSITORIO.FL_SIMUREGIPROD,
          NULL GN_PERIRASTREGIPROD,
          NULL GN_SSCCREGIPROD,
		  NULL NR_LOTERASTTERCREGIPROD,
		  PRODUCAO_REGISTRO_REPOSITORIO.ID_VARIDEFIEMBA,
		  PRODUCAO_REGISTRO_REPOSITORIO.ID_RECIPIENTE
     FROM PRODUCAO_REGISTRO_REPOSITORIO
               JOIN EMBALAGEM
                 ON PRODUCAO_REGISTRO_REPOSITORIO.ID_EMBALAGEM = EMBALAGEM.ID_EMBALAGEM
               JOIN ABATE_UNIDADE_ESTRUTURA
                 ON PRODUCAO_REGISTRO_REPOSITORIO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
    WHERE PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'DP'
      AND PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA <> '9999'
  )
//
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO062_DESTREPR' AND type = 'V')
   DROP VIEW VW_PRO062_DESTREPR
//
CREATE OR ALTER VIEW VW_PRO062_DESTREPR AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       COUNT(MATERIAL_EMBALAGEM.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,
       SUM(CONVERT(FLOAT, ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
       SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                         WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                         ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                        END)) QN_PESOVENDREGIPROD,
       SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
       SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0)
                         WHEN 0 THEN ISNULL(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0)
                         ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD
                         END)) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DESTINACAO
       JOIN DATA_PADRAO_REGISTRO
         ON PRODUCAO_REGISTRO_DESTINACAO.EMPRESA = DATA_PADRAO_REGISTRO.EMPRESA
        AND PRODUCAO_REGISTRO_DESTINACAO.FILIAL = DATA_PADRAO_REGISTRO.FILIAL
        AND PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       PRODUCAO_REGISTRO_DEST_ITEM,
       PRODUCAO_REGISTRO,
       MATERIAL,
       MATERIAL_EMBALAGEM,
       MATERIAL_TIPO,
       (SELECT PRI.ID_REGIPROD,
         CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
              FROM PRODUCAO_REGISTRO PRI INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON PRI.EMPRESA = SPF.EMPRESA AND PRI.FILIAL = SPF.FILIAL) VI_PESOLIQU
 WHERE (PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD  = PRODUCAO_REGISTRO.ID_REGIPROD)
   AND (PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD  = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD)
   AND (PRODUCAO_REGISTRO.ID_MATERIAL  = MATERIAL.ID_MATERIAL)
   AND (PRODUCAO_REGISTRO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
   AND (MATERIAL.ID_TIPOMATE  = MATERIAL_TIPO.ID_TIPOMATE)
   AND (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD  = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD  NOT IN ( 'ER' ))
   AND (VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD)       
GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
         DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
         MATERIAL_EMBALAGEM.ID_TIPOAVE,
         MATERIAL.ID_TIPOMATE,
         MATERIAL_TIPO.NM_TIPOMATE,
         MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
         MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
         PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
         MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA
//		  

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO062_DESTREPR_DIA' AND type = 'V')
   DROP VIEW VW_PRO062_DESTREPR_DIA
//
CREATE OR ALTER VIEW [dbo].[VW_PRO062_DESTREPR_DIA] AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
       PRODUCAO_REGISTRO.DT_PADRREGIPROD,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       COUNT(MATERIAL_EMBALAGEM.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,
       SUM(CONVERT(FLOAT, ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
       SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                         WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                         ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                          END)) QN_PESOVENDREGIPROD,
       SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
       SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0)
                         WHEN 0 THEN ISNULL(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0)
                         ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD
                         END)) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DESTINACAO
       JOIN DATA_PADRAO_REGISTRO
         ON PRODUCAO_REGISTRO_DESTINACAO.EMPRESA = DATA_PADRAO_REGISTRO.EMPRESA
        AND PRODUCAO_REGISTRO_DESTINACAO.FILIAL = DATA_PADRAO_REGISTRO.FILIAL
        AND PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       PRODUCAO_REGISTRO_DEST_ITEM,
       PRODUCAO_REGISTRO,
       MATERIAL,
       MATERIAL_EMBALAGEM,
       MATERIAL_TIPO,
       (SELECT PRI.ID_REGIPROD,
         CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
              FROM PRODUCAO_REGISTRO PRI INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON PRI.EMPRESA = SPF.EMPRESA AND PRI.FILIAL = SPF.FILIAL) VI_PESOLIQU
 WHERE (PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD  = PRODUCAO_REGISTRO.ID_REGIPROD)
   AND (PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD  = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD)
   AND (PRODUCAO_REGISTRO.ID_MATERIAL  = MATERIAL.ID_MATERIAL)
   AND (PRODUCAO_REGISTRO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
   AND (MATERIAL.ID_TIPOMATE  = MATERIAL_TIPO.ID_TIPOMATE)
   AND (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD  = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD  NOT IN ( 'ER' ))
   AND (VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD)       
GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
         DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
         PRODUCAO_REGISTRO.DT_PADRREGIPROD,
         MATERIAL_EMBALAGEM.ID_TIPOAVE,
         MATERIAL.ID_TIPOMATE,
         MATERIAL_TIPO.NM_TIPOMATE,
         MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
         MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
         PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
         MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA
//          

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO062_PRODDESC' AND type = 'V')
    DROP VIEW VW_PRO062_PRODDESC
//
CREATE OR ALTER VIEW VW_PRO062_PRODDESC AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
       AVE_PARTE.NM_PARTAVE,
       PRODUCAO_DESCARTE.ID_PARTAVE,
       SUM(CONVERT(FLOAT, COALESCE(PRODUCAO_DESCARTE.QN_UNIDDESCPROD, 0))) QN_UNIDDESCPROD,
       SUM(CONVERT(FLOAT, COALESCE(PRODUCAO_DESCARTE.QN_PESODESCPROD, 0))) QN_PESODESCPROD,
       PRODUCAO_DESCARTE.ID_TIPOAVE,
       PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
       PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
	   VW_TURNO.GN_SEQUTURNDESCPROD
  FROM PRODUCAO_DESCARTE
       JOIN DATA_PADRAO_REGISTRO
         ON PRODUCAO_DESCARTE.EMPRESA = DATA_PADRAO_REGISTRO.EMPRESA
        AND PRODUCAO_DESCARTE.FILIAL = DATA_PADRAO_REGISTRO.FILIAL
        AND PRODUCAO_DESCARTE.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR
       JOIN AVE_PARTE
         ON PRODUCAO_DESCARTE.ID_PARTAVE = AVE_PARTE.ID_PARTAVE
       JOIN ENTRADA_AVE_VIVA
         ON PRODUCAO_DESCARTE.ID_ENTRAVEVIVA = ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA
       JOIN PRODUCAO_DESCARTE_MOTIVO
         ON PRODUCAO_DESCARTE.ID_MOTIDESCPROD = PRODUCAO_DESCARTE_MOTIVO.ID_MOTIDESCPROD
	   JOIN (SELECT PRODUCAO_DESCARTE.ID_DESCPROD,
                    CASE WHEN PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD IS NOT NULL 
                         THEN CAST(PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD AS VARCHAR(10)) + COALESCE((SELECT TOP 1 SUBSTRING(PT.GN_SEQUTURNPROD, CHARINDEX('º', PT.GN_SEQUTURNPROD), LEN(PT.GN_SEQUTURNPROD))
                                                                                                       FROM PRODUCAO_TURNO PT
                                                                                                            JOIN ABATE_UNIDADE_ESTRUTURA AUE ON PT.ID_UNIDABAT = AUE.ID_UNIDABAT
                                                                                                      WHERE AUE.ID_ESTRUNIDABAT = PRODUCAO_DESCARTE.ID_ESTRUNIDABAT), 'º')
                         ELSE COALESCE((SELECT TOP 1 PTDI.GN_SEQUITEMDIARTURNPROD
                                          FROM PRODUCAO_TURNO_DIARIO_ITEM PTDI
                                               JOIN PRODUCAO_TURNO_DIARIO PTD ON PTDI.ID_DIARTURNPROD = PTD.ID_DIARTURNPROD
                                               JOIN ABATE_UNIDADE_ESTRUTURA AUE ON PTD.ID_UNIDABAT = AUE.ID_UNIDABAT
                                         WHERE DATEADD(MS, -DATEPART(MS, PRODUCAO_DESCARTE.DT_DESCPROD), PRODUCAO_DESCARTE.DT_DESCPROD) BETWEEN PTDI.DT_HORAINICITEMDIARTURNPROD AND PTDI.DT_HORAFINAITEMDIARTURNPROD
                                           AND AUE.ID_ESTRUNIDABAT = PRODUCAO_DESCARTE.ID_ESTRUNIDABAT), '1º')
                    END AS GN_SEQUTURNDESCPROD,
                    CASE WHEN PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD IS NOT NULL THEN 'S' ELSE 'N' END AS FL_TURNMANUREGIPROD
               FROM PRODUCAO_DESCARTE) VW_TURNO 
		 ON VW_TURNO.ID_DESCPROD = PRODUCAO_DESCARTE.ID_DESCPROD
 WHERE PRODUCAO_DESCARTE_MOTIVO.FL_TIPOMOTIDESCPROD = 'DS'
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
          AVE_PARTE.NM_PARTAVE,
          PRODUCAO_DESCARTE.ID_PARTAVE,
          PRODUCAO_DESCARTE.ID_TIPOAVE,
          PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
          PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
		  VW_TURNO.GN_SEQUTURNDESCPROD
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO062_PRODREGI' AND type = 'V')
    DROP VIEW VW_PRO062_PRODREGI
//
CREATE OR ALTER VIEW VW_PRO062_PRODREGI AS
 SELECT DATA_PADRAO_REGISTRO.EMPRESA,
        DATA_PADRAO_REGISTRO.FILIAL,
        DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
        DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
        MATERIAL_EMBALAGEM.ID_TIPOAVE,
        MATERIAL.ID_TIPOMATE,
        MATERIAL_TIPO.NM_TIPOMATE,
        VI_PRODUCAO.ID_PRODMATEEMBA,
        MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_QTDECAIXREGIPROD)) QN_QTDECAIXREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOPADRREGIPROD)) QN_PESOPADRREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) QN_PESOVENDREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOLIQUREGIPROD)) QN_PESOLIQUREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD)) QN_DESVPESOREGIPROD,
        CASE SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD))
        WHEN 0 THEN 0
        ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD)) / CONVERT(FLOAT, SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOLIQUREGIPROD))) * 100, 2)
        END PC_DESVPESOREGIPROD,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2)
        END PC_PESOVEND_PESOORIG,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2)
        END PC_PESOVEND_PESOABAT,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND((SUM(CONVERT(FLOAT, ISNULL(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0))) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA))) * 100, 2)
        END PC_PESOLIQU_PESOORIG,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND((SUM(CONVERT(FLOAT, ISNULL(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0))) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA))) * 100, 2)
        END PC_PESOLIQU_PESOABAT
   FROM DATA_PADRAO_REGISTRO,
        MATERIAL,
        MATERIAL_EMBALAGEM,
        MATERIAL_TIPO,
        (SELECT VW_PRODUCAO.EMPRESA,
                VW_PRODUCAO.FILIAL,
                VW_PRODUCAO.DT_PADRREGIPROD,
                VW_PRODUCAO.ID_PRODMATEEMBA,
                COUNT(VW_PRODUCAO.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,
                SUM(CONVERT(FLOAT, ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
                SUM(CONVERT(FLOAT, CASE ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                ELSE VW_PRODUCAO.QN_PESOPADRREGIPROD
                END)) QN_PESOVENDREGIPROD,
                SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
                SUM(CONVERT(FLOAT, CASE ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                WHEN 0 THEN 0
                ELSE ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0) - ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                END)) QN_DESVPESOREGIPROD
           FROM VW_PRODUCAO,
               (SELECT PRI.ID_REGIPROD,
                  CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
                       FROM VW_PRODUCAO PRI INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON PRI.EMPRESA = SPF.EMPRESA AND PRI.FILIAL = SPF.FILIAL) VI_PESOLIQU
          WHERE	(VW_PRODUCAO.ID_PRODMATEEMBA  <> '9999')
            AND	ISNULL(VW_PRODUCAO.FL_ORIGREGIPROD, 'NM')  IN ( 'NM'  , 'RS'  )
            AND	VW_PRODUCAO.FL_STATREGIPROD  NOT IN ( 'ER'  , 'CO'  )
            AND	ISNULL(VW_PRODUCAO.FL_PRODPROPREGIPROD, 'S')  = 'S'
            AND (VI_PESOLIQU.ID_REGIPROD = VW_PRODUCAO.ID_REGIPROD)             
          GROUP BY EMPRESA,
          FILIAL,
          DT_PADRREGIPROD,
          ID_PRODMATEEMBA ) VI_PRODUCAO,
        (SELECT DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
                SUM(CONVERT(FLOAT, ISNULL(ENTRADA_AVE_VIVA.QN_PESOORIGENTRAVEVIVA, 0))) QN_PESOORIGENTRAVEVIVA,
                ROUND(SUM(CONVERT(FLOAT, ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA * ((ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_PESOTARAENTRAVEVIVA) / CONVERT(FLOAT,
                CASE ISNULL(ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA, 0)
                WHEN 0 THEN ENTRADA_AVE_VIVA.QN_CABEENTRAVEVIVA
                ELSE (ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_CONTINICENTRAVEVIVA + ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA)
                END)))), 2) QN_PESOMORTENTRAVEVIVA,
                SUM(CONVERT(FLOAT, ISNULL(ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA, 0) - ISNULL(ENTRADA_AVE_VIVA.QN_PESOTARAENTRAVEVIVA, 0))) QN_PESOABATENTRAVEVIVA
           FROM DATA_PADRAO_REGISTRO,
                ENTRADA_AVE_VIVA
          WHERE	(DATA_PADRAO_REGISTRO.ID_REGIDATAPADR  = ENTRADA_AVE_VIVA.ID_REGIDATAPADR)
          AND	(ENTRADA_AVE_VIVA.FL_STATENTRAVEVIVA  <> 'EX')
          GROUP BY  DATA_PADRAO_REGISTRO.DT_REGIDATAPADR) VW_ENTRAVEVIVA
  WHERE (DATA_PADRAO_REGISTRO.EMPRESA  = VI_PRODUCAO.EMPRESA)
  AND	(DATA_PADRAO_REGISTRO.FILIAL  = VI_PRODUCAO.FILIAL)
  AND	(DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VI_PRODUCAO.DT_PADRREGIPROD)
  AND	(VI_PRODUCAO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
  AND	(MATERIAL_EMBALAGEM.ID_MATERIAL  = MATERIAL.ID_MATERIAL)
  AND	(MATERIAL.ID_TIPOMATE  = MATERIAL_TIPO.ID_TIPOMATE)
  AND	(DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VW_ENTRAVEVIVA.DT_REGIDATAPADR)
GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,
      DATA_PADRAO_REGISTRO.FILIAL,
      DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
      DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
      VI_PRODUCAO.ID_PRODMATEEMBA,
      MATERIAL_EMBALAGEM.ID_TIPOAVE,
      MATERIAL.ID_TIPOMATE,
      MATERIAL_TIPO.NM_TIPOMATE,
      MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
      VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA,
      VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA,
      VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA
//
  
  
If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO062_PRODREPR' AND type = 'V')
    DROP VIEW VW_PRO062_PRODREPR
//
CREATE OR ALTER VIEW VW_PRO062_PRODREPR AS	
 SELECT DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
        DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
        MATERIAL_EMBALAGEM.ID_TIPOAVE,
        MATERIAL.ID_TIPOMATE,
        MATERIAL_TIPO.NM_TIPOMATE,
        MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
        MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
        COUNT(MATERIAL_EMBALAGEM.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,
        SUM(CONVERT(FLOAT, ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
        SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                          WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                          ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                          END)) QN_PESOVENDREGIPROD,
        SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
        SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                            WHEN 0 THEN 0
                            ELSE ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0) - ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                            END)) QN_DESVPESOREGIPROD,
        CASE SUM(CONVERT(FLOAT, ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)))
        WHEN 0 THEN 0
        ELSE ROUND(SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0) - ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0))) / CONVERT(FLOAT, SUM(CONVERT(FLOAT, ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)))) * 100, 2)
        END PC_DESVPESOREGIPROD,
        CASE ISNULL(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0)
        WHEN 0 THEN 0
        ELSE ROUND((SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                                       WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                                       ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                                        END)) / CONVERT(FLOAT, ISNULL(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0))) * 100, 2)
        END PC_PESOVEND,
        CASE ISNULL(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0)
        WHEN 0 THEN 0
        ELSE ROUND((SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0))) / CONVERT(FLOAT, VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR)) * 100, 2)
        END PC_PESOLIQU,
        ISNULL(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0) QN_PESOLIQUDESTREPR,
        ISNULL(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) QN_PESOVENDDESTREPR
   FROM DATA_PADRAO_REGISTRO,
        PRODUCAO_REGISTRO,
        MATERIAL,
        MATERIAL_EMBALAGEM,
        MATERIAL_TIPO,
        VW_PRODUCAO_REPROCESSO,
        (SELECT PRI.ID_REGIPROD,
                CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
           FROM PRODUCAO_REGISTRO PRI 
                INNER JOIN SISTEMA_PARAMETRO_FILIAL SPF ON PRI.EMPRESA = SPF.EMPRESA AND PRI.FILIAL = SPF.FILIAL) VI_PESOLIQU 
  WHERE	(DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = PRODUCAO_REGISTRO.DT_PADRREGIPROD)
    AND	(PRODUCAO_REGISTRO.ID_MATERIAL  = MATERIAL.ID_MATERIAL)
    AND	(PRODUCAO_REGISTRO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
    AND	(MATERIAL.ID_TIPOMATE  = MATERIAL_TIPO.ID_TIPOMATE)
    AND	(DATA_PADRAO_REGISTRO.ID_REGIDATAPADR  = VW_PRODUCAO_REPROCESSO.ID_REGIDATAPADR)
    AND	ISNULL(PRODUCAO_REGISTRO.FL_ORIGREGIPROD, 'NM')  = 'RP'
    AND	PRODUCAO_REGISTRO.FL_STATREGIPROD  NOT IN ( 'ER'  , 'CO'  )
    AND	(MATERIAL_EMBALAGEM.ID_PRODMATEEMBA  <> '9999')
    AND (VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD)       
GROUP BY DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
         DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
         MATERIAL_EMBALAGEM.ID_TIPOAVE,
         MATERIAL.ID_TIPOMATE,
         MATERIAL_TIPO.NM_TIPOMATE,
         MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
         MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
         ISNULL(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0),
         ISNULL(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0),
         QN_PESOLIQUDESTREPR,
         QN_PESOVENDDESTREPR
//
 
CREATE OR ALTER VIEW VW_PRO073_PRODREGI 
AS 
SELECT ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
	   ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA,
	   MATERIAL.ID_TIPOMATE,
	   MATERIAL_TIPO.NM_TIPOMATE,
	   VW_PRODUCAO.ID_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   SUM(VW_PRODUCAO.QN_QTDECAIXREGIPROD) QN_QTDECAIXREGIPROD,
	   SUM(VW_PRODUCAO.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
	   SUM(VW_PRODUCAO.QN_PESOVENDREGIPROD) QN_PESOVENDREGIPROD,
	   SUM(VW_PRODUCAO.QN_PESOLIQUREGIPROD) QN_PESOLIQUREGIPROD,
	   SUM(VW_PRODUCAO.QN_PESOORIGREGIPROD) QN_PESOORIGREGIPROD,
	   SUM(VW_PRODUCAO.QN_DESVPESOREGIPROD) QN_DESVPESOREGIPROD,		 
	   CASE SUM(VW_PRODUCAO.QN_PESOORIGREGIPROD) 
			WHEN 0 
				THEN 0 
			ELSE ROUND(SUM(VW_PRODUCAO.QN_DESVPESOREGIPROD) / SUM(VW_PRODUCAO.QN_PESOORIGREGIPROD) * 100, 2) 
	   END PC_DESVPESOREGIPROD,
		 
	   CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0) 
			WHEN 0 
				THEN 0 
			ELSE ROUND(SUM(VW_PRODUCAO.QN_PESOVENDREGIPROD) / (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA) * 100, 2) 
	   END PC_PESOVEND_PESOORIG,		 
	   CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0) 
			WHEN 0 
				THEN 0 
			ELSE ROUND(SUM(VW_PRODUCAO.QN_PESOVENDREGIPROD) / (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA) * 100, 2) 
	   END PC_PESOVEND_PESOABAT,
		 
	   CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0) 
			WHEN 0 
				THEN 0 
			ELSE ROUND((SUM(ISNULL(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0)) / (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2) 
	   END PC_PESOLIQU_PESOORIG,
		 
	   CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0) 
			WHEN 0 
				THEN 0 
			ELSE ROUND((SUM(ISNULL(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0)) / (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2) 
	   END PC_PESOLIQU_PESOABAT
  FROM ENTRADA_AVE_VIVA,
	   MATERIAL,
	   MATERIAL_EMBALAGEM,
	   MATERIAL_TIPO,
	   DATA_PADRAO_REGISTRO,
	   (SELECT ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
			   ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA,
			   PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
			   PRODUCAO_REGISTRO.DT_PADRREGIPROD,
			   COUNT(PRODUCAO_REGISTRO.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,
			   SUM(ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)) QN_PESOPADRREGIPROD,
			   SUM(CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) 
		      	       WHEN 0 
		      				THEN PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD 
					   ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
		           END) QN_PESOVENDREGIPROD,
			   SUM(ISNULL(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0)) QN_PESOLIQUREGIPROD,
			   SUM(CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
						WHEN 0 
							THEN ISNULL(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
						ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD 
				   END) QN_PESOORIGREGIPROD,
			   SUM(CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) 
						WHEN 0 
							THEN 0 
						ELSE (
							CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
								WHEN 0 
									THEN ISNULL(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
								ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD 
							END) - ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) 
				   END) QN_DESVPESOREGIPROD
		  FROM PRODUCAO_REGISTRO,
			   MATERIAL_EMBALAGEM,
		       ENTRADA_AVE_VIVA 
		 WHERE (PRODUCAO_REGISTRO.ID_PRODMATEEMBA  <> '9999')
	       AND ISNULL(PRODUCAO_REGISTRO.FL_ORIGREGIPROD, 'NM')  IN ( 'NM'  , 'RS'  )
	       AND PRODUCAO_REGISTRO.FL_STATREGIPROD  NOT IN ( 'ER'  , 'DM'  )
	       AND ISNULL(PRODUCAO_REGISTRO.FL_PRODPROPREGIPROD, 'S')  = 'S'
	       AND (PRODUCAO_REGISTRO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
	       AND (MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA  = 'EM')
	       AND (PRODUCAO_REGISTRO.ID_ENTRAVEVIVA  = ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA)
 GROUP BY PRODUCAO_REGISTRO.DT_PADRREGIPROD,
	   PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
	   ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
	   ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA 
 UNION
 	   SELECT ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
			  ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA,
			  PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA,
			  PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
			  COUNT(PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,
			  SUM(ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD, 0)) QN_PESOPADRREGIPROD,
			  SUM(CASE ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD, 0) 
						WHEN 0 
							THEN PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD 
						ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD 
				  END) QN_PESOVENDREGIPROD,
			  SUM(ISNULL(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0)) QN_PESOLIQUREGIPROD,
			  SUM(CASE ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOORIGREGIPROD, 0) 
						WHEN 0 
							THEN CASE ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD, 0) 
									WHEN 0 
										THEN ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD, 0) 
									ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD 
								 END 
						ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOORIGREGIPROD 
				  END) QN_PESOORIGREGIPROD,
			  SUM(CASE ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD, 0) 
						WHEN 0 
							THEN 0 
						ELSE 
							CASE ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOORIGREGIPROD, 0) 
								WHEN 0 
									THEN ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD, 0) 
								ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOORIGREGIPROD 
							END - ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD, 0) 
				  END) QN_DESVPESOREGIPROD
	     FROM PRODUCAO_REGISTRO_REPOSITORIO,
			  PRODUCAO_REGISTRO,
			  MATERIAL_EMBALAGEM,
			  ENTRADA_AVE_VIVA 
		WHERE (PRODUCAO_REGISTRO_REPOSITORIO.ID_REGIPROD  = PRODUCAO_REGISTRO.ID_REGIPROD)
		  AND (PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA  <> '9999')
		  AND ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.FL_ORIGREGIPROD, 'NM')  IN ( 'NM'  , 'RS'  )
		  AND PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD  = 'DP'
		  AND ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.FL_PRODPROPREGIPROD, 'S')  = 'S'
		  AND (PRODUCAO_REGISTRO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
	      AND (MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA  = 'EM')
	   GROUP BY PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
		 	    PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA,
			    ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
			    ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA) VW_PRODUCAO,
	    (SELECT	 ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
			 ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA,
			 SUM(ISNULL(ENTRADA_AVE_VIVA.QN_PESOORIGENTRAVEVIVA, 0)) QN_PESOORIGENTRAVEVIVA,
			 ROUND(SUM(ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA * ((ENTRADA_AVE_VIVA.QN_PESOPENDENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_PESOTARAENTRAVEVIVA) /  
		CASE ISNULL(ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA, 0) 
			WHEN 0 THEN ENTRADA_AVE_VIVA.QN_CABEENTRAVEVIVA 
			ELSE (ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_CONTINICENTRAVEVIVA + ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA) 
		END)), 2) QN_PESOMORTENTRAVEVIVA,
			 SUM(ISNULL(ENTRADA_AVE_VIVA.QN_PESOPENDENTRAVEVIVA, 0) - ISNULL(ENTRADA_AVE_VIVA.QN_PESOTARAENTRAVEVIVA, 0)) QN_PESOABATENTRAVEVIVA
	FROM  ENTRADA_AVE_VIVA 
	WHERE	 (ENTRADA_AVE_VIVA.FL_STATENTRAVEVIVA  <> 'EX')
	GROUP BY ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
		  ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA) VW_ENTRAVEVIVA 
WHERE	 (ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA  = VW_PRODUCAO.ID_ENTRAVEVIVA)
 AND	(VW_PRODUCAO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
 AND	(MATERIAL_EMBALAGEM.ID_MATERIAL  = MATERIAL.ID_MATERIAL)
 AND	(MATERIAL.ID_TIPOMATE  = MATERIAL_TIPO.ID_TIPOMATE)
 AND	(ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA  = VW_ENTRAVEVIVA.ID_ENTRAVEVIVA)
 AND	(ENTRADA_AVE_VIVA.ID_REGIDATAPADR  = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR)
 AND	(DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VW_PRODUCAO.DT_PADRREGIPROD)
GROUP BY ENTRADA_AVE_VIVA.ID_ENTRAVEVIVA,
	 ENTRADA_AVE_VIVA.NR_MARTENTRAVEVIVA,
	 VW_PRODUCAO.ID_PRODMATEEMBA,
	 MATERIAL.ID_TIPOMATE,
	 MATERIAL_TIPO.NM_TIPOMATE,
	 MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	 VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA,
	 VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA,
	  VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA 
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRO125_PRODREGI' AND TYPE = 'V')
    DROP VIEW VW_PRO125_PRODREGI
//
CREATE OR ALTER VIEW VW_PRO125_PRODREGI AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
       VI_PRODUCAO.NR_SEQUTURN,
       VI_PRODUCAO.ID_TIPOAVE,
       VI_PRODUCAO.NM_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       VI_PRODUCAO.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
       MATERIAL_EMBALAGEM.FL_SEMIACABMATEEMBA,
  	   VI_PRODUCAO.ID_PROCLINH,
	   VI_PRODUCAO.NM_PROCLINH,
       SUM(CAST(VI_PRODUCAO.QN_QTDECAIXREGIPROD AS FLOAT)) QN_QTDECAIXREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOPADRREGIPROD AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOVENDREGIPROD AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOLIQUREGIPROD AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) QN_DESVPESOREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PRODEMBAREGIPROD AS FLOAT)) QN_PRODEMBAREGIPROD,
       SUM(COALESCE(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0)) QN_PESOORIGENTRAVEVIVA,
       SUM(COALESCE(VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA, 0)) QN_PESOMORTENTRAVEVIVA,
       SUM(COALESCE(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0)) QN_PESOABATENTRAVEVIVA,         
       CASE WHEN SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) = 0 OR SUM(CAST(VI_PRODUCAO.QN_PESOLIQUREGIPROD AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) / CAST(SUM(CAST(VI_PRODUCAO.QN_PESOLIQUREGIPROD AS FLOAT)) AS FLOAT) * 100, 2) 
	    END PC_DESVPESOREGIPROD,
       CASE WHEN COALESCE(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0) = 0 OR CAST(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VI_PRODUCAO.QN_PESOVENDREGIPROD AS FLOAT)) / CAST(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT) * 100, 2) 
	    END PC_PESOVEND_PESOORIG,
       CASE WHEN COALESCE(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0) = 0 OR CAST(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VI_PRODUCAO.QN_PESOVENDREGIPROD AS FLOAT)) / CAST(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT) * 100, 2) 
	    END PC_PESOVEND_PESOABAT,
       CASE WHEN COALESCE(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0) = 0 OR CAST(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) / CAST(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT)) * 100, 2) 
	    END PC_PESOLIQU_PESOORIG,
	   CASE WHEN COALESCE(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0) = 0 OR CAST(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) / CAST(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA AS FLOAT)) * 100, 2) 
	    END PC_PESOLIQU_PESOABAT,
       VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA QN_PESOABATMORTENTRAVEVIVA,
       VI_PRODUCAO.NM_LINHPROD,
       MATERIAL_EMBALAGEM.IE_MATEEMBA 
  FROM DATA_PADRAO_REGISTRO WITH (NOLOCK)
            JOIN (SELECT VW_PRODUCAO.EMPRESA,
                         VW_PRODUCAO.FILIAL,
                         VW_PRODUCAO.DT_PADRREGIPROD,
                         VW_PRODUCAO.ID_PRODMATEEMBA,
                         AVE_TIPO.ID_TIPOAVE,
                         AVE_TIPO.NM_TIPOAVE,
						 LINHA_PROCESSAMENTO.ID_PROCLINH,
						 LINHA_PROCESSAMENTO.NM_PROCLINH,
						 PRODUTOS_LINHA.NM_LINHPROD,
                         /* <TAG_INICIAL_TURNO_VALOR> */ SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX(' ', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) /* <TAG_FINAL_TURNO_VALOR> */ NR_SEQUTURN,
                         SUM(CASE WHEN COALESCE(VW_PRODUCAO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
						          WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                                  ELSE CASE VW_PRODUCAO.QN_CAIXREGIPROD WHEN 0 THEN 1
                                            ELSE VW_PRODUCAO.QN_CAIXREGIPROD 
									    END 
							  END) QN_QTDECAIXREGIPROD,
                         SUM(CAST(COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
                         SUM(CAST(CASE COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                                                                     ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
																							     END
                                       ELSE VW_PRODUCAO.QN_PESOPADRREGIPROD 
                                   END AS FLOAT)) QN_PESOVENDREGIPROD,
                         SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
											END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
                         SUM(CAST(CASE COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN 0
                                       ELSE COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                          ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
													  END, 0) - COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) 
								   END AS FLOAT)) QN_DESVPESOREGIPROD,
                         SUM(CAST(COALESCE(QN_PRODEMBAREGIPROD, 0) AS FLOAT)) QN_PRODEMBAREGIPROD
				    FROM VW_PRODUCAO WITH (NOLOCK)
                  /* <TAG_INICIAL_TURNO> */ 
						      JOIN VW_PRODUCAO_REGISTRO_TURNO WITH (NOLOCK) 
							    ON VW_PRODUCAO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
                  /* <TAG_FINAL_TURNO> */
						      JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
							    ON VW_PRODUCAO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
                  JOIN AVE_TIPO WITH (NOLOCK)
                  ON MATERIAL_EMBALAGEM.ID_TIPOAVE = AVE_TIPO.ID_TIPOAVE
                         LEFT JOIN PRODUTOS_LINHA WITH (NOLOCK)                  
                                ON AVE_TIPO.ID_LINHPROD = PRODUTOS_LINHA.ID_LINHPROD                                  
                         LEFT JOIN PRODUCAO_PACKER WITH (NOLOCK) 
                                ON PRODUCAO_PACKER.ID_PACKPROD = VW_PRODUCAO.ID_PACKPROD
                         LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
                                ON ((PRODUCAO_PACKER.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH)
                                     AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'EM') IN ('EM', 'MI')					 
                                     AND COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'N')),
 								   SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK)
						      JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
							    ON EFL.EMPRESA = SPF.EMPRESA 
                               AND EFL.FILIAL = SPF.FILIAL
				   WHERE VW_PRODUCAO.ID_PRODMATEEMBA  <> '9999'
					 AND COALESCE(VW_PRODUCAO.FL_ORIGREGIPROD, 'NM') IN ('NM', 'RS')
					 AND VW_PRODUCAO.FL_STATREGIPROD NOT IN ('ER') 
					 AND COALESCE(VW_PRODUCAO.FL_PRODPROPREGIPROD, 'S')  = 'S'
					           /* <TAG_WHERE_VW_PRODUCAO> */
			       GROUP BY VW_PRODUCAO.EMPRESA,
						    VW_PRODUCAO.FILIAL,
						    VW_PRODUCAO.DT_PADRREGIPROD,
						    VW_PRODUCAO.ID_PRODMATEEMBA,
                AVE_TIPO.ID_TIPOAVE,
                AVE_TIPO.NM_TIPOAVE,                
     					    LINHA_PROCESSAMENTO.ID_PROCLINH,
						    LINHA_PROCESSAMENTO.NM_PROCLINH,
                            PRODUTOS_LINHA.NM_LINHPROD
                /* <TAG_INICIAL_TURNO> */
                        ,VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD
                /* <TAG_FINAL_TURNO> */) VI_PRODUCAO
              ON DATA_PADRAO_REGISTRO.EMPRESA = VI_PRODUCAO.EMPRESA
             AND DATA_PADRAO_REGISTRO.FILIAL = VI_PRODUCAO.FILIAL 
             AND DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = VI_PRODUCAO.DT_PADRREGIPROD  
 	   LEFT JOIN (SELECT DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
                         /* <TAG_INICIAL_TURNO_VALOR> */ VW_ENTRADA_AVE_VIVA_TURNO_BASE.NR_SEQUTURNENTRAVEVIVA /* <TAG_FINAL_TURNO_VALOR> */ AS NR_SEQUTURN,
                         SUM(CAST(COALESCE(VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_PESOORIGTURNENTRAVEVIVA, 0) AS FLOAT)) QN_PESOORIGENTRAVEVIVA,
                         ROUND(SUM(CAST(VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_MORTTURNENTRAVEVIVA * (CASE WHEN CAST(CASE COALESCE(VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CONTFINATURNENTRAVEVIVA, 0) WHEN 0 THEN VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CABETURNENTRAVEVIVA
																														ELSE (VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CONTFINATURNENTRAVEVIVA - VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CONTINICTURNENTRAVEVIVA + VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_MORTTURNENTRAVEVIVA) END AS FLOAT) = 0 THEN 0
																										ELSE (VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_PESOBRUTTURNENTRAVEVIVA - VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_PESOPENDTURNENTRAVEVIVA) / 
																											CAST(CASE COALESCE(VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CONTFINATURNENTRAVEVIVA, 0) WHEN 0 THEN VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CABETURNENTRAVEVIVA
																														ELSE (VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CONTFINATURNENTRAVEVIVA - VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_CONTINICTURNENTRAVEVIVA + VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_MORTTURNENTRAVEVIVA) END AS FLOAT) END) AS FLOAT)), 2) QN_PESOMORTENTRAVEVIVA,
                         SUM(CAST(COALESCE(VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_PESOBRUTTURNENTRAVEVIVA, 0) - COALESCE(VW_ENTRADA_AVE_VIVA_TURNO_BASE.QN_PESOPENDTURNENTRAVEVIVA, 0) AS FLOAT)) QN_PESOABATENTRAVEVIVA
                    FROM DATA_PADRAO_REGISTRO WITH (NOLOCK)
						      JOIN VW_ENTRADA_AVE_VIVA_TURNO_BASE WITH (NOLOCK) 
							    ON DATA_PADRAO_REGISTRO.ID_REGIDATAPADR = VW_ENTRADA_AVE_VIVA_TURNO_BASE.ID_REGIDATAPADR
                   WHERE VW_ENTRADA_AVE_VIVA_TURNO_BASE.FL_STATENTRAVEVIVA  <> 'EX'
                   GROUP BY DATA_PADRAO_REGISTRO.DT_REGIDATAPADR
                            /* <TAG_INICIAL_TURNO> */,
                            VW_ENTRADA_AVE_VIVA_TURNO_BASE.NR_SEQUTURNENTRAVEVIVA
                            /* <TAG_FINAL_TURNO> */) VW_ENTRAVEVIVA 
			  ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = VW_ENTRAVEVIVA.DT_REGIDATAPADR 
			 AND VI_PRODUCAO.NR_SEQUTURN = VW_ENTRAVEVIVA.NR_SEQUTURN
		    JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
			  ON VI_PRODUCAO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
		    JOIN MATERIAL WITH (NOLOCK) 
			  ON MATERIAL_EMBALAGEM.ID_MATERIAL = MATERIAL.ID_MATERIAL
		    JOIN MATERIAL_TIPO WITH (NOLOCK) 
			  ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
		    JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
		    JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
       LEFT JOIN AVE_TIPO WITH (NOLOCK)                                                                                        
              ON MATERIAL.ID_TIPOAVE = AVE_TIPO.ID_TIPOAVE    
       LEFT JOIN PRODUTOS_LINHA WITH (NOLOCK)                  
              ON AVE_TIPO.ID_LINHPROD = PRODUTOS_LINHA.ID_LINHPROD           		    
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
			  ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
          VI_PRODUCAO.NR_SEQUTURN,          
          VI_PRODUCAO.ID_PRODMATEEMBA,
          VI_PRODUCAO.ID_TIPOAVE,
          VI_PRODUCAO.NM_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
          MATERIAL_EMBALAGEM.FL_SEMIACABMATEEMBA,
   	      VI_PRODUCAO.ID_PROCLINH,
          VI_PRODUCAO.NM_PROCLINH,
          VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA,
          VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA,
          VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA,
          VI_PRODUCAO.NM_LINHPROD,
          MATERIAL_EMBALAGEM.IE_MATEEMBA
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRO125_PRODREGI_CONSOLIDADO' AND TYPE = 'V')
    DROP VIEW VW_PRO125_PRODREGI_CONSOLIDADO
//
CREATE OR ALTER VIEW VW_PRO125_PRODREGI_CONSOLIDADO AS
SELECT VW_PRO125_PRODREGI.EMPRESA,
       VW_PRO125_PRODREGI.FILIAL,
       VW_PRO125_PRODREGI.ID_REGIDATAPADR,
       VW_PRO125_PRODREGI.ID_TIPOAVE,
       VW_PRO125_PRODREGI.ID_TIPOMATE,
       VW_PRO125_PRODREGI.NM_TIPOMATE,
       VW_PRO125_PRODREGI.ID_CATEMATE,
       VW_PRO125_PRODREGI.NM_CATEMATE,
       VW_PRO125_PRODREGI.ID_SUBCMATE,
       VW_PRO125_PRODREGI.NM_SUBCMATE,
       VW_PRO125_PRODREGI.ID_FAMIPROD,
       VW_PRO125_PRODREGI.NM_FAMIPROD,
       VW_PRO125_PRODREGI.ID_PRODMATEEMBA,
       VW_PRO125_PRODREGI.NM_PRODMATEEMBA,
       VW_PRO125_PRODREGI.FL_SEPAPRODMATEEMBAFILI,
       VW_PRO125_PRODREGI.FL_SEMIACABMATEEMBA,
  	   VW_PRO125_PRODREGI.ID_PROCLINH,
	   VW_PRO125_PRODREGI.NM_PROCLINH,
       SUM(VW_PRO125_PRODREGI.QN_QTDECAIXREGIPROD) QN_QTDECAIXREGIPROD,
       SUM(VW_PRO125_PRODREGI.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
       SUM(VW_PRO125_PRODREGI.QN_PESOVENDREGIPROD) QN_PESOVENDREGIPROD,
       SUM(VW_PRO125_PRODREGI.QN_PESOLIQUREGIPROD) QN_PESOLIQUREGIPROD,
       SUM(VW_PRO125_PRODREGI.QN_DESVPESOREGIPROD) QN_DESVPESOREGIPROD,
       SUM(VW_PRO125_PRODREGI.QN_PRODEMBAREGIPROD) QN_PRODEMBAREGIPROD,
       CASE WHEN SUM(CAST(VW_PRO125_PRODREGI.QN_DESVPESOREGIPROD AS FLOAT)) = 0 OR SUM(CAST(VW_PRO125_PRODREGI.QN_PESOLIQUREGIPROD AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VW_PRO125_PRODREGI.QN_DESVPESOREGIPROD AS FLOAT)) / CAST(SUM(CAST(VW_PRO125_PRODREGI.QN_PESOLIQUREGIPROD AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD,
       CASE WHEN SUM(COALESCE(VW_PRO125_PRODREGI.QN_PESOORIGENTRAVEVIVA, 0)) = 0 OR SUM(CAST(VW_PRO125_PRODREGI.QN_PESOORIGENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VW_PRO125_PRODREGI.QN_PESOVENDREGIPROD AS FLOAT)) / SUM(CAST(VW_PRO125_PRODREGI.QN_PESOORIGENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT)) * 100, 2) 
        END PC_PESOVEND_PESOORIG,
       CASE WHEN SUM(COALESCE(VW_PRO125_PRODREGI.QN_PESOABATENTRAVEVIVA, 0)) = 0 OR SUM(CAST(VW_PRO125_PRODREGI.QN_PESOABATENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VW_PRO125_PRODREGI.QN_PESOVENDREGIPROD AS FLOAT)) / SUM(CAST(VW_PRO125_PRODREGI.QN_PESOABATENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT)) * 100, 2) 
        END PC_PESOVEND_PESOABAT,
       CASE WHEN SUM(COALESCE(VW_PRO125_PRODREGI.QN_PESOORIGENTRAVEVIVA, 0)) = 0 OR SUM(CAST(VW_PRO125_PRODREGI.QN_PESOORIGENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT)) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(VW_PRO125_PRODREGI.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) / SUM(CAST(VW_PRO125_PRODREGI.QN_PESOORIGENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT))) * 100, 2)
        END PC_PESOLIQU_PESOORIG,
       CASE WHEN SUM(COALESCE(VW_PRO125_PRODREGI.QN_PESOABATENTRAVEVIVA, 0)) = 0 OR SUM(CAST(VW_PRO125_PRODREGI.QN_PESOABATENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT)) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(VW_PRO125_PRODREGI.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) / SUM(CAST(VW_PRO125_PRODREGI.QN_PESOABATENTRAVEVIVA - VW_PRO125_PRODREGI.QN_PESOMORTENTRAVEVIVA AS FLOAT))) * 100, 2) 
        END PC_PESOLIQU_PESOABAT,
       SUM(VW_PRO125_PRODREGI.QN_PESOABATMORTENTRAVEVIVA) QN_PESOABATMORTENTRAVEVIVA,
	     VW_PRO125_PRODREGI.NM_LINHPROD
  FROM VW_PRO125_PRODREGI WITH (NOLOCK)
 GROUP BY VW_PRO125_PRODREGI.EMPRESA,
          VW_PRO125_PRODREGI.FILIAL,
          VW_PRO125_PRODREGI.ID_REGIDATAPADR,
          VW_PRO125_PRODREGI.ID_TIPOAVE,
          VW_PRO125_PRODREGI.ID_TIPOMATE,
          VW_PRO125_PRODREGI.NM_TIPOMATE,
          VW_PRO125_PRODREGI.ID_CATEMATE,
          VW_PRO125_PRODREGI.NM_CATEMATE,
          VW_PRO125_PRODREGI.ID_SUBCMATE,
          VW_PRO125_PRODREGI.NM_SUBCMATE,
          VW_PRO125_PRODREGI.ID_FAMIPROD,
          VW_PRO125_PRODREGI.NM_FAMIPROD,
          VW_PRO125_PRODREGI.ID_PRODMATEEMBA,
          VW_PRO125_PRODREGI.NM_PRODMATEEMBA,
          VW_PRO125_PRODREGI.FL_SEPAPRODMATEEMBAFILI,
          VW_PRO125_PRODREGI.FL_SEMIACABMATEEMBA,
  	      VW_PRO125_PRODREGI.ID_PROCLINH,
	        VW_PRO125_PRODREGI.NM_PROCLINH,
	        VW_PRO125_PRODREGI.NM_LINHPROD
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO125_DESTREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO125_DESTREPR
//
CREATE OR ALTER VIEW VW_PRO125_DESTREPR AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
       MATERIAL_EMBALAGEM.FL_SEMIACABMATEEMBA,
	   LINHA_PROCESSAMENTO.ID_PROCLINH,
	   LINHA_PROCESSAMENTO.NM_PROCLINH,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE PRODUCAO_REGISTRO.QN_CAIXREGIPROD WHEN 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
				      END 
			END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                                                                                     ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
																					 END
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
			     END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                          ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
						  END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) WHEN 0 THEN COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                                                                                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
																							  END, 0)
                     ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD 
			     END AS FLOAT)) QN_PESOORIGREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PRODEMBAREGIPROD, 0) AS FLOAT)) QN_PRODEMBAREGIPROD,
       PRODUTOS_LINHA.NM_LINHPROD 
  FROM PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK)
            JOIN PRODUCAO_REGISTRO WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
            JOIN VW_PRODUCAO_DESTINACAO_TURNO 
			  ON PRODUCAO_REGISTRO_DEST_ITEM.ID_ITEMDESTREGIPROD = VW_PRODUCAO_DESTINACAO_TURNO.ID_ITEMDESTREGIPROD
            JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
            JOIN MATERIAL WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO WITH (NOLOCK) 
			  ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
       LEFT JOIN AVE_TIPO WITH (NOLOCK)                                                                                        
              ON MATERIAL.ID_TIPOAVE = AVE_TIPO.ID_TIPOAVE    
       LEFT JOIN PRODUTOS_LINHA WITH (NOLOCK)                  
              ON AVE_TIPO.ID_LINHPROD = PRODUTOS_LINHA.ID_LINHPROD          
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
			  ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
       LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
	          ON ((PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH)
                   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'EM') IN ('EM', 'MI')
                   AND COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'N')),
                 SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) 
            JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
			  ON EFL.EMPRESA = SPF.EMPRESA 
             AND EFL.FILIAL = SPF.FILIAL       
 WHERE PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP'
   AND PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' )
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
          MATERIAL_EMBALAGEM.FL_SEMIACABMATEEMBA,
          LINHA_PROCESSAMENTO.ID_PROCLINH,
          LINHA_PROCESSAMENTO.NM_PROCLINH,
          PRODUTOS_LINHA.NM_LINHPROD
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO125_DESTREPR_DIA' AND TYPE = 'V')
    DROP VIEW VW_PRO125_DESTREPR_DIA
//
CREATE OR ALTER VIEW VW_PRO125_DESTREPR_DIA AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
       MATERIAL_EMBALAGEM.FL_SEMIACABMATEEMBA,
	     LINHA_PROCESSAMENTO.ID_PROCLINH,
	     LINHA_PROCESSAMENTO.NM_PROCLINH,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE PRODUCAO_REGISTRO.QN_CAIXREGIPROD WHEN 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
				      END 
			END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                                                                                     ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
																					 END
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
			     END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                          ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
						  END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) WHEN 0 THEN COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                                                                                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
																							  END, 0)
                     ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD 
			     END AS FLOAT)) QN_PESOORIGREGIPROD,
	     SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PRODEMBAREGIPROD, 0) AS FLOAT)) QN_PRODEMBAREGIPROD,
	     PRODUTOS_LINHA.NM_LINHPROD
  FROM PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK)
            JOIN PRODUCAO_REGISTRO WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
            JOIN VW_PRODUCAO_DESTINACAO_TURNO 
			  ON PRODUCAO_REGISTRO_DEST_ITEM.ID_ITEMDESTREGIPROD = VW_PRODUCAO_DESTINACAO_TURNO.ID_ITEMDESTREGIPROD
            JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
            JOIN MATERIAL WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO WITH (NOLOCK) 
			  ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
       LEFT JOIN AVE_TIPO WITH (NOLOCK)                                                                                        
              ON MATERIAL.ID_TIPOAVE = AVE_TIPO.ID_TIPOAVE    
       LEFT JOIN PRODUTOS_LINHA WITH (NOLOCK)                  
              ON AVE_TIPO.ID_LINHPROD = PRODUTOS_LINHA.ID_LINHPROD         
            JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
			  ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
       LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
	          ON ((PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH)
                   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'EM') IN ('EM', 'MI')
                   AND COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'N')),
                 SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) 
            JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
			  ON EFL.EMPRESA = SPF.EMPRESA 
             AND EFL.FILIAL = SPF.FILIAL
 WHERE PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP'
   AND PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' )
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
          MATERIAL_EMBALAGEM.FL_SEMIACABMATEEMBA,
 	        LINHA_PROCESSAMENTO.ID_PROCLINH,
	        LINHA_PROCESSAMENTO.NM_PROCLINH,
	        PRODUTOS_LINHA.NM_LINHPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO125_PRODDESC' AND TYPE = 'V')
    DROP VIEW VW_PRO125_PRODDESC
//
CREATE OR ALTER VIEW VW_PRO125_PRODDESC AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,  
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,        
       AVE_PARTE.NM_PARTAVE,          
       PRODUCAO_DESCARTE.ID_PARTAVE,
       PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD AS NR_SEQUTURN,
       SUM(CAST(COALESCE(PRODUCAO_DESCARTE.QN_UNIDDESCPROD, 0) AS FLOAT)) QN_UNIDDESCPROD,
       SUM(CAST(COALESCE(PRODUCAO_DESCARTE.QN_PESODESCPROD, 0) AS FLOAT)) QN_PESODESCPROD,
	   PRODUCAO_DESCARTE.ID_TIPOAVE,
	   PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
	   PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
	   LINHA_PROCESSAMENTO.ID_PROCLINH,
	   LINHA_PROCESSAMENTO.NM_PROCLINH,
	   PRODUTOS_LINHA.NM_LINHPROD 
  FROM PRODUCAO_DESCARTE WITH (NOLOCK)
            JOIN DATA_PADRAO_REGISTRO WITH (NOLOCK) 
			  ON PRODUCAO_DESCARTE.EMPRESA = DATA_PADRAO_REGISTRO.EMPRESA 
			 AND PRODUCAO_DESCARTE.FILIAL = DATA_PADRAO_REGISTRO.FILIAL 
			 AND PRODUCAO_DESCARTE.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR
            JOIN AVE_PARTE WITH (NOLOCK) 
	          ON PRODUCAO_DESCARTE.ID_PARTAVE = AVE_PARTE.ID_PARTAVE
            JOIN PRODUCAO_DESCARTE_MOTIVO WITH (NOLOCK)
	          ON PRODUCAO_DESCARTE.ID_MOTIDESCPROD = PRODUCAO_DESCARTE_MOTIVO.ID_MOTIDESCPROD
	   LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK)
	          ON ((PRODUCAO_DESCARTE.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH)
                   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'EM') IN ('EM', 'MI')
                   AND COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'N'))         
       LEFT JOIN AVE_TIPO WITH (NOLOCK)
              ON PRODUCAO_DESCARTE.ID_TIPOAVE  = AVE_TIPO.ID_TIPOAVE
       LEFT JOIN PRODUTOS_LINHA WITH (NOLOCK)   
              ON AVE_TIPO.ID_LINHPROD = PRODUTOS_LINHA.ID_LINHPROD                                                   
    WHERE PRODUCAO_DESCARTE_MOTIVO.FL_TIPOMOTIDESCPROD = 'DS'
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,  
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,            
          AVE_PARTE.NM_PARTAVE,            
          PRODUCAO_DESCARTE.ID_PARTAVE,            
          PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD,
          PRODUCAO_DESCARTE.ID_TIPOAVE,           
          PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
          PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
	      LINHA_PROCESSAMENTO.ID_PROCLINH,
	      LINHA_PROCESSAMENTO.NM_PROCLINH,
          PRODUTOS_LINHA.NM_LINHPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO125_PRODREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO125_PRODREPR
//
CREATE OR ALTER VIEW VW_PRO125_PRODREPR AS	
SELECT DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX(' ', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   LINHA_PROCESSAMENTO.ID_PROCLINH,
	   LINHA_PROCESSAMENTO.NM_PROCLINH,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE PRODUCAO_REGISTRO.QN_CAIXREGIPROD WHEN 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
				      END 
			END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                                                                                     ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
																					 END
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
				 END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
	                          ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
						  END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN 0
                     ELSE COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
					                    ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
									END, 0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) 
				 END AS FLOAT)) QN_DESVPESOREGIPROD,
       CASE SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) WHEN 0 THEN 0
            ELSE ROUND(SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
			                                  ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
										  END, 0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) / CAST(SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) AS FLOAT) * 100, 2) 
		END PC_DESVPESOREGIPROD,
   	   SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PRODEMBAREGIPROD, 0) AS FLOAT)) QN_PRODEMBAREGIPROD,
       CASE COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) WHEN 0 THEN 0
            ELSE ROUND((SUM(CAST(CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
			                                                                                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
																									  END
                                      ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD END AS FLOAT)) / CAST(COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) AS FLOAT)) * 100, 2) 
								  END PC_PESOVEND,
       CASE COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0) WHEN 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
			                                   ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
										   END, 0) AS FLOAT)) / CAST(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR AS FLOAT)) * 100, 2) 
	    END PC_PESOLIQU,
       COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0) QN_PESOLIQUDESTREPR,
       COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) QN_PESOVENDDESTREPR,
       PRODUTOS_LINHA.NM_LINHPROD 
  FROM DATA_PADRAO_REGISTRO WITH (NOLOCK)
            JOIN PRODUCAO_REGISTRO WITH (NOLOCK) 
			  ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = PRODUCAO_REGISTRO.DT_PADRREGIPROD
            JOIN VW_PRODUCAO_REGISTRO_TURNO WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
            JOIN MATERIAL WITH (NOLOCK)
			  ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
			  ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA

            JOIN MATERIAL_TIPO WITH (NOLOCK) 
			  ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
			  ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
       LEFT JOIN AVE_TIPO WITH (NOLOCK)
              ON MATERIAL_EMBALAGEM.ID_TIPOAVE = AVE_TIPO.ID_TIPOAVE
       LEFT JOIN PRODUTOS_LINHA WITH (NOLOCK)   
              ON AVE_TIPO.ID_LINHPROD = PRODUTOS_LINHA.ID_LINHPROD             
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
			  ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
            JOIN VW_PRODUCAO_REPROCESSO WITH (NOLOCK) 
			  ON DATA_PADRAO_REGISTRO.ID_REGIDATAPADR  = VW_PRODUCAO_REPROCESSO.ID_REGIDATAPADR 
       LEFT JOIN PRODUCAO_PACKER WITH (NOLOCK) 
              ON PRODUCAO_PACKER.ID_PACKPROD = PRODUCAO_REGISTRO.ID_PACKPROD
       LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
              ON ((PRODUCAO_PACKER.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH)
                   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'EM') IN ('EM', 'MI')					 
                   AND COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'N')),
 	  	         SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK)
 	        JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
		      ON EFL.EMPRESA = SPF.EMPRESA 
             AND EFL.FILIAL = SPF.FILIAL
 WHERE COALESCE(PRODUCAO_REGISTRO.FL_ORIGREGIPROD, 'NM') = 'RP'
   AND PRODUCAO_REGISTRO.FL_STATREGIPROD  NOT IN ('ER')
   AND MATERIAL_EMBALAGEM.ID_PRODMATEEMBA  <> '9999'
 GROUP BY DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      LINHA_PROCESSAMENTO.ID_PROCLINH,
	      LINHA_PROCESSAMENTO.NM_PROCLINH,
          COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0),
          COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0),
          QN_PESOLIQUDESTREPR,
          QN_PESOVENDDESTREPR,
          PRODUTOS_LINHA.NM_LINHPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO125_PRODREPR_CONSOLIDADO' AND TYPE = 'V')
    DROP VIEW VW_PRO125_PRODREPR_CONSOLIDADO
//
CREATE OR ALTER VIEW VW_PRO125_PRODREPR_CONSOLIDADO AS	
SELECT VW_PRO125_PRODREPR.ID_REGIDATAPADR,
       VW_PRO125_PRODREPR.ID_TIPOAVE,
       VW_PRO125_PRODREPR.ID_TIPOMATE,
       VW_PRO125_PRODREPR.NM_TIPOMATE,
       VW_PRO125_PRODREPR.ID_CATEMATE,
       VW_PRO125_PRODREPR.NM_CATEMATE,
       VW_PRO125_PRODREPR.ID_SUBCMATE,
       VW_PRO125_PRODREPR.NM_SUBCMATE,
       VW_PRO125_PRODREPR.ID_FAMIPROD,
       VW_PRO125_PRODREPR.NM_FAMIPROD,
       VW_PRO125_PRODREPR.ID_PRODMATEEMBA,
       VW_PRO125_PRODREPR.NM_PRODMATEEMBA,
	   VW_PRO125_PRODREPR.ID_PROCLINH,
	   VW_PRO125_PRODREPR.NM_PROCLINH,
       SUM(VW_PRO125_PRODREPR.QN_QTDECAIXREGIPROD) QN_QTDECAIXREGIPROD,
       SUM(VW_PRO125_PRODREPR.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
       SUM(VW_PRO125_PRODREPR.QN_PESOVENDREGIPROD) QN_PESOVENDREGIPROD,
       SUM(VW_PRO125_PRODREPR.QN_PESOLIQUREGIPROD) QN_PESOLIQUREGIPROD,
       SUM(VW_PRO125_PRODREPR.QN_DESVPESOREGIPROD) QN_DESVPESOREGIPROD,
       CASE SUM(CAST(COALESCE(VW_PRO125_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) WHEN 0 THEN 0
            ELSE ROUND(SUM(CAST(COALESCE(VW_PRO125_PRODREPR.QN_PESOLIQUREGIPROD, 0) - COALESCE(VW_PRO125_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) / CAST(SUM(CAST(COALESCE(VW_PRO125_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD,
       SUM(VW_PRO125_PRODREPR.QN_PRODEMBAREGIPROD) QN_PRODEMBAREGIPROD,
       CASE COALESCE(VW_PRO125_PRODREPR.QN_PESOVENDDESTREPR, 0) WHEN 0 THEN 0
            ELSE ROUND((SUM(CAST(CASE COALESCE(VW_PRO125_PRODREPR.QN_PESOPADRREGIPROD, 0) WHEN 0 THEN VW_PRO125_PRODREPR.QN_PESOLIQUREGIPROD
                                      ELSE VW_PRO125_PRODREPR.QN_PESOPADRREGIPROD 
								  END AS FLOAT)) / CAST(COALESCE(VW_PRO125_PRODREPR.QN_PESOVENDDESTREPR, 0) AS FLOAT)) * 100, 2) 
        END PC_PESOVEND,
       CASE COALESCE(VW_PRO125_PRODREPR.QN_PESOLIQUDESTREPR, 0) WHEN 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(VW_PRO125_PRODREPR.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) / CAST(VW_PRO125_PRODREPR.QN_PESOLIQUDESTREPR AS FLOAT)) * 100, 2) 
	     	END PC_PESOLIQU,
       VW_PRO125_PRODREPR.QN_PESOLIQUDESTREPR,
       VW_PRO125_PRODREPR.QN_PESOVENDDESTREPR,
	     VW_PRO125_PRODREPR.NM_LINHPROD
  FROM VW_PRO125_PRODREPR WITH (NOLOCK)
 GROUP BY VW_PRO125_PRODREPR.ID_REGIDATAPADR,
          VW_PRO125_PRODREPR.ID_TIPOAVE,
          VW_PRO125_PRODREPR.ID_TIPOMATE,
          VW_PRO125_PRODREPR.NM_TIPOMATE,
          VW_PRO125_PRODREPR.ID_CATEMATE,
          VW_PRO125_PRODREPR.NM_CATEMATE,
          VW_PRO125_PRODREPR.ID_SUBCMATE,
          VW_PRO125_PRODREPR.NM_SUBCMATE,
          VW_PRO125_PRODREPR.ID_FAMIPROD,
          VW_PRO125_PRODREPR.NM_FAMIPROD,
          VW_PRO125_PRODREPR.ID_PRODMATEEMBA,
          VW_PRO125_PRODREPR.NM_PRODMATEEMBA,
  	      VW_PRO125_PRODREPR.ID_PROCLINH,
	        VW_PRO125_PRODREPR.NM_PROCLINH,
          VW_PRO125_PRODREPR.QN_PESOLIQUDESTREPR,
          VW_PRO125_PRODREPR.QN_PESOVENDDESTREPR,
	        VW_PRO125_PRODREPR.NM_LINHPROD 
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREGI' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREGI
//
CREATE OR ALTER VIEW VW_PRO128_PRODREGI AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       VI_PRODUCAO.NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       VI_PRODUCAO.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
       VI_PRODUCAO.ID_PROCLINH,
	   VI_PRODUCAO.FL_SOBRREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_QTDECAIXREGIPROD AS FLOAT)) QN_QTDECAIXREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOPADRREGIPROD AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOVENDREGIPROD AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOLIQUREGIPROD AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) / CAST(SUM(CAST(VI_PRODUCAO.QN_PESOLIQUREGIPROD AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD
  FROM DATA_PADRAO_REGISTRO WITH (NOLOCK)
            JOIN (SELECT VW_PRODUCAO.EMPRESA,
                         VW_PRODUCAO.FILIAL,
                         VW_PRODUCAO.DT_PADRREGIPROD,
                         VW_PRODUCAO.ID_PRODMATEEMBA,
                         LINHA_PROCESSAMENTO.ID_PROCLINH,
						 VW_PRODUCAO.FL_SOBRREGIPROD,
                         SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('?', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) NR_SEQUTURN,
                         SUM(CASE WHEN COALESCE(VW_PRODUCAO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				                  WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                                  ELSE CASE WHEN VW_PRODUCAO.QN_CAIXREGIPROD = 0 THEN 1
                                            ELSE VW_PRODUCAO.QN_CAIXREGIPROD 
                                        END 
                              END) QN_QTDECAIXREGIPROD,
                         SUM(CAST(COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
                         SUM(CAST(CASE WHEN COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) = 0
                                       THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                 ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
                                             END
                                       ELSE VW_PRODUCAO.QN_PESOPADRREGIPROD 
                                   END AS FLOAT)) QN_PESOVENDREGIPROD,
                         SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
                                            END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
                         SUM(CAST(CASE WHEN COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) = 0 THEN 0
                                       ELSE COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                          ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
                                                      END, 0) - COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) 
                                   END AS FLOAT)) QN_DESVPESOREGIPROD
                    FROM VW_PRODUCAO WITH (NOLOCK)
                              JOIN VW_PRODUCAO_REGISTRO_TURNO WITH (NOLOCK) 
                                ON VW_PRODUCAO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
                              JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
                                ON MATERIAL_EMBALAGEM.ID_PRODMATEEMBA = VW_PRODUCAO.ID_PRODMATEEMBA
                              JOIN PRODUCAO_PACKER WITH (NOLOCK) 
                                ON PRODUCAO_PACKER.ID_PACKPROD = VW_PRODUCAO.ID_PACKPROD
                              JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
                                ON PRODUCAO_PACKER.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                                   SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) 
                              JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
                                ON EFL.EMPRESA = SPF.EMPRESA 
                               AND EFL.FILIAL = SPF.FILIAL
							   
                   WHERE (VW_PRODUCAO.ID_PRODMATEEMBA  <> '9999')
                     AND (COALESCE(VW_PRODUCAO.FL_ORIGREGIPROD, 'PC')  IN ('PC', 'RS'))
                     AND (VW_PRODUCAO.FL_STATREGIPROD NOT IN ('ER'))
                     AND (COALESCE(VW_PRODUCAO.FL_PRODPROPREGIPROD, 'S')  = 'S')
                     AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
		                  (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
				           COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
					 
                   GROUP BY VW_PRODUCAO.EMPRESA,
                            VW_PRODUCAO.FILIAL,
                            VW_PRODUCAO.DT_PADRREGIPROD,
                            VW_PRODUCAO.ID_PRODMATEEMBA,
                            LINHA_PROCESSAMENTO.ID_PROCLINH,
                            VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD,
							VW_PRODUCAO.FL_SOBRREGIPROD) VI_PRODUCAO
              ON DATA_PADRAO_REGISTRO.EMPRESA = VI_PRODUCAO.EMPRESA 
             AND DATA_PADRAO_REGISTRO.FILIAL = VI_PRODUCAO.FILIAL 
             AND DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VI_PRODUCAO.DT_PADRREGIPROD
            JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
              ON VI_PRODUCAO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL WITH (NOLOCK) 
              ON MATERIAL_EMBALAGEM.ID_MATERIAL  = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_TIPO WITH (NOLOCK) 
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          VI_PRODUCAO.NR_SEQUTURN,          
          VI_PRODUCAO.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
          VI_PRODUCAO.ID_PROCLINH,
		  VI_PRODUCAO.FL_SOBRREGIPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREGI_CONSOLIDADO' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREGI_CONSOLIDADO
//
CREATE OR ALTER VIEW VW_PRO128_PRODREGI_CONSOLIDADO AS
SELECT VW_PRO128_PRODREGI.EMPRESA,
       VW_PRO128_PRODREGI.FILIAL,
       VW_PRO128_PRODREGI.ID_REGIDATAPADR,
       VW_PRO128_PRODREGI.ID_TIPOAVE,
       VW_PRO128_PRODREGI.ID_TIPOMATE,
       VW_PRO128_PRODREGI.NM_TIPOMATE,
       VW_PRO128_PRODREGI.ID_CATEMATE,
       VW_PRO128_PRODREGI.NM_CATEMATE,
       VW_PRO128_PRODREGI.ID_SUBCMATE,
       VW_PRO128_PRODREGI.NM_SUBCMATE,
       VW_PRO128_PRODREGI.ID_FAMIPROD,
       VW_PRO128_PRODREGI.NM_FAMIPROD,
       VW_PRO128_PRODREGI.ID_PRODMATEEMBA,
       VW_PRO128_PRODREGI.NM_PRODMATEEMBA,
	   VW_PRO128_PRODREGI.IE_MATEEMBA,
       VW_PRO128_PRODREGI.FL_SEPAPRODMATEEMBAFILI,				
       VW_PRO128_PRODREGI.ID_PROCLINH,
	   VW_PRO128_PRODREGI.FL_SOBRREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_QTDECAIXREGIPROD) QN_QTDECAIXREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_PESOVENDREGIPROD) QN_PESOVENDREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_PESOLIQUREGIPROD) QN_PESOLIQUREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_DESVPESOREGIPROD) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(VW_PRO128_PRODREGI.QN_DESVPESOREGIPROD AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VW_PRO128_PRODREGI.QN_DESVPESOREGIPROD AS FLOAT)) / CAST(SUM(CAST(VW_PRO128_PRODREGI.QN_PESOLIQUREGIPROD AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD
  FROM VW_PRO128_PRODREGI WITH (NOLOCK)
 GROUP BY VW_PRO128_PRODREGI.EMPRESA,
          VW_PRO128_PRODREGI.FILIAL,
          VW_PRO128_PRODREGI.ID_REGIDATAPADR,
          VW_PRO128_PRODREGI.ID_TIPOAVE,
          VW_PRO128_PRODREGI.ID_TIPOMATE,
          VW_PRO128_PRODREGI.NM_TIPOMATE,
          VW_PRO128_PRODREGI.ID_CATEMATE,
          VW_PRO128_PRODREGI.NM_CATEMATE,
          VW_PRO128_PRODREGI.ID_SUBCMATE,
          VW_PRO128_PRODREGI.NM_SUBCMATE,
          VW_PRO128_PRODREGI.ID_FAMIPROD,
          VW_PRO128_PRODREGI.NM_FAMIPROD,
          VW_PRO128_PRODREGI.ID_PRODMATEEMBA,
          VW_PRO128_PRODREGI.NM_PRODMATEEMBA,
	      VW_PRO128_PRODREGI.IE_MATEEMBA,
          VW_PRO128_PRODREGI.FL_SEPAPRODMATEEMBAFILI,				
          VW_PRO128_PRODREGI.ID_PROCLINH,
		  VW_PRO128_PRODREGI.FL_SOBRREGIPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_DESTREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO128_DESTREPR
//
CREATE OR ALTER VIEW VW_PRO128_DESTREPR AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD AS NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
       LINHA_PROCESSAMENTO.ID_PROCLINH,
	   PRODUCAO_REGISTRO.FL_SOBRREGIPROD,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE WHEN PRODUCAO_REGISTRO.QN_CAIXREGIPROD = 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
                      END 
            END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                           ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                       END
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                 END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                          END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) = 0 THEN COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                                    ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                                END, 0)
                     ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD 
                 END AS FLOAT)) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK)
            JOIN PRODUCAO_REGISTRO WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
            JOIN VW_PRODUCAO_DESTINACAO_TURNO 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_ITEMDESTREGIPROD = VW_PRODUCAO_DESTINACAO_TURNO.ID_ITEMDESTREGIPROD
            JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
            JOIN MATERIAL WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO WITH (NOLOCK) 
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
       LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                 SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) 
            JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
              ON EFL.EMPRESA = SPF.EMPRESA 
             AND EFL.FILIAL = SPF.FILIAL
			 
 WHERE (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' ))
   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
        (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
		 COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
   
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				          
          LINHA_PROCESSAMENTO.ID_PROCLINH,
		  PRODUCAO_REGISTRO.FL_SOBRREGIPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_DESTREPR_DIA' AND TYPE = 'V')
    DROP VIEW VW_PRO128_DESTREPR_DIA
//
CREATE OR ALTER VIEW VW_PRO128_DESTREPR_DIA AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD AS NR_SEQUTURN,
       PRODUCAO_REGISTRO.DT_PADRREGIPROD,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
       LINHA_PROCESSAMENTO.ID_PROCLINH,
	   PRODUCAO_REGISTRO.FL_SOBRREGIPROD,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE WHEN PRODUCAO_REGISTRO.QN_CAIXREGIPROD = 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
                      END 
            END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                           ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                       END
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                 END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                          END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) = 0 THEN COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                                    ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                                END, 0)
                     ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD 
                 END AS FLOAT)) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK)
            JOIN PRODUCAO_REGISTRO WITH (NOLOCK)
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
            JOIN VW_PRODUCAO_DESTINACAO_TURNO 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_ITEMDESTREGIPROD = VW_PRODUCAO_DESTINACAO_TURNO.ID_ITEMDESTREGIPROD
            JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
            JOIN MATERIAL WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO WITH (NOLOCK) 
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
       LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                 SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) 
            JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
              ON EFL.EMPRESA = SPF.EMPRESA 
             AND EFL.FILIAL = SPF.FILIAL
			 
 WHERE (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ('ER'))
   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
        (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
		 COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
   
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD,
          PRODUCAO_REGISTRO.DT_PADRREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
          LINHA_PROCESSAMENTO.ID_PROCLINH,
		  PRODUCAO_REGISTRO.FL_SOBRREGIPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODDESC' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODDESC
//
CREATE OR ALTER VIEW VW_PRO128_PRODDESC AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,  
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR, 
       PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD AS NR_SEQUTURN,
       AVE_PARTE.NM_PARTAVE,          
       PRODUCAO_DESCARTE.ID_PARTAVE,
       SUM(CAST(COALESCE(PRODUCAO_DESCARTE.QN_UNIDDESCPROD, 0) AS FLOAT)) QN_UNIDDESCPROD,
       SUM(CAST(COALESCE(PRODUCAO_DESCARTE.QN_PESODESCPROD, 0) AS FLOAT)) QN_PESODESCPROD,
       PRODUCAO_DESCARTE.ID_TIPOAVE,
       PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
       PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
	   LINHA_PROCESSAMENTO.ID_PROCLINH,
	   LINHA_PROCESSAMENTO.NM_PROCLINH
  FROM PRODUCAO_DESCARTE WITH (NOLOCK)
            JOIN DATA_PADRAO_REGISTRO WITH (NOLOCK) 
              ON PRODUCAO_DESCARTE.EMPRESA = DATA_PADRAO_REGISTRO.EMPRESA 
             AND PRODUCAO_DESCARTE.FILIAL = DATA_PADRAO_REGISTRO.FILIAL 
             AND PRODUCAO_DESCARTE.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR
 	        JOIN AVE_PARTE AVE_PARTE WITH (NOLOCK) 
              ON PRODUCAO_DESCARTE.ID_PARTAVE = AVE_PARTE.ID_PARTAVE
            JOIN PRODUCAO_DESCARTE_MOTIVO
              ON PRODUCAO_DESCARTE.ID_MOTIDESCPROD = PRODUCAO_DESCARTE_MOTIVO.ID_MOTIDESCPROD
 	   LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK)
	          ON PRODUCAO_DESCARTE.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH
 WHERE PRODUCAO_DESCARTE_MOTIVO.FL_TIPOMOTIDESCPROD = 'DS'
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,  
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR, 
          PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD,
          AVE_PARTE.NM_PARTAVE,            
          PRODUCAO_DESCARTE.ID_PARTAVE,            
          PRODUCAO_DESCARTE.ID_TIPOAVE,           
          PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
          PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
	      LINHA_PROCESSAMENTO.ID_PROCLINH,
	      LINHA_PROCESSAMENTO.NM_PROCLINH
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREPR
//
CREATE OR ALTER VIEW VW_PRO128_PRODREPR AS
SELECT DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('º', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       LINHA_PROCESSAMENTO.ID_PROCLINH,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE WHEN PRODUCAO_REGISTRO.QN_CAIXREGIPROD = 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
                      END 
            END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                           ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                       END
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                 END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                          END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN 0
                     ELSE COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                        ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                    END, 0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) 
                 END AS FLOAT)) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                          END, 0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) / CAST(SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD,
       CASE WHEN COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                                            ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                                        END
                                      ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                                  END AS FLOAT)) / CAST(COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) AS FLOAT)) * 100, 2) 
        END PC_PESOVEND,
       CASE WHEN COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                               ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                           END, 0) AS FLOAT)) / CAST(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR AS FLOAT)) * 100, 2) 
        END PC_PESOLIQU,
       COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0) QN_PESOLIQUDESTREPR,
       COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) QN_PESOVENDDESTREPR
  FROM DATA_PADRAO_REGISTRO WITH (NOLOCK)
            JOIN PRODUCAO_REGISTRO WITH (NOLOCK) 
              ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = PRODUCAO_REGISTRO.DT_PADRREGIPROD
            JOIN VW_PRODUCAO_REGISTRO_TURNO WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
            JOIN MATERIAL WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO WITH (NOLOCK) 
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) 
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA WITH (NOLOCK) 
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
            JOIN VW_PRODUCAO_REPROCESSO WITH (NOLOCK) 
              ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = VW_PRODUCAO_REPROCESSO.DT_REGIDATAPADR
       LEFT JOIN PRODUCAO_PACKER WITH (NOLOCK) 
              ON PRODUCAO_REGISTRO.ID_PACKPROD = PRODUCAO_PACKER.ID_PACKPROD
       LEFT JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
              ON PRODUCAO_PACKER.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                 SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) 
            JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) 
              ON EFL.EMPRESA = SPF.EMPRESA
             AND EFL.FILIAL = SPF.FILIAL
			 
 WHERE (COALESCE(PRODUCAO_REGISTRO.FL_ORIGREGIPROD, 'RP') = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' ))
   AND (MATERIAL_EMBALAGEM.ID_PRODMATEEMBA <> '9999')
   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
        (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
		 COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
   
 GROUP BY DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD,  
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0),
          COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0),
          QN_PESOLIQUDESTREPR,
          QN_PESOVENDDESTREPR,
          LINHA_PROCESSAMENTO.ID_PROCLINH
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREPR_CONSOLIDADO' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREPR_CONSOLIDADO
//
CREATE OR ALTER VIEW VW_PRO128_PRODREPR_CONSOLIDADO AS
SELECT VW_PRO128_PRODREPR.ID_REGIDATAPADR,
       VW_PRO128_PRODREPR.ID_TIPOAVE,
       VW_PRO128_PRODREPR.ID_TIPOMATE,
       VW_PRO128_PRODREPR.NM_TIPOMATE,
       VW_PRO128_PRODREPR.ID_CATEMATE,
       VW_PRO128_PRODREPR.NM_CATEMATE,
       VW_PRO128_PRODREPR.ID_SUBCMATE,
       VW_PRO128_PRODREPR.NM_SUBCMATE,
       VW_PRO128_PRODREPR.ID_FAMIPROD,
       VW_PRO128_PRODREPR.NM_FAMIPROD,
       VW_PRO128_PRODREPR.ID_PRODMATEEMBA,
       VW_PRO128_PRODREPR.NM_PRODMATEEMBA,
	   VW_PRO128_PRODREPR.IE_MATEEMBA,
       VW_PRO128_PRODREPR.ID_PROCLINH,
       SUM(VW_PRO128_PRODREPR.QN_QTDECAIXREGIPROD) QN_QTDECAIXREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_PESOVENDREGIPROD) QN_PESOVENDREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD) QN_PESOLIQUREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_DESVPESOREGIPROD) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD, 0) - COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) / CAST(SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD,
       CASE WHEN COALESCE(VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(CASE WHEN COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) = 0 THEN VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD
                                      ELSE VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD 
                                  END AS FLOAT)) / CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR, 0) AS FLOAT)) * 100, 2) 
        END PC_PESOVEND,
       CASE WHEN COALESCE(VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) / CAST(VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR AS FLOAT)) * 100, 2) 
        END PC_PESOLIQU,
       VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR,
       VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR
  FROM VW_PRO128_PRODREPR WITH (NOLOCK)
 GROUP BY VW_PRO128_PRODREPR.ID_REGIDATAPADR,
          VW_PRO128_PRODREPR.ID_TIPOAVE,
          VW_PRO128_PRODREPR.ID_TIPOMATE,
          VW_PRO128_PRODREPR.NM_TIPOMATE,
          VW_PRO128_PRODREPR.ID_CATEMATE,
          VW_PRO128_PRODREPR.NM_CATEMATE,
          VW_PRO128_PRODREPR.ID_SUBCMATE,
          VW_PRO128_PRODREPR.NM_SUBCMATE,
          VW_PRO128_PRODREPR.ID_FAMIPROD,
          VW_PRO128_PRODREPR.NM_FAMIPROD,
          VW_PRO128_PRODREPR.ID_PRODMATEEMBA,
          VW_PRO128_PRODREPR.NM_PRODMATEEMBA,
	      VW_PRO128_PRODREPR.IE_MATEEMBA,
          VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR,
          VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR,
          VW_PRO128_PRODREPR.ID_PROCLINH
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO151_DESTREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO151_DESTREPR
//
CREATE OR ALTER VIEW VW_PRO151_DESTREPR AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       ABATE_UNIDADE_ESTRUTURA.ID_UNIDABAT,
       VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD AS NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,          
       MATERIAL.ID_TIPOMATE,          
       MATERIAL_TIPO.NM_TIPOMATE,          
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,          
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,          
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,          
       COUNT(MATERIAL_EMBALAGEM.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,          
       SUM(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)) QN_PESOPADRREGIPROD,          
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN VI_PESOLIQU.QN_PESOLIQU
                ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD END) QN_PESOVENDREGIPROD,  
       SUM(COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0)) QN_PESOLIQUREGIPROD,          
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) = 0 THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0)
                ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD END) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DESTINACAO
       JOIN PRODUCAO_REGISTRO_DEST_ITEM ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
       JOIN VW_PRODUCAO_DESTINACAO_TURNO ON PRODUCAO_REGISTRO_DEST_ITEM.ID_ITEMDESTREGIPROD = VW_PRODUCAO_DESTINACAO_TURNO.ID_ITEMDESTREGIPROD
       JOIN PRODUCAO_REGISTRO ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
       JOIN ABATE_UNIDADE_ESTRUTURA ON PRODUCAO_REGISTRO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
       JOIN MATERIAL_EMBALAGEM ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
       JOIN MATERIAL ON MATERIAL_EMBALAGEM.ID_MATERIAL = MATERIAL.ID_MATERIAL
       JOIN MATERIAL_TIPO ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
       JOIN (SELECT PRI.ID_REGIPROD,
                    CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) 
                         ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
               FROM PRODUCAO_REGISTRO PRI 
                    JOIN SISTEMA_PARAMETRO_FILIAL SPF ON PRI.EMPRESA = SPF.EMPRESA AND 
                                                         PRI.FILIAL = SPF.FILIAL) VI_PESOLIQU ON VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
 WHERE PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP'
   AND PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN('ER')
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          ABATE_UNIDADE_ESTRUTURA.ID_UNIDABAT,
          VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,          
          MATERIAL.ID_TIPOMATE,          
          MATERIAL_TIPO.NM_TIPOMATE,          
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,          
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,          
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,          
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO151_PRODREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO151_PRODREPR
//
CREATE OR ALTER VIEW VW_PRO151_PRODREPR AS	
SELECT DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       ABATE_UNIDADE_ESTRUTURA.ID_UNIDABAT,
       SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('º', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) AS NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,           
       MATERIAL.ID_TIPOMATE,           
       MATERIAL_TIPO.NM_TIPOMATE,           
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,           
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,           
       COUNT(MATERIAL_EMBALAGEM.ID_PRODMATEEMBA) QN_QTDECAIXREGIPROD,
       SUM(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)) QN_PESOPADRREGIPROD,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN VI_PESOLIQU.QN_PESOLIQU
                ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD END) QN_PESOVENDREGIPROD,
       SUM(COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0)) QN_PESOLIQUREGIPROD,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN 0
                ELSE COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) END) QN_DESVPESOREGIPROD,    
       CASE WHEN SUM(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)) = 0 THEN 0
            ELSE ROUND(CASE WHEN SUM(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)) = 0 THEN 0
                            ELSE SUM(COALESCE(VI_PESOLIQU.QN_PESOLIQU,0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,0)) /
                                 SUM(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)) END * 100, 2) END PC_DESVPESOREGIPROD,           
       CASE WHEN COALESCE(VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOVENDDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((CASE WHEN COALESCE(VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOVENDDESTREPR, 0) = 0 THEN 0
                             ELSE SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN VI_PESOLIQU.QN_PESOLIQU
                                           ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD END) / COALESCE(VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOVENDDESTREPR, 0) END) * 100, 2) END PC_PESOVEND,
       CASE WHEN COALESCE(VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOLIQUDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((CASE WHEN VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOLIQUDESTREPR = 0 THEN 0
                             ELSE SUM(COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0)) / VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOLIQUDESTREPR END) * 100, 2) END PC_PESOLIQU,           
       COALESCE(VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOLIQUDESTREPR, 0) QN_PESOLIQUDESTREPR,           
       COALESCE(VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOVENDDESTREPR, 0) QN_PESOVENDDESTREPR      
  FROM DATA_PADRAO_REGISTRO           
       JOIN PRODUCAO_REGISTRO ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = PRODUCAO_REGISTRO.DT_PADRREGIPROD AND
                                 COALESCE(PRODUCAO_REGISTRO.FL_ORIGREGIPROD, 'NM') = 'RP' AND
                                 PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN('ER', 'CO')
       JOIN VW_PRODUCAO_REGISTRO_TURNO ON PRODUCAO_REGISTRO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
       JOIN VW_PRODUCAO_REPROCESSO_TURNO ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = VW_PRODUCAO_REPROCESSO_TURNO.DT_REGIDATAPADR AND
                                            SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('º', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) = VW_PRODUCAO_REPROCESSO_TURNO.NR_SEQUTURN
       JOIN ABATE_UNIDADE_ESTRUTURA ON PRODUCAO_REGISTRO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
       JOIN MATERIAL_EMBALAGEM ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA AND
                                  MATERIAL_EMBALAGEM.ID_PRODMATEEMBA <> '9999' 
       JOIN MATERIAL ON MATERIAL_EMBALAGEM.ID_MATERIAL = MATERIAL.ID_MATERIAL
       JOIN MATERIAL_TIPO ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
       JOIN (SELECT PRI.ID_REGIPROD,
                    CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) 
                         ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
               FROM PRODUCAO_REGISTRO PRI 
                    JOIN SISTEMA_PARAMETRO_FILIAL SPF ON PRI.EMPRESA = SPF.EMPRESA AND 
                                                         PRI.FILIAL = SPF.FILIAL) VI_PESOLIQU ON VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
 GROUP BY DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          ABATE_UNIDADE_ESTRUTURA.ID_UNIDABAT,
          VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
          VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOVENDDESTREPR,
          VW_PRODUCAO_REPROCESSO_TURNO.QN_PESOLIQUDESTREPR
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO152_PRODREGI' AND type = 'V')
    DROP VIEW VW_PRO152_PRODREGI
//
CREATE OR ALTER VIEW VW_PRO152_PRODREGI AS
 SELECT DATA_PADRAO_REGISTRO.EMPRESA,
        DATA_PADRAO_REGISTRO.FILIAL,
        DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
        MATERIAL_EMBALAGEM.ID_TIPOAVE,
        MATERIAL.ID_TIPOMATE,
        MATERIAL_TIPO.NM_TIPOMATE,
		MATERIAL.ID_GRUPMATE,
		MATERIAL_GRUPO.NM_GRUPMATE,
        MATERIAL.ID_CATEMATE,
        MATERIAL_CATEGORIA.NM_CATEMATE,
        MATERIAL.ID_SUBCMATE,
        MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
		MATERIAL_EMBALAGEM.ID_FAMIPROD,
		PRODUTO_FAMILIA.NM_FAMIPROD,
        VI_PRODUCAO.ID_PRODMATEEMBA,
		MATERIAL_EMBALAGEM.IE_MATEEMBA,
        MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
		MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_QTDECAIXREGIPROD)) QN_QTDECAIXREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOPADRREGIPROD)) QN_PESOPADRREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) QN_PESOVENDREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOLIQUREGIPROD)) QN_PESOLIQUREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD)) QN_DESVPESOREGIPROD,
		SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PRODEMBAREGIPROD)) QN_PRODEMBAREGIPROD,
        CASE SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD))
        WHEN 0 THEN 0
        ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD)) / CONVERT(FLOAT, SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOLIQUREGIPROD))) * 100, 2)
        END PC_DESVPESOREGIPROD,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2)
        END PC_PESOVEND_PESOORIG,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2)
        END PC_PESOVEND_PESOABAT,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND((SUM(CONVERT(FLOAT, ISNULL(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0))) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA))) * 100, 2)
        END PC_PESOLIQU_PESOORIG,
        CASE ISNULL(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0)
        WHEN 0 THEN 0
        ELSE ROUND((SUM(CONVERT(FLOAT, ISNULL(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0))) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA))) * 100, 2)
        END PC_PESOLIQU_PESOABAT
   FROM DATA_PADRAO_REGISTRO WITH (NOLOCK)
 LEFT JOIN (SELECT DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
                SUM(CONVERT(FLOAT, ISNULL(ENTRADA_AVE_VIVA.QN_PESOORIGENTRAVEVIVA, 0))) QN_PESOORIGENTRAVEVIVA,
                ROUND(SUM(CONVERT(FLOAT, ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA * ((ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_PESOPENDENTRAVEVIVA) / CONVERT(FLOAT,
                CASE ISNULL(ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA, 0)
                WHEN 0 THEN ENTRADA_AVE_VIVA.QN_CABEENTRAVEVIVA
                ELSE (ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_CONTINICENTRAVEVIVA + ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA)
                END)))), 2) QN_PESOMORTENTRAVEVIVA,
                SUM(CONVERT(FLOAT, ISNULL(ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA, 0) - ISNULL(ENTRADA_AVE_VIVA.QN_PESOPENDENTRAVEVIVA, 0))) QN_PESOABATENTRAVEVIVA
           FROM DATA_PADRAO_REGISTRO WITH (NOLOCK),
                ENTRADA_AVE_VIVA WITH (NOLOCK)
          WHERE	(DATA_PADRAO_REGISTRO.ID_REGIDATAPADR  = ENTRADA_AVE_VIVA.ID_REGIDATAPADR)
          AND	(ENTRADA_AVE_VIVA.FL_STATENTRAVEVIVA = 'FE')
          GROUP BY  DATA_PADRAO_REGISTRO.DT_REGIDATAPADR) VW_ENTRAVEVIVA ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VW_ENTRAVEVIVA.DT_REGIDATAPADR, 
        MATERIAL WITH (NOLOCK),
        MATERIAL_EMBALAGEM WITH (NOLOCK),
        MATERIAL_TIPO WITH (NOLOCK),
        MATERIAL_CATEGORIA WITH (NOLOCK),
        MATERIAL_SUBCATEGORIA WITH (NOLOCK),
		PRODUTO_FAMILIA WITH (NOLOCK),
		MATERIAL_GRUPO WITH (NOLOCK),

(SELECT VW_PRODUCAO.EMPRESA,
                VW_PRODUCAO.FILIAL,
                VW_PRODUCAO.DT_PADRREGIPROD,
                VW_PRODUCAO.ID_PRODMATEEMBA,
                SUM(CASE ISNULL(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') 
                      WHEN 'S' THEN 1
                      ELSE CASE VW_PRODUCAO.QN_CAIXREGIPROD
                             WHEN 0 THEN 1
                             ELSE VW_PRODUCAO.QN_CAIXREGIPROD
						   END
                    END) QN_QTDECAIXREGIPROD,
                SUM(CONVERT(FLOAT, ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
                SUM(CONVERT(FLOAT, CASE ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                ELSE VW_PRODUCAO.QN_PESOPADRREGIPROD
                END)) QN_PESOVENDREGIPROD,
                SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
                SUM(CONVERT(FLOAT, CASE ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                WHEN 0 THEN 0
                ELSE ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0) - ISNULL(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                END)) QN_DESVPESOREGIPROD,
				SUM(CONVERT(FLOAT, ISNULL(QN_PRODEMBAREGIPROD, 0))) QN_PRODEMBAREGIPROD
           FROM VW_PRODUCAO WITH (NOLOCK),
               (SELECT PRI.ID_REGIPROD,
                  CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
                       FROM VW_PRODUCAO PRI WITH (NOLOCK), SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) INNER JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) ON EFL.EMPRESA = SPF.EMPRESA AND EFL.FILIAL = SPF.FILIAL) VI_PESOLIQU,             
                MATERIAL_EMBALAGEM WITH (NOLOCK)
          WHERE	VW_PRODUCAO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
		    AND (VW_PRODUCAO.ID_PRODMATEEMBA  <> '9999')
            AND	ISNULL(VW_PRODUCAO.FL_ORIGREGIPROD, 'NM')  IN ( 'NM'  , 'RS'  )
            AND	VW_PRODUCAO.FL_STATREGIPROD NOT IN ( 'ER' ) 
            AND	ISNULL(VW_PRODUCAO.FL_PRODPROPREGIPROD, 'S')  = 'S'
            AND (VI_PESOLIQU.ID_REGIPROD = VW_PRODUCAO.ID_REGIPROD)
          GROUP BY VW_PRODUCAO.EMPRESA,
                   VW_PRODUCAO.FILIAL,
                   VW_PRODUCAO.DT_PADRREGIPROD,
                   VW_PRODUCAO.ID_PRODMATEEMBA ) VI_PRODUCAO       

WHERE (DATA_PADRAO_REGISTRO.EMPRESA  = VI_PRODUCAO.EMPRESA)
  AND	(DATA_PADRAO_REGISTRO.FILIAL  = VI_PRODUCAO.FILIAL)
  AND	(DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VI_PRODUCAO.DT_PADRREGIPROD)
  AND	(VI_PRODUCAO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
  AND	(MATERIAL_EMBALAGEM.ID_MATERIAL  = MATERIAL.ID_MATERIAL)
  AND	(MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE)
  AND   (MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE)
  AND   (MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE)
  AND   (MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD)
  AND   (MATERIAL.ID_GRUPMATE = MATERIAL_GRUPO.ID_GRUPMATE)
GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,
      DATA_PADRAO_REGISTRO.FILIAL,
      DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
      VI_PRODUCAO.ID_PRODMATEEMBA,
	  MATERIAL_EMBALAGEM.IE_MATEEMBA,
      MATERIAL_EMBALAGEM.ID_TIPOAVE,
      MATERIAL.ID_TIPOMATE,
      MATERIAL_TIPO.NM_TIPOMATE,
	  MATERIAL.ID_GRUPMATE,
	  MATERIAL_GRUPO.NM_GRUPMATE,
      MATERIAL.ID_CATEMATE,
      MATERIAL_CATEGORIA.NM_CATEMATE,
      MATERIAL.ID_SUBCMATE,
      MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
	  MATERIAL_EMBALAGEM.ID_FAMIPROD,
	  PRODUTO_FAMILIA.NM_FAMIPROD,
      MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	  MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
      VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA,
      VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA,
      VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA

//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO152_DESTREPR' AND type = 'V')
    DROP VIEW VW_PRO152_DESTREPR
//
CREATE OR ALTER VIEW VW_PRO152_DESTREPR AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
        MATERIAL_EMBALAGEM.ID_TIPOAVE,
        MATERIAL.ID_TIPOMATE,
        MATERIAL_TIPO.NM_TIPOMATE,
		MATERIAL.ID_CATEMATE,
		MATERIAL.ID_GRUPMATE,
		MATERIAL_GRUPO.NM_GRUPMATE,
		MATERIAL_CATEGORIA.NM_CATEMATE,
		MATERIAL.ID_SUBCMATE,
		MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
        MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
		MATERIAL_EMBALAGEM.IE_MATEEMBA,
        MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
		MATERIAL_EMBALAGEM.ID_FAMIPROD,
		PRODUTO_FAMILIA.NM_FAMIPROD,
        MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
		MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
        SUM(CASE ISNULL(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') 
              WHEN 'S' THEN 1
              ELSE CASE PRODUCAO_REGISTRO.QN_CAIXREGIPROD
                     WHEN 0 THEN 1
                     ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD
			       END
            END) QN_QTDECAIXREGIPROD,
        SUM(CONVERT(FLOAT, ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
        SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                          WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                          ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                          END)) QN_PESOVENDREGIPROD,
        SUM(CONVERT(FLOAT, ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
        SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0)
                          WHEN 0 THEN ISNULL(VI_PESOLIQU.QN_PESOLIQU, 0)
                          ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD
                          END)) QN_PESOORIGREGIPROD,
		SUM(CONVERT(FLOAT, ISNULL(PRODUCAO_REGISTRO.QN_PRODEMBAREGIPROD, 0))) QN_PRODEMBAREGIPROD
   FROM PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK)
        INNER JOIN PRODUCAO_REGISTRO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
        INNER JOIN (SELECT PRI.ID_REGIPROD,
                    CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU FROM PRODUCAO_REGISTRO PRI WITH (NOLOCK), SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) INNER JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) ON EFL.EMPRESA = SPF.EMPRESA AND EFL.FILIAL = SPF.FILIAL) VI_PESOLIQU ON VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
		INNER JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
		INNER JOIN MATERIAL WITH (NOLOCK) ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
		INNER JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
		INNER JOIN MATERIAL_TIPO WITH (NOLOCK) ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
		INNER JOIN MATERIAL_CATEGORIA WITH (NOLOCK) ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
		INNER JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
		INNER JOIN PRODUTO_FAMILIA WITH (NOLOCK) ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
		INNER JOIN MATERIAL_GRUPO WITH (NOLOCK) ON MATERIAL_GRUPO.ID_GRUPMATE = MATERIAL.ID_GRUPMATE
	    LEFT OUTER JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH
  WHERE (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP')
    AND	(PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' ))
    AND (ISNULL(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'EM') IN ('EM', 'MI'))	
  GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
		  MATERIAL.ID_CATEMATE,
		  MATERIAL.ID_GRUPMATE,
		  MATERIAL_GRUPO.NM_GRUPMATE,
		  MATERIAL_CATEGORIA.NM_CATEMATE,
		  MATERIAL.ID_SUBCMATE,
		  MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
		  MATERIAL_EMBALAGEM.IE_MATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
		  MATERIAL_EMBALAGEM.ID_FAMIPROD,
		  PRODUTO_FAMILIA.NM_FAMIPROD,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI		  
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO152_PRODDESC' AND type = 'V')
    DROP VIEW VW_PRO152_PRODDESC
//
CREATE OR ALTER VIEW VW_PRO152_PRODDESC AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,  
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,        
       AVE_PARTE.NM_PARTAVE,          
       PRODUCAO_DESCARTE.ID_PARTAVE,
       SUM(CONVERT(FLOAT, COALESCE(PRODUCAO_DESCARTE.QN_UNIDDESCPROD, 0))) QN_UNIDDESCPROD,
       SUM(CONVERT(FLOAT, COALESCE(PRODUCAO_DESCARTE.QN_PESODESCPROD, 0))) QN_PESODESCPROD,
	   PRODUCAO_DESCARTE.ID_TIPOAVE,
	   PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
	   PRODUCAO_DESCARTE_MOTIVO.ID_MOTIDESCPROD,
       PRODUCAO_DESCARTE_MOTIVO.NM_MOTIDESCPROD,
       PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD	   
  FROM PRODUCAO_DESCARTE WITH (NOLOCK)
            JOIN PRODUCAO_DESCARTE_MOTIVO WITH (NOLOCK) 
	          ON PRODUCAO_DESCARTE_MOTIVO.ID_MOTIDESCPROD = PRODUCAO_DESCARTE.ID_MOTIDESCPROD
            JOIN DATA_PADRAO_REGISTRO WITH (NOLOCK)
			  ON PRODUCAO_DESCARTE.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR
			 AND PRODUCAO_DESCARTE.EMPRESA = DATA_PADRAO_REGISTRO.EMPRESA
			 AND PRODUCAO_DESCARTE.FILIAL = DATA_PADRAO_REGISTRO.FILIAL
	        JOIN AVE_PARTE WITH (NOLOCK)
			  ON PRODUCAO_DESCARTE.ID_PARTAVE = AVE_PARTE.ID_PARTAVE
 WHERE PRODUCAO_DESCARTE_MOTIVO.FL_TIPOMOTIDESCPROD = 'DS'
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,  
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,            
          AVE_PARTE.NM_PARTAVE,            
          PRODUCAO_DESCARTE.ID_PARTAVE,            
          PRODUCAO_DESCARTE.ID_TIPOAVE,           
          PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
          PRODUCAO_DESCARTE_MOTIVO.ID_MOTIDESCPROD,
          PRODUCAO_DESCARTE_MOTIVO.NM_MOTIDESCPROD,
          PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO152_PRODREGI_PROC' AND type = 'V')
    DROP VIEW VW_PRO152_PRODREGI_PROC
//
CREATE OR ALTER VIEW VW_PRO152_PRODREGI_PROC AS
 SELECT DATA_PADRAO_REGISTRO.EMPRESA,
        DATA_PADRAO_REGISTRO.FILIAL,
        DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
        MATERIAL_EMBALAGEM.ID_TIPOAVE,
        MATERIAL.ID_TIPOMATE,
        MATERIAL_TIPO.NM_TIPOMATE,
        MATERIAL.ID_CATEMATE,
        MATERIAL_CATEGORIA.NM_CATEMATE,
        MATERIAL.ID_SUBCMATE,
        MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
		MATERIAL_EMBALAGEM.ID_FAMIPROD,
		PRODUTO_FAMILIA.NM_FAMIPROD,
        VI_PRODUCAO.ID_PRODMATEEMBA,
		VI_PRODUCAO.IE_MATEEMBA,
        MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
		MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
        VI_PRODUCAO.ID_PROCLINH,
		VI_PRODUCAO.NM_PROCLINH,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_QTDECAIXREGIPROD)) QN_QTDECAIXREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOPADRREGIPROD)) QN_PESOPADRREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) QN_PESOVENDREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOLIQUREGIPROD)) QN_PESOLIQUREGIPROD,
        SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD)) QN_DESVPESOREGIPROD,
        CASE SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD))
            WHEN 0 THEN 0
            ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_DESVPESOREGIPROD)) / CONVERT(FLOAT, SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOLIQUREGIPROD))) * 100, 2)
        END PC_DESVPESOREGIPROD,
        CASE COALESCE(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0)
            WHEN 0 THEN 0
            ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2)
        END PC_PESOVEND_PESOORIG,
        CASE COALESCE(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0)
            WHEN 0 THEN 0
            ELSE ROUND(SUM(CONVERT(FLOAT, VI_PRODUCAO.QN_PESOVENDREGIPROD)) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA)) * 100, 2)
        END PC_PESOVEND_PESOABAT,
        CASE COALESCE(VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA, 0)
            WHEN 0 THEN 0
            ELSE ROUND((SUM(CONVERT(FLOAT, COALESCE(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0))) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA))) * 100, 2)
        END PC_PESOLIQU_PESOORIG,
        CASE COALESCE(VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA, 0)
            WHEN 0 THEN 0
            ELSE ROUND((SUM(CONVERT(FLOAT, COALESCE(VI_PRODUCAO.QN_PESOLIQUREGIPROD, 0))) / CONVERT(FLOAT, (VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA - VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA))) * 100, 2)
        END PC_PESOLIQU_PESOABAT
   FROM DATA_PADRAO_REGISTRO WITH (NOLOCK)
 LEFT JOIN (SELECT DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
                SUM(CONVERT(FLOAT, COALESCE(ENTRADA_AVE_VIVA.QN_PESOORIGENTRAVEVIVA, 0))) QN_PESOORIGENTRAVEVIVA,
                ROUND(SUM(CONVERT(FLOAT, ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA * ((ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_PESOPENDENTRAVEVIVA) / CONVERT(FLOAT,
                CASE COALESCE(ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA, 0)
                    WHEN 0 THEN ENTRADA_AVE_VIVA.QN_CABEENTRAVEVIVA
                    ELSE (ENTRADA_AVE_VIVA.QN_CONTFINAENTRAVEVIVA - ENTRADA_AVE_VIVA.QN_CONTINICENTRAVEVIVA + ENTRADA_AVE_VIVA.QN_MORTENTRAVEVIVA)
                END)))), 2) QN_PESOMORTENTRAVEVIVA,
                SUM(CONVERT(FLOAT, COALESCE(ENTRADA_AVE_VIVA.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(ENTRADA_AVE_VIVA.QN_PESOPENDENTRAVEVIVA, 0))) QN_PESOABATENTRAVEVIVA
           FROM DATA_PADRAO_REGISTRO WITH (NOLOCK),
                ENTRADA_AVE_VIVA WITH (NOLOCK)
          WHERE	(DATA_PADRAO_REGISTRO.ID_REGIDATAPADR  = ENTRADA_AVE_VIVA.ID_REGIDATAPADR)
            AND	(ENTRADA_AVE_VIVA.FL_STATENTRAVEVIVA  = 'FE')
          GROUP BY  DATA_PADRAO_REGISTRO.DT_REGIDATAPADR) VW_ENTRAVEVIVA ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = VW_ENTRAVEVIVA.DT_REGIDATAPADR,
        MATERIAL WITH (NOLOCK),
        MATERIAL_EMBALAGEM WITH (NOLOCK),
        MATERIAL_TIPO WITH (NOLOCK),
        MATERIAL_CATEGORIA WITH (NOLOCK),
        MATERIAL_SUBCATEGORIA WITH (NOLOCK),
		PRODUTO_FAMILIA WITH (NOLOCK),
        (SELECT VW_PRODUCAO.EMPRESA,
                VW_PRODUCAO.FILIAL,
                VW_PRODUCAO.DT_PADRREGIPROD,
                VW_PRODUCAO.ID_PRODMATEEMBA,
				MATERIAL_EMBALAGEM.IE_MATEEMBA,
                LINHA_PROCESSAMENTO.ID_PROCLINH,
				LINHA_PROCESSAMENTO.NM_PROCLINH,
                SUM(CASE COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') 
                      WHEN 'S' THEN 1
                      ELSE CASE VW_PRODUCAO.QN_CAIXREGIPROD
                             WHEN 0 THEN 1
                             ELSE VW_PRODUCAO.QN_CAIXREGIPROD
						   END
                    END) QN_QTDECAIXREGIPROD,
                SUM(CONVERT(FLOAT, COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
                SUM(CONVERT(FLOAT, CASE COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                                       WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                                       ELSE VW_PRODUCAO.QN_PESOPADRREGIPROD
                                   END)) QN_PESOVENDREGIPROD,
                SUM(CONVERT(FLOAT, COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
                SUM(CONVERT(FLOAT, CASE COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                                       WHEN 0 THEN 0
                                       ELSE COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0) - COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0)
                                   END)) QN_DESVPESOREGIPROD
           FROM VW_PRODUCAO WITH (NOLOCK)
           JOIN (SELECT PRI.ID_REGIPROD,
                  CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
                       FROM VW_PRODUCAO PRI WITH (NOLOCK), SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) INNER JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) ON EFL.EMPRESA = SPF.EMPRESA AND EFL.FILIAL = SPF.FILIAL) VI_PESOLIQU ON (VI_PESOLIQU.ID_REGIPROD = VW_PRODUCAO.ID_REGIPROD)             
		   JOIN MATERIAL_EMBALAGEM WITH (NOLOCK)ON MATERIAL_EMBALAGEM.ID_PRODMATEEMBA = VW_PRODUCAO.ID_PRODMATEEMBA
           JOIN PRODUCAO_PACKER WITH (NOLOCK) ON PRODUCAO_PACKER.ID_PACKPROD = VW_PRODUCAO.ID_PACKPROD
           JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) ON PRODUCAO_PACKER.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH
          WHERE	(VW_PRODUCAO.ID_PRODMATEEMBA  <> '9999')
            AND	COALESCE(VW_PRODUCAO.FL_ORIGREGIPROD, 'PC')  IN ('PC', 'RS')
            AND	VW_PRODUCAO.FL_STATREGIPROD NOT IN ('ER') 
            AND	COALESCE(VW_PRODUCAO.FL_PRODPROPREGIPROD, 'S')  = 'S'
            AND COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU')
          GROUP BY VW_PRODUCAO.EMPRESA,
                   VW_PRODUCAO.FILIAL,
                   VW_PRODUCAO.DT_PADRREGIPROD,
                   VW_PRODUCAO.ID_PRODMATEEMBA,
				   MATERIAL_EMBALAGEM.IE_MATEEMBA,
                   LINHA_PROCESSAMENTO.ID_PROCLINH,
				   LINHA_PROCESSAMENTO.NM_PROCLINH) VI_PRODUCAO

  WHERE (DATA_PADRAO_REGISTRO.EMPRESA  = VI_PRODUCAO.EMPRESA)
    AND (DATA_PADRAO_REGISTRO.FILIAL  = VI_PRODUCAO.FILIAL)
    AND (DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VI_PRODUCAO.DT_PADRREGIPROD)
    AND (VI_PRODUCAO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
    AND (MATERIAL_EMBALAGEM.ID_MATERIAL  = MATERIAL.ID_MATERIAL)
    AND (MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE)
    AND (MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE)
    AND (MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE)
	AND (MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD)
           
  GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,
           DATA_PADRAO_REGISTRO.FILIAL,
           DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
           VI_PRODUCAO.ID_PRODMATEEMBA,
		   VI_PRODUCAO.IE_MATEEMBA,
           MATERIAL_EMBALAGEM.ID_TIPOAVE,
           MATERIAL.ID_TIPOMATE,
           MATERIAL_TIPO.NM_TIPOMATE,
           MATERIAL.ID_CATEMATE,
           MATERIAL_CATEGORIA.NM_CATEMATE,
           MATERIAL.ID_SUBCMATE,
           MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
		   MATERIAL_EMBALAGEM.ID_FAMIPROD,
		   PRODUTO_FAMILIA.NM_FAMIPROD,
           MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
		   MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
           VW_ENTRAVEVIVA.QN_PESOORIGENTRAVEVIVA,
           VW_ENTRAVEVIVA.QN_PESOABATENTRAVEVIVA,
           VW_ENTRAVEVIVA.QN_PESOMORTENTRAVEVIVA,
           VI_PRODUCAO.ID_PROCLINH,
		   VI_PRODUCAO.NM_PROCLINH

//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO152_DESTREPR_DIA' AND type = 'V')
    DROP VIEW VW_PRO152_DESTREPR_DIA
//
CREATE OR ALTER VIEW VW_PRO152_DESTREPR_DIA AS
 SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
        PRODUCAO_REGISTRO.DT_PADRREGIPROD,
        MATERIAL_EMBALAGEM.ID_TIPOAVE,
        MATERIAL.ID_TIPOMATE,
        MATERIAL_TIPO.NM_TIPOMATE,
		MATERIAL.ID_CATEMATE,
		MATERIAL_CATEGORIA.NM_CATEMATE,
		MATERIAL.ID_SUBCMATE,
		MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
		MATERIAL_EMBALAGEM.ID_FAMIPROD,
		PRODUTO_FAMILIA.NM_FAMIPROD,
        MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
        MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
        MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
		MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
        LINHA_PROCESSAMENTO.ID_PROCLINH,
        SUM(CASE COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') 
              WHEN 'S' THEN 1
              ELSE CASE PRODUCAO_REGISTRO.QN_CAIXREGIPROD
                     WHEN 0 THEN 1
                     ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD
			       END
            END) QN_QTDECAIXREGIPROD,
        SUM(CONVERT(FLOAT, COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
        SUM(CONVERT(FLOAT, CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                               WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                               ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                           END)) QN_PESOVENDREGIPROD,
        SUM(CONVERT(FLOAT, COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
        SUM(CONVERT(FLOAT, CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0)
                               WHEN 0 THEN COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0)
                               ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD
                           END)) QN_PESOORIGREGIPROD
   FROM PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK)
  INNER JOIN PRODUCAO_REGISTRO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
  INNER JOIN (SELECT PRI.ID_REGIPROD,
              CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
                   FROM PRODUCAO_REGISTRO PRI WITH (NOLOCK), SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) INNER JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) ON EFL.EMPRESA = SPF.EMPRESA AND EFL.FILIAL = SPF.FILIAL) VI_PESOLIQU ON VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
  INNER JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
  INNER JOIN MATERIAL WITH (NOLOCK) ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
  INNER JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
  INNER JOIN MATERIAL_TIPO WITH (NOLOCK) ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
  INNER JOIN MATERIAL_CATEGORIA WITH (NOLOCK) ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
  INNER JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
  INNER JOIN PRODUTO_FAMILIA WITH (NOLOCK) ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
   LEFT OUTER JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH
  WHERE (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP')
    AND	(PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' ))
    AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU'))	
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          PRODUCAO_REGISTRO.DT_PADRREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
		  MATERIAL.ID_CATEMATE,
		  MATERIAL_CATEGORIA.NM_CATEMATE,
		  MATERIAL.ID_SUBCMATE,
		  MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
		  MATERIAL_EMBALAGEM.ID_FAMIPROD,
		  PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
		  MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
          LINHA_PROCESSAMENTO.ID_PROCLINH

//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRO152_DESTREPR_PROC' AND type = 'V')
    DROP VIEW VW_PRO152_DESTREPR_PROC
//
CREATE OR ALTER VIEW VW_PRO152_DESTREPR_PROC AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
	   MATERIAL_EMBALAGEM.ID_FAMIPROD,
	   PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
	   MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
       LINHA_PROCESSAMENTO.ID_PROCLINH,
	   LINHA_PROCESSAMENTO.NM_PROCLINH,
       SUM(CASE COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') 
             WHEN 'S' THEN 1
             ELSE CASE PRODUCAO_REGISTRO.QN_CAIXREGIPROD
                    WHEN 0 THEN 1
                    ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD
		          END
           END) QN_QTDECAIXREGIPROD,
       SUM(CONVERT(FLOAT, COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0))) QN_PESOPADRREGIPROD,
       SUM(CONVERT(FLOAT, CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                              WHEN 0 THEN VI_PESOLIQU.QN_PESOLIQU
                              ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                          END)) QN_PESOVENDREGIPROD,
       SUM(CONVERT(FLOAT, COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0))) QN_PESOLIQUREGIPROD,
       SUM(CONVERT(FLOAT, CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0)
                              WHEN 0 THEN COALESCE(VI_PESOLIQU.QN_PESOLIQU, 0)
                              ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD
                          END)) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK)
 INNER JOIN PRODUCAO_REGISTRO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
 INNER JOIN (SELECT PRI.ID_REGIPROD,
              CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRI.QN_PESOORIGREGIPROD, 0) ELSE COALESCE(PRI.QN_PESOLIQUREGIPROD, 0) END AS QN_PESOLIQU
                   FROM PRODUCAO_REGISTRO PRI WITH (NOLOCK), SISTEMA_PARAMETRO_FILIAL SPF WITH (NOLOCK) INNER JOIN EMPRESA_FILIAL_LOCAL EFL WITH (NOLOCK) ON EFL.EMPRESA = SPF.EMPRESA AND EFL.FILIAL = SPF.FILIAL) VI_PESOLIQU ON VI_PESOLIQU.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
 INNER JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
 INNER JOIN MATERIAL WITH (NOLOCK) ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
 INNER JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
 INNER JOIN MATERIAL_TIPO WITH (NOLOCK) ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
 INNER JOIN MATERIAL_CATEGORIA WITH (NOLOCK) ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
 INNER JOIN MATERIAL_SUBCATEGORIA WITH (NOLOCK) ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
 INNER JOIN PRODUTO_FAMILIA WITH (NOLOCK) ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
  LEFT OUTER JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH
 WHERE (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' ))
   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU'))
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
		  MATERIAL.ID_CATEMATE,
		  MATERIAL_CATEGORIA.NM_CATEMATE,
		  MATERIAL.ID_SUBCMATE,
		  MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
		  MATERIAL_EMBALAGEM.ID_FAMIPROD,
		  PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
		  MATERIAL_EMBALAGEM.IE_MATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
		  MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				          
		  LINHA_PROCESSAMENTO.ID_PROCLINH,
		  LINHA_PROCESSAMENTO.NM_PROCLINH

//
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_PRO298_DEST' AND TYPE = 'V')
    DROP VIEW VW_PRO298_DEST
//    
CREATE OR ALTER VIEW [dbo].[VW_PRO298_DEST]                
 (EMPRESA,
  FILIAL,
  DT_PADRREGIPROD,
  IE_MATEEMBA,
  ID_PRODMATEEMBA,
  NM_PRODMATEEMBA,
  ID_PROCLINH,
  NM_PROCLINH,
  QN_QTDEDEST,
  QN_PESODEST,
  NR_LOTERASTREGIPROD,
  ID_PROD_ORIG,
  GN_CHAVE
 ) AS
SELECT PRODUCAO_REGISTRO.EMPRESA,
       PRODUCAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.DT_REGIDATAPADR AS DT_PADRREGIPROD,
       MATERIAL_EMBALAGEM.IE_MATEEMBA,
       PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
       LINHA_PROCESSAMENTO.ID_PROCLINH,    
       LINHA_PROCESSAMENTO.NM_PROCLINH,              
       CAST(COUNT(PRODUCAO_REGISTRO.ID_IDENREGIPROD) AS FLOAT) AS QN_QTDEDEST,   
       SUM(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD) QN_PESODEST,                
       PRODUCAO_REGISTRO.NR_LOTERASTREGIPROD,
       PRODUCAO_REGISTRO.ID_PRODMATEEMBA ID_PROD_ORIG, 
       CONVERT(CHAR(10), DATA_PADRAO_REGISTRO.DT_REGIDATAPADR, 103) + '-' + CAST(LINHA_PROCESSAMENTO.ID_PROCLINH AS VARCHAR) + '-' + PRODUCAO_REGISTRO.NR_LOTERASTREGIPROD + '-' + CAST(PRODUCAO_REGISTRO.ID_PRODMATEEMBA AS VARCHAR) AS GN_CHAVE
  
  FROM PRODUCAO_REGISTRO WITH (NOLOCK)           
            INNER JOIN PRODUCAO_REGISTRO_DEST_ITEM WITH (NOLOCK) 
                    ON PRODUCAO_REGISTRO.ID_REGIPROD = PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD
            INNER JOIN LINHA_PROCESSAMENTO WITH (NOLOCK) 
                    ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH
            INNER JOIN PRODUCAO_REGISTRO_DESTINACAO WITH (NOLOCK)                                                                                                
                    ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
            INNER JOIN DATA_PADRAO_REGISTRO WITH (NOLOCK) 
                    ON PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR
            INNER JOIN MATERIAL_EMBALAGEM WITH (NOLOCK) 
                    ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
       LEFT OUTER JOIN ABATE_UNIDADE_ESTRUTURA WITH (NOLOCK) 
                    ON PRODUCAO_REGISTRO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
             LEFT JOIN PRODUCAO_LOTE_CORTE WITH (NOLOCK)                                                                           
                    ON PRODUCAO_LOTE_CORTE.ID_CORTLOTEPROD = PRODUCAO_REGISTRO_DEST_ITEM.ID_CORTLOTEPROD
             LEFT JOIN PRODUCAO_PACKER WITH (NOLOCK) 
                    ON PRODUCAO_REGISTRO.ID_PACKPROD = PRODUCAO_PACKER.ID_PACKPROD

 WHERE PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD IN ('RP', 'CO')  

GROUP BY PRODUCAO_REGISTRO.EMPRESA,                                                                      
         PRODUCAO_REGISTRO.FILIAL,
         DATA_PADRAO_REGISTRO.DT_REGIDATAPADR,
         MATERIAL_EMBALAGEM.IE_MATEEMBA,
         PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
         MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
         LINHA_PROCESSAMENTO.ID_PROCLINH,
         LINHA_PROCESSAMENTO.NM_PROCLINH,
         PRODUCAO_REGISTRO.NR_LOTERASTREGIPROD
//         

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PROD_PROG_SIMU_CAMI_DIST' AND TYPE = 'V')
    DROP VIEW VW_PROD_PROG_SIMU_CAMI_DIST
//    
CREATE OR ALTER VIEW VW_PROD_PROG_SIMU_CAMI_DIST AS
SELECT VW_DIST.ID_CAMISIMUPROGPROD,
       VW_DIST.ID_SIMUPROGPROD,
       VW_DIST.NR_ORDEABATCAMISIMUPROGPROD,
       VW_DIST.ID_LOTECRIA,
       VW_DIST.ID_LINHTIPOAVE,
       VW_DIST.FL_SEXOAVECAMISIMUPROGPROD,
       VW_DIST.FL_DESTCAMISIMUPROGPROD,
       VW_DIST.FX_CAMISIMUPROGPROD,
       VW_DIST.PC_UNIFCAMISIMUPROGPROD,
       VW_DIST.DT_PADRCAMISIMUPROGPROD,
       VW_DIST.PC_MORTCAMISIMUPROGPROD,
       VW_DIST.IE_FAZECAMISIMUPROGPROD,
       VW_DIST.IE_LOTECAMISIMUPROGPROD,
       VW_DIST.IE_GALPCAMISIMUPROGPROD,
       VW_DIST.PC_GRADCAMISIMUPROGPROD,
       VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD,       
       VW_DIST.ID_ESTRUNIDABAT,
       VW_DIST.ID_DISTPESOANIM,
       VW_CONS.ID_CONSAVE,
       VW_DIST.QN_CABECAMISIMUPROGPROD,
       VW_DIST.QN_PESOMEDICAMISIMUPROGPROD,
       COALESCE(CASE WHEN VW_DIST.FL_SEXOAVECAMISIMUPROGPROD = 'MA' THEN VW_PESO.PC_MANDINTEMACH
                   WHEN VW_DIST.FL_SEXOAVECAMISIMUPROGPROD = 'FE' THEN VW_PESO.PC_MANDINTEFEME
                   ELSE VW_PESO.PC_MANDINTEMIST
                 END, 1) PC_MANDINTECAMISIMUPROGPROD
  FROM VW_PRODPROG_SIMUCAMIDIST_BASE VW_DIST
       LEFT JOIN (SELECT VW_DIST.ID_CAMISIMUPROGPROD,
                         VW_DIST.QN_PESOMEDICAMISIMUPROGPROD,
                         AVI.ID_CONSAVE,
                         ROW_NUMBER() OVER (PARTITION BY VW_DIST.ID_CAMISIMUPROGPROD,
                                                         VW_DIST.QN_PESOMEDICAMISIMUPROGPROD
                                                ORDER BY ABS(AVI.QN_PESOCONSAVE - VW_DIST.QN_PESOMEDICAMISIMUPROGPROD) ASC,                          
                                                             AVI.QN_PESOCONSAVE - VW_DIST.QN_PESOMEDICAMISIMUPROGPROD DESC) NR_ORDEM
                    FROM VW_PRODPROG_SIMUCAMIDIST_BASE VW_DIST
                         LEFT JOIN AVE_CONSTITUICAO AVI
                                ON AVI.ID_LINHTIPOAVE = VW_DIST.ID_LINHTIPOAVE
                               AND AVI.FL_STATCONSAVE = 'OK') VW_CONS
              ON VW_DIST.ID_CAMISIMUPROGPROD = VW_CONS.ID_CAMISIMUPROGPROD
             AND VW_DIST.QN_PESOMEDICAMISIMUPROGPROD = VW_CONS.QN_PESOMEDICAMISIMUPROGPROD
             AND CASE WHEN VW_CONS.ID_CONSAVE IS NULL THEN 1
                    ELSE VW_CONS.NR_ORDEM 
                  END = 1
       LEFT JOIN (SELECT AC.ID_CONSAVE,
                         ROUND((SUM(CAST(ACI.QN_PESOMACHITEMCONSAVE AS FLOAT)) / CAST(AC.QN_PESOCONSAVE AS FLOAT)), 6) PC_MANDINTEMACH,
                         ROUND((SUM(CAST(ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT)) / CAST(AC.QN_PESOCONSAVE AS FLOAT)), 6) PC_MANDINTEFEME,
                         ROUND((SUM((CAST(ACI.QN_PESOMACHITEMCONSAVE AS FLOAT) + CAST(ACI.QN_PESOFEMEITEMCONSAVE AS FLOAT)) / 2) / CAST(AC.QN_PESOCONSAVE AS FLOAT)), 6) PC_MANDINTEMIST
                    FROM AVE_CONSTITUICAO AC
                              JOIN AVE_CONSTITUICAO_ITEM ACI
                                ON AC.ID_CONSAVE = ACI.ID_CONSAVE
                              JOIN AVE_COMPONENTE AVC
                                ON ACI.ID_COMPAVE = AVC.ID_COMPAVE
                              JOIN AVE_PARTE_PRINCIPAL APP
                                ON AVC.ID_PRINPARTAVE = APP.ID_PRINPARTAVE
                   WHERE AC.FL_STATCONSAVE = 'OK'
                     AND APP.FL_MANDINTEPRINPARTAVE = 'S'
                   GROUP BY AC.ID_CONSAVE,
                            CAST(AC.QN_PESOCONSAVE AS FLOAT)) VW_PESO
              ON VW_CONS.ID_CONSAVE = VW_PESO.ID_CONSAVE
//

 If Exists ( SELECT name 
            FROM sysobjects  
            WHERE name = 'VW_PROD_REPR_CARCQUEN'
            AND type = 'V')
	DROP VIEW VW_PROD_REPR_CARCQUEN
//
CREATE OR ALTER VIEW VW_PROD_REPR_CARCQUEN AS
 SELECT Data_Padrao_Registro.DT_REGIDATAPADR,
        COALESCE(Vw_DestRegiProd.QN_PESOVENDREGIPROD, 0) QN_PESOVENDDESTREPR,
        COALESCE(Vw_DestRegiProd.QN_PESOPADRREGIPROD, 0) QN_PESOPADRREGIPROD,
        COALESCE(Vw_DestRegiProd.QN_PESOORIGREGIPROD, 0) QN_PESOORIGDESTREPR,
        COALESCE(Vw_ReprRegiProd.QN_PESOVENDREGIPROD, 0) QN_PESOVENDREPRPROD,
        COALESCE(Vw_ReprRegiProd.QN_PESOPADRREGIPROD, 0) QN_PESOPADRREPRPROD,
        COALESCE(Vw_ReprRegiProd.QN_PESOORIGREGIPROD, 0) QN_PESOORIGREPRPROD
   FROM DATA_PADRAO_REGISTRO Data_Padrao_Registro
        LEFT OUTER JOIN
        (SELECT Data_Padrao_Registro.DT_REGIDATAPADR,
                SUM(CONVERT(FLOAT, CASE COALESCE(Producao_Registro.QN_PESOPADRREGIPROD, 0)
                                   WHEN 0 THEN Producao_Registro.QN_PESOLIQUREGIPROD
                                   ELSE Producao_Registro.QN_PESOPADRREGIPROD END)) QN_PESOVENDREGIPROD,
                MAX(COALESCE(Producao_Registro.QN_PESOPADRREGIPROD, 0)) QN_PESOPADRREGIPROD,
                SUM(CONVERT(FLOAT, CASE COALESCE(Producao_Registro.QN_PESOORIGREGIPROD, 0)
                                   WHEN 0 THEN Producao_Registro.QN_PESOLIQUREGIPROD
                                   ELSE Producao_Registro.QN_PESOORIGREGIPROD END)) QN_PESOORIGREGIPROD
           FROM PRODUCAO_REGISTRO_DESTINACAO Producao_Registro_Destinacao,
                PRODUCAO_REGISTRO_DEST_ITEM Producao_Registro_Dest_Item,
                PRODUCAO_REGISTRO Producao_Registro,
                DATA_PADRAO_REGISTRO Data_Padrao_Registro,
                MATERIAL_EMBALAGEM Material_embalagem
          WHERE Producao_Registro_Destinacao.ID_DESTREGIPROD = Producao_Registro_Dest_Item.ID_DESTREGIPROD
            AND Producao_Registro_Dest_Item.ID_REGIPROD = Producao_Registro.ID_REGIPROD
            AND Producao_Registro_Destinacao.ID_REGIDATAPADR = Data_Padrao_Registro.ID_REGIDATAPADR
            AND Producao_Registro_Dest_Item.FL_TIPOITEMDESTREGIPROD = 'RP'
            AND (Producao_Registro.ID_PRODMATEEMBA = Material_embalagem.ID_PRODMATEEMBA)
            AND (Material_embalagem.FL_ESPEMATEEMBA = 'EM')
          GROUP BY  Data_Padrao_Registro.DT_REGIDATAPADR) Vw_DestRegiProd ON Data_Padrao_Registro.DT_REGIDATAPADR  = Vw_DestRegiProd.DT_REGIDATAPADR
        LEFT OUTER JOIN
        (SELECT PRODUCAO_REGISTRO.DT_PADRREGIPROD,
                SUM(CONVERT(FLOAT, CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                                   WHEN 0 THEN PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD
                                   ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD END)) QN_PESOVENDREGIPROD,
                SUM(CONVERT(FLOAT, PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD)) QN_PESOPADRREGIPROD,
                SUM(CONVERT(FLOAT, CASE COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0)
                                   WHEN 0 THEN PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD
                                   ELSE PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD END)) QN_PESOORIGREGIPROD
           FROM PRODUCAO_REGISTRO,
                MATERIAL_EMBALAGEM
          WHERE PRODUCAO_REGISTRO.FL_ORIGREGIPROD = 'RP'
            AND	PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER'  , 'DM'  )
            AND	(PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA)
            AND	(MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA = 'EM')
          GROUP BY  PRODUCAO_REGISTRO.DT_PADRREGIPROD) Vw_ReprRegiProd ON Data_Padrao_Registro.DT_REGIDATAPADR = Vw_ReprRegiProd.DT_PADRREGIPROD
//


If Exists (SELECT name 
             FROM sysobjects  
            WHERE name = 'VW_PRODCONT'
              AND type = 'V') 
   DROP VIEW VW_PRODCONT
//
CREATE OR ALTER VIEW VW_PRODCONT AS 
(SELECT PRODUCAO_REGISTRO.EMPRESA,
	PRODUCAO_REGISTRO.FILIAL,
	PRODUCAO_REGISTRO.ID_IDENREGIPROD,
	PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
	PRODUCAO_REGISTRO.ID_MATERIAL,
	PRODUCAO_REGISTRO.ID_EMBALAGEM,
	PRODUCAO_REGISTRO.ID_MATEALMO,
	PRODUCAO_REGISTRO.DT_REGIPROD,
	PRODUCAO_REGISTRO.DT_PADRREGIPROD,
	PRODUCAO_REGISTRO.ID_BALANCA,
	PRODUCAO_REGISTRO.QN_TARAEMBAREGIPROD,
	PRODUCAO_REGISTRO.QN_TARACOMPREGIPROD,
	PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
	PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD,
	PRODUCAO_REGISTRO.FL_STATREGIPROD,
	PRODUCAO_REGISTRO.NR_LOTERASTREGIPROD,
	ISNULL(FL_ORIGREGIPROD, 'NM') FL_ORIGREGIPROD,
	ISNULL(FL_PRODPROPREGIPROD, 'S') FL_PRODPROPREGIPROD,
	ISNULL(FL_SIMUREGIPROD, 'N') FL_SIMUREGIPROD,
	PRODUCAO_REGISTRO.ID_USUASIST_REGIPROD,
	PRODUCAO_REGISTRO.ID_ESTRUNIDABAT,
        PRODUCAO_REGISTRO.ID_TURNPROD,
	AV.ID_ENTRAVEVIVA,
	PRODUCAO_REGISTRO.FL_MODAREGIPROD,
        PRODUCAO_REGISTRO.DT_CONTREGIPROD
   FROM PRODUCAO_REGISTRO  
          LEFT OUTER JOIN  ABATE_UNIDADE_ESTRUTURA  ON  (PRODUCAO_REGISTRO.ID_ESTRUNIDABAT  = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT)   
          LEFT OUTER JOIN  ENTRADA_AVE_VIVA AV  ON  (PRODUCAO_REGISTRO.ID_ENTRAVEVIVA  = AV.ID_ENTRAVEVIVA)  
  WHERE	ID_TRANREGIPROD IS NULL
    AND	ID_PRODMATEEMBA  <> '9999'
    AND	(FL_ORIGREGIPROD  IS NULL
      OR FL_ORIGREGIPROD  <> 'RI')
 UNION
 SELECT PRR.EMPRESA,
        PRR.FILIAL,
	PR.ID_IDENREGIPROD,
	PRR.ID_PRODMATEEMBA,
	PRR.ID_MATERIAL,
	PRR.ID_EMBALAGEM,
	PRR.ID_MATEALMO,
	PRR.DT_REGIPROD,
	PRR.DT_PADRREGIPROD,
	PRR.ID_BALANCA,
	PRR.QN_TARAEMBAREGIPROD,
	PRR.QN_TARACOMPREGIPROD,
	PRR.QN_PESOPADRREGIPROD,
	PRR.QN_PESOLIQUREGIPROD,
	'ES' FL_STATREGIPROD,
	PR.NR_LOTERASTREGIPROD,
	PRR.FL_ORIGREGIPROD,
	PRR.FL_PRODPROPREGIPROD,
	ISNULL(PRR.FL_SIMUREGIPROD, 'N') FL_SIMUREGIPROD,
	PRR.ID_USUASIST_REGIPROD,
	PR.ID_ESTRUNIDABAT,
        PR.ID_TURNPROD,
	EAV.ID_ENTRAVEVIVA,
	PRR.FL_MODAREGIPROD,
        PRR.DT_CONTREGIPROD
   FROM PRODUCAO_REGISTRO PR  
          LEFT OUTER JOIN  ABATE_UNIDADE_ESTRUTURA AUE  ON  (PR.ID_ESTRUNIDABAT  = AUE.ID_ESTRUNIDABAT) ,
	PRODUCAO_REGISTRO_REPOSITORIO PRR  
          LEFT OUTER JOIN  ENTRADA_AVE_VIVA EAV  ON  (PRR.ID_ENTRAVEVIVA  = EAV.ID_ENTRAVEVIVA)  
  WHERE	PRR.ID_REGIPROD  = PR.ID_REGIPROD
    AND	PRR.FL_STATREPOREGIPROD  = 'DP')
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRODPROG_SIMUCAMIDIST_BASE' AND TYPE = 'V')
    DROP VIEW VW_PRODPROG_SIMUCAMIDIST_BASE
//    
CREATE OR ALTER VIEW VW_PRODPROG_SIMUCAMIDIST_BASE AS
SELECT PPSC.ID_CAMISIMUPROGPROD,
       PPSC.ID_SIMUPROGPROD,
       PPSC.NR_ORDEABATCAMISIMUPROGPROD,
       PPSC.ID_LOTECRIA,
       PPSC.ID_LINHTIPOAVE,
       PPSC.FL_SEXOAVECAMISIMUPROGPROD,
       PPSC.FL_DESTCAMISIMUPROGPROD,
       PPSC.FX_CAMISIMUPROGPROD,
       PPSC.PC_UNIFCAMISIMUPROGPROD,
       PPSC.DT_PADRCAMISIMUPROGPROD,
       PPSC.PC_MORTCAMISIMUPROGPROD,
       PPSC.IE_FAZECAMISIMUPROGPROD,
       PPSC.IE_LOTECAMISIMUPROGPROD,
       PPSC.IE_GALPCAMISIMUPROGPROD,
       PPSC.PC_GRADCAMISIMUPROGPROD,
       PPSC.PC_SEGUGRADCAMISIMUPROGPROD,       
       PPSC.ID_ESTRUNIDABAT,
       PPSC.ID_DISTPESOANIM,
       CASE WHEN APDI.ID_DISTPESOANIM IS NULL THEN PPSC.QN_CABECAMISIMUPROGPROD
          ELSE CASE WHEN APDI.FL_BASEITEMDISTPESOANIM = 'N' THEN ROUND((PPSC.QN_CABECAMISIMUPROGPROD * (APDI.PC_ITEMDISTPESOANIM / 100)), 0)
                  ELSE PPSC.QN_CABECAMISIMUPROGPROD - COALESCE((SELECT SUM(ROUND((VW_PPSC.QN_CABECAMISIMUPROGPROD * (VW_APDI.PC_ITEMDISTPESOANIM / 100)), 0))
                                                                  FROM ANIMAL_PESO_DISTRIBUICAO_ITEM VW_APDI,
                                                                       PRODUCAO_PROGRAMACAO_SIMU_CAMI VW_PPSC
                                                                 WHERE VW_APDI.ID_DISTPESOANIM = APDI.ID_DISTPESOANIM
                                                                   AND VW_PPSC.ID_CAMISIMUPROGPROD = PPSC.ID_CAMISIMUPROGPROD
                                                                   AND VW_APDI.FL_BASEITEMDISTPESOANIM = 'N'), 0) 
                END
        END QN_CABECAMISIMUPROGPROD,
       CASE WHEN APDI.ID_DISTPESOANIM IS NULL THEN PPSC.QN_PESOMEDICAMISIMUPROGPROD
          ELSE (((SELECT VW_APDI.NR_ORDEITEMDISTPESOANIM * -1
                    FROM ANIMAL_PESO_DISTRIBUICAO_ITEM VW_APDI
                   WHERE VW_APDI.ID_DISTPESOANIM = APDI.ID_DISTPESOANIM
                     AND VW_APDI.FL_BASEITEMDISTPESOANIM = 'S') + APDI.NR_ORDEITEMDISTPESOANIM) * APD.QN_VARIDISTPESOANIM) + PPSC.QN_PESOMEDICAMISIMUPROGPROD 
        END AS QN_PESOMEDICAMISIMUPROGPROD
  FROM PRODUCAO_PROGRAMACAO_SIMU_CAMI PPSC
       LEFT JOIN VW_ANIMAL_PESO_DISTRIBUICAO APD 
              ON PPSC.ID_DISTPESOANIM = APD.ID_DISTPESOANIM
       LEFT JOIN ANIMAL_PESO_DISTRIBUICAO_ITEM APDI 
              ON APD.ID_DISTPESOANIM = APDI.ID_DISTPESOANIM
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRODPROG_SIMUCAMIDIST_GRAD' AND TYPE = 'V')
    DROP VIEW VW_PRODPROG_SIMUCAMIDIST_GRAD
//    
CREATE OR ALTER VIEW VW_PRODPROG_SIMUCAMIDIST_GRAD AS
SELECT VW.ID_CAMISIMUPROGPROD,
       VW.ID_SIMUPROGPROD,
       VW.NR_ORDEABATCAMISIMUPROGPROD,
       VW.ID_LINHTIPOAVE,
       VW.QN_PESOMEDICAMISIMUPROGPROD,
       VW.FL_SEXOAVECAMISIMUPROGPROD,
       VW.FL_DESTCAMISIMUPROGPROD,
       VW.FX_CAMISIMUPROGPROD,
       VW.ID_LOTECRIA,
       VW.DT_PADRCAMISIMUPROGPROD,
       VW.PC_MORTCAMISIMUPROGPROD,
       CASE WHEN VW.FL_GRADCAMISIMUPROGPROD = 'A' THEN COALESCE(SP.NM_CLASPRIMGRADPARASIST, VW.FL_GRADCAMISIMUPROGPROD)
          WHEN VW.FL_GRADCAMISIMUPROGPROD = 'B' THEN COALESCE(SP.NM_CLASSEGUGRADPARASIST, VW.FL_GRADCAMISIMUPROGPROD) 
          WHEN VW.FL_GRADCAMISIMUPROGPROD = 'C' THEN COALESCE(SP.NM_CLASTERCGRADPARASIST, VW.FL_GRADCAMISIMUPROGPROD)
        END NM_GRADCAMISIMUPROGPROD,
       VW.QN_CABECAMISIMUPROGPROD,       
       VW.ID_ESTRUNIDABAT,
       VW.ID_CONSAVE,
       VW.PC_GRADCAMISIMUPROGPROD,
       VW.PC_SEGUGRADCAMISIMUPROGPROD,
       VW.IE_FAZECAMISIMUPROGPROD,
       VW.IE_LOTECAMISIMUPROGPROD,
       VW.IE_GALPCAMISIMUPROGPROD,
       VW.PC_MANDINTECAMISIMUPROGPROD
  FROM (SELECT VW_DIST.ID_CAMISIMUPROGPROD,
               VW_DIST.ID_SIMUPROGPROD,
               VW_DIST.NR_ORDEABATCAMISIMUPROGPROD,
               VW_DIST.ID_LINHTIPOAVE,
               VW_DIST.QN_PESOMEDICAMISIMUPROGPROD,
               VW_DIST.FL_SEXOAVECAMISIMUPROGPROD,
               VW_DIST.FL_DESTCAMISIMUPROGPROD,
               VW_DIST.FX_CAMISIMUPROGPROD,
               VW_DIST.ID_LOTECRIA,
               VW_DIST.DT_PADRCAMISIMUPROGPROD,
               VW_DIST.PC_MORTCAMISIMUPROGPROD,
               'A' FL_GRADCAMISIMUPROGPROD,
               CASE WHEN COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) = 100.0 THEN VW_DIST.QN_CABECAMISIMUPROGPROD
                  ELSE ROUND(VW_DIST.QN_CABECAMISIMUPROGPROD * (COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) / 100.0), 0)
                END QN_CABECAMISIMUPROGPROD,       
               VW_DIST.ID_ESTRUNIDABAT,
               VW_DIST.ID_CONSAVE,
               VW_DIST.PC_GRADCAMISIMUPROGPROD,
               VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD,
               VW_DIST.IE_FAZECAMISIMUPROGPROD,
               VW_DIST.IE_LOTECAMISIMUPROGPROD,
               VW_DIST.IE_GALPCAMISIMUPROGPROD,
               VW_DIST.PC_MANDINTECAMISIMUPROGPROD
          FROM VW_PROD_PROG_SIMU_CAMI_DIST VW_DIST
         WHERE COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) > 0  
        UNION ALL
        SELECT VW_DIST.ID_CAMISIMUPROGPROD,
               VW_DIST.ID_SIMUPROGPROD,
               VW_DIST.NR_ORDEABATCAMISIMUPROGPROD,
               VW_DIST.ID_LINHTIPOAVE,
               VW_DIST.QN_PESOMEDICAMISIMUPROGPROD,
               VW_DIST.FL_SEXOAVECAMISIMUPROGPROD,
               VW_DIST.FL_DESTCAMISIMUPROGPROD,
               VW_DIST.FX_CAMISIMUPROGPROD,
               VW_DIST.ID_LOTECRIA,
               VW_DIST.DT_PADRCAMISIMUPROGPROD,
               VW_DIST.PC_MORTCAMISIMUPROGPROD,
               'B' FL_GRADCAMISIMUPROGPROD,
               CASE WHEN COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) = 100.0 THEN 0
                  WHEN COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0) = 100.0 THEN VW_DIST.QN_CABECAMISIMUPROGPROD
                  WHEN COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) + COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0) = 100.0 THEN VW_DIST.QN_CABECAMISIMUPROGPROD - ROUND(VW_DIST.QN_CABECAMISIMUPROGPROD * (COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) / 100.0), 0)
                  ELSE ROUND(VW_DIST.QN_CABECAMISIMUPROGPROD * (COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0) / 100.0), 0)
                END QN_CABECAMISIMUPROGPROD,       
               VW_DIST.ID_ESTRUNIDABAT,
               VW_DIST.ID_CONSAVE,
               VW_DIST.PC_GRADCAMISIMUPROGPROD,
               VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD,
               VW_DIST.IE_FAZECAMISIMUPROGPROD,
               VW_DIST.IE_LOTECAMISIMUPROGPROD,
               VW_DIST.IE_GALPCAMISIMUPROGPROD,
               VW_DIST.PC_MANDINTECAMISIMUPROGPROD
          FROM VW_PROD_PROG_SIMU_CAMI_DIST VW_DIST
         WHERE COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0) > 0  
        UNION ALL
        SELECT VW_DIST.ID_CAMISIMUPROGPROD,
               VW_DIST.ID_SIMUPROGPROD,
               VW_DIST.NR_ORDEABATCAMISIMUPROGPROD,
               VW_DIST.ID_LINHTIPOAVE,
               VW_DIST.QN_PESOMEDICAMISIMUPROGPROD,
               VW_DIST.FL_SEXOAVECAMISIMUPROGPROD,
               VW_DIST.FL_DESTCAMISIMUPROGPROD,
               VW_DIST.FX_CAMISIMUPROGPROD,
               VW_DIST.ID_LOTECRIA,
               VW_DIST.DT_PADRCAMISIMUPROGPROD,
               VW_DIST.PC_MORTCAMISIMUPROGPROD,
               'C' FL_GRADCAMISIMUPROGPROD,       
               CASE WHEN (COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) + COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0)) = 100.0  THEN 0
                  WHEN (COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) + COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0)) = 0 THEN VW_DIST.QN_CABECAMISIMUPROGPROD
                  ELSE VW_DIST.QN_CABECAMISIMUPROGPROD - (ROUND(VW_DIST.QN_CABECAMISIMUPROGPROD * (COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) / 100.0), 0) + 
                                                       ROUND(VW_DIST.QN_CABECAMISIMUPROGPROD * (COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0) / 100.0), 0))
                END QN_CABECAMISIMUPROGPROD,       
               VW_DIST.ID_ESTRUNIDABAT,
               VW_DIST.ID_CONSAVE,
               VW_DIST.PC_GRADCAMISIMUPROGPROD,
               VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD,
               VW_DIST.IE_FAZECAMISIMUPROGPROD,
               VW_DIST.IE_LOTECAMISIMUPROGPROD,
               VW_DIST.IE_GALPCAMISIMUPROGPROD,
               VW_DIST.PC_MANDINTECAMISIMUPROGPROD
          FROM VW_PROD_PROG_SIMU_CAMI_DIST VW_DIST
         WHERE COALESCE(VW_DIST.PC_GRADCAMISIMUPROGPROD, 0) + COALESCE(VW_DIST.PC_SEGUGRADCAMISIMUPROGPROD, 0) <> 100.0) VW
           JOIN ABATE_UNIDADE_ESTRUTURA AUE
             ON VW.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
           JOIN ABATE_UNIDADE AU
             ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
      LEFT JOIN SISTEMA_PARAMETRO SP
             ON AU.EMPRESA = SP.EMPRESA
            AND AU.FILIAL = SP.FILIAL
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRODPROG_SIMUCARGAVE_GRAD' AND TYPE = 'V')
    DROP VIEW VW_PRODPROG_SIMUCARGAVE_GRAD
//    
CREATE OR ALTER VIEW VW_PRODPROG_SIMUCARGAVE_GRAD AS
SELECT VW.ID_CARGSIMUPROGPROD,
       VW.ID_SIMUPROGPROD,
       VW.ID_ESTRUNIDABAT,
       CASE WHEN VW.FL_GRADAVECARGLINHSIMUPROGPROD = 'A' THEN COALESCE(SP.NM_CLASPRIMGRADPARASIST, VW.FL_GRADAVECARGLINHSIMUPROGPROD)
          WHEN VW.FL_GRADAVECARGLINHSIMUPROGPROD = 'B' THEN COALESCE(SP.NM_CLASSEGUGRADPARASIST, VW.FL_GRADAVECARGLINHSIMUPROGPROD) 
          WHEN VW.FL_GRADAVECARGLINHSIMUPROGPROD = 'C' THEN COALESCE(SP.NM_CLASTERCGRADPARASIST, VW.FL_GRADAVECARGLINHSIMUPROGPROD)
        END NM_GRADAVECARGLINHSIMUPROGPROD,
       VW.QN_AVECARGLINHSIMUPROGPROD
  FROM (SELECT PPSC.ID_CARGSIMUPROGPROD,
               PPSC.ID_SIMUPROGPROD,
               PPSC.ID_ESTRUNIDABAT,
               'A' FL_GRADAVECARGLINHSIMUPROGPROD,
               CASE WHEN COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) = 100.0 THEN SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD)
                  ELSE ROUND(SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) * (COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) / 100.0), 0)
                END QN_AVECARGLINHSIMUPROGPROD
          FROM PROD_PROG_SIMU_LINH_CARG_AVE PPSLCA 
                    JOIN PRODUCAO_PROGRAMACAO_SIMU_CARG PPSC
                      ON PPSLCA.ID_CARGSIMUPROGPROD = PPSC.ID_CARGSIMUPROGPROD
         WHERE COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) > 0 
         GROUP BY PPSC.ID_CARGSIMUPROGPROD,
                  PPSC.ID_SIMUPROGPROD,
                  PPSC.ID_ESTRUNIDABAT,
                  PPSC.PC_GRADCARGSIMUPROGPROD,
                  PPSC.PC_SEGUGRADCARGSIMUPROGPROD
        UNION ALL
        SELECT PPSC.ID_CARGSIMUPROGPROD,
               PPSC.ID_SIMUPROGPROD,
               PPSC.ID_ESTRUNIDABAT,               
               'B' FL_GRADAVECARGLINHSIMUPROGPROD,
               CASE WHEN COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) = 100.0 THEN 0
                  WHEN COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0) = 100.0 THEN SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD)
                  WHEN COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0) = 100.0 THEN SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) - ROUND(SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) * (COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) / 100.0), 0)
                  ELSE ROUND(SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) * (COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0) / 100.0), 0)
                END QN_AVECARGLINHSIMUPROGPROD
          FROM PROD_PROG_SIMU_LINH_CARG_AVE PPSLCA 
                    JOIN PRODUCAO_PROGRAMACAO_SIMU_CARG PPSC
                      ON PPSLCA.ID_CARGSIMUPROGPROD = PPSC.ID_CARGSIMUPROGPROD
         WHERE COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0) > 0 
         GROUP BY PPSC.ID_CARGSIMUPROGPROD,
                  PPSC.ID_SIMUPROGPROD,
                  PPSC.ID_ESTRUNIDABAT,
                  PPSC.PC_GRADCARGSIMUPROGPROD,
                  PPSC.PC_SEGUGRADCARGSIMUPROGPROD  
        UNION ALL
        SELECT PPSC.ID_CARGSIMUPROGPROD,
               PPSC.ID_SIMUPROGPROD,
               PPSC.ID_ESTRUNIDABAT,               
               'C' FL_GRADAVECARGLINHSIMUPROGPROD,       
               CASE WHEN (COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0)) = 100.0  THEN 0
                  WHEN (COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0)) = 0 THEN SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD)
                  ELSE SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) - (ROUND(SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) * (COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) / 100.0), 0) + 
                                                                 ROUND(SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) * (COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0) / 100.0), 0))
                END QN_AVECARGLINHSIMUPROGPROD
          FROM PROD_PROG_SIMU_LINH_CARG_AVE PPSLCA 
                    JOIN PRODUCAO_PROGRAMACAO_SIMU_CARG PPSC
                      ON PPSLCA.ID_CARGSIMUPROGPROD = PPSC.ID_CARGSIMUPROGPROD
         WHERE COALESCE(PPSC.PC_GRADCARGSIMUPROGPROD, 0) + COALESCE(PPSC.PC_SEGUGRADCARGSIMUPROGPROD, 0) <> 100.0 
         GROUP BY PPSC.ID_CARGSIMUPROGPROD,
                  PPSC.ID_SIMUPROGPROD,
                  PPSC.ID_ESTRUNIDABAT,
                  PPSC.PC_GRADCARGSIMUPROGPROD,
                  PPSC.PC_SEGUGRADCARGSIMUPROGPROD) VW
           JOIN ABATE_UNIDADE_ESTRUTURA AUE
             ON VW.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
           JOIN ABATE_UNIDADE AU
             ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
      LEFT JOIN SISTEMA_PARAMETRO SP
             ON AU.EMPRESA = SP.EMPRESA
            AND AU.FILIAL = SP.FILIAL
//

IF EXISTS (SELECT name FROM sysobjects WHERE name = 'VW_PRODUCAO' AND type = 'V')
BEGIN               
  DROP VIEW VW_PRODUCAO
END
//

CREATE OR ALTER VIEW VW_PRODUCAO AS
  SELECT 'ES' FL_LOCAREGIPROD,
         PRODUCAO_REGISTRO.ID_REGIPROD,
         PRODUCAO_REGISTRO.EMPRESA,
         PRODUCAO_REGISTRO.FILIAL,
         PRODUCAO_REGISTRO.ID_ALMOXARIFADO,
         PRODUCAO_REGISTRO.ID_IDENREGIPROD,
         PRODUCAO_REGISTRO.ID_PRODMATEEMBA,
         PRODUCAO_REGISTRO.ID_MATERIAL,
         PRODUCAO_REGISTRO.ID_EMBALAGEM,
         PRODUCAO_REGISTRO.ID_MATEALMO,
         PRODUCAO_REGISTRO.DT_REGIPROD,
         PRODUCAO_REGISTRO.DT_PADRREGIPROD,
         PRODUCAO_REGISTRO.DT_ELABREGIPROD,
         PRODUCAO_REGISTRO.DT_BALAREGIPROD,
         PRODUCAO_REGISTRO.ID_BALANCA,
         PRODUCAO_REGISTRO.QN_TARAEMBAREGIPROD,
         PRODUCAO_REGISTRO.QN_TARACOMPREGIPROD,
         PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
         PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD,
         PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD,
         PRODUCAO_REGISTRO.FL_STATREGIPROD,
         PRODUCAO_REGISTRO.NR_LOTERASTREGIPROD,  
         COALESCE(FL_ORIGREGIPROD, 'NM') FL_ORIGREGIPROD,
         COALESCE(FL_PRODPROPREGIPROD, 'S') FL_PRODPROPREGIPROD,
         COALESCE(FL_SIMUREGIPROD, 'N') FL_SIMUREGIPROD,
         PRODUCAO_REGISTRO.ID_USUASIST_REGIPROD,
         PRODUCAO_REGISTRO.ID_ESTRUNIDABAT,
         AV.ID_ENTRAVEVIVA,
         PRODUCAO_REGISTRO.FL_MODAREGIPROD,          
         PRODUCAO_REGISTRO.DT_REFEREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.FL_SEQUREGIPROD, 'N') FL_SEQUREGIPROD,
         PRODUCAO_REGISTRO.ID_BATCPROD,
         PRODUCAO_BATCH.NR_BATCPROD,
         PRODUCAO_BATCH.DT_PADRBATCPROD,
         PRODUCAO_REGISTRO.ID_IDENORIGDESMREGIPROD,
         CASE 
           WHEN PRODUCAO_REGISTRO.ID_IDENORIGDESMREGIPROD IS NOT NULL
             OR PRODUCAO_REGISTRO.FL_STATREGIPROD = 'DM'
           THEN 'S'
           ELSE 'N' 
         END AS FL_DESMREGIPROD,
         PRODUCAO_REGISTRO.ID_TUNEPROD,
         PRODUCAO_REGISTRO.ID_PACKPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_PRODEMBAREGIPROD, 0) QN_PRODEMBAREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_CAIXREGIPROD, 0) QN_CAIXREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.QN_PESOQUEBREGIPROD, 0) QN_PESOQUEBREGIPROD,
         PRODUCAO_REGISTRO.NR_SEQUTURNREGIPROD,
         COALESCE(PRODUCAO_REGISTRO.ID_INVEPROD, 0) ID_INVEPROD,
         PRODUCAO_REGISTRO.FILIAL_IMPRESSA,
         PRODUCAO_REGISTRO.EMPRESA_IMPRESSA,
         PRODUCAO_REGISTRO.ID_PROCTERMPRODADICMATECONS,
         PRODUCAO_REGISTRO.QN_TARAPRIMREGIPROD,    
         PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD,
         PRODUCAO_REGISTRO.ID_CENTCUST,
         COALESCE(PRODUCAO_REGISTRO.FL_SOBRREGIPROD, 'N') FL_SOBRREGIPROD,
         PRODUCAO_REGISTRO.DT_ENTRTUNEREGIPROD,
         PRODUCAO_REGISTRO.DT_SAIDTUNEREGIPROD,
         PRODUCAO_REGISTRO.ID_ALMOXARIFADO_PRODUCAO,
         PRODUCAO_REGISTRO.ID_ITEMDESTREGIPROD_AUTO,
         PRODUCAO_REGISTRO.ID_PALEEXPE,
         CASE WHEN PRODUCAO_REGISTRO.DT_ESTOREGIPROD IS NULL
		          THEN CASE WHEN ((DATEDIFF(DAY, PRODUCAO_REGISTRO.DT_PADRREGIPROD, PRODUCAO_REGISTRO.DT_REGIPROD) <= 1) OR
			                       ((PRODUCAO_REGISTRO.FL_ORIGREGIPROD = 'RI') AND (PRODUCAO_REGISTRO.ID_PEDIDEVOVEND IS NULL)))
                        THEN PRODUCAO_REGISTRO.DT_PADRREGIPROD
                        ELSE CAST(CAST(PRODUCAO_REGISTRO.DT_REGIPROD AS DATE) AS DATETIME)
                         END 
			                  ELSE PRODUCAO_REGISTRO.DT_ESTOREGIPROD
                    END DT_ESTOREGIPROD,
         PRODUCAO_REGISTRO.DT_LOTERASTREGIPROD,
         CASE WHEN LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE IS NOT NULL
              THEN 'LS ' + CAST(LOTE_SECUNDARIO_HORARIO.NR_HORASECULOTE AS VARCHAR(10)) + ' - ' + CONVERT(CHAR(10), PRODUCAO_REGISTRO.DT_PADRREGIPROD, 103)  
              ELSE NULL
               END GN_LOTESECU,
         LOTE_SECUNDARIO_HORARIO.GN_TAGHORASECULOTE,
		     PRODUCAO_REGISTRO.DT_VALIREGIPROD,
         PRODUCAO_REGISTRO.ID_ESTRMATEEMBAREGIPROD,
         PRODUCAO_REGISTRO.DT_FECHCONTREGIPROD,
         PRODUCAO_REGISTRO.GN_PERIRASTREGIPROD,
         PRODUCAO_REGISTRO.ID_FECHPROD,
         PRODUCAO_REGISTRO.GN_SSCCREGIPROD,
         EXPEDICAO_PALETE.NR_IDENPALEEXPE,
         EXPEDICAO_PALETE.ID_SSCCPALEEXPE,
         EXPEDICAO_PALETE.IE_PALEEXPE,
         PRODUCAO_REGISTRO.QN_PESOTOLEMINIREGIPROD,
         PRODUCAO_REGISTRO.QN_PESOTOLEMAXIREGIPROD,
         PRODUCAO_REGISTRO.ID_MOTIMOVIREGIPROD,
		 PRODUCAO_REGISTRO.NR_LOTERASTTERCREGIPROD,
	 	 PRODUCAO_REGISTRO.ID_VARIDEFIEMBA,
	 	 PRODUCAO_REGISTRO.ID_RECIPIENTE,
         PRODUCAO_REGISTRO.GN_LOTEEMBUREGIPROD,
         PRODUCAO_REGISTRO.FL_SINCMIDDREGIPROD
    FROM PRODUCAO_REGISTRO
    LEFT JOIN ABATE_UNIDADE_ESTRUTURA 
           ON PRODUCAO_REGISTRO.ID_ESTRUNIDABAT = ABATE_UNIDADE_ESTRUTURA.ID_ESTRUNIDABAT
    LEFT JOIN ENTRADA_AVE_VIVA AV 
           ON PRODUCAO_REGISTRO.ID_ENTRAVEVIVA = AV.ID_ENTRAVEVIVA
    LEFT JOIN PRODUCAO_BATCH 
           ON PRODUCAO_REGISTRO.ID_BATCPROD  = PRODUCAO_BATCH.ID_BATCPROD
    LEFT JOIN LOTE_SECUNDARIO_HORARIO
           ON PRODUCAO_REGISTRO.ID_HORASECULOTE = LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE
    LEFT JOIN EXPEDICAO_PALETE 
           ON PRODUCAO_REGISTRO.ID_PALEEXPE = EXPEDICAO_PALETE.ID_PALEEXPE
   WHERE COALESCE(FL_REGITRANREGIPROD, 'N') = 'N'
     AND FL_STATREGIPROD <> 'ER'
     AND ID_PRODMATEEMBA <> '9999'
     AND (FL_ORIGREGIPROD IS NULL OR FL_ORIGREGIPROD <> 'RI')
  UNION 
  SELECT 'RP' FL_LOCAREGIPROD,
         PRR.ID_REGIPROD,
         PRR.EMPRESA,
         PRR.FILIAL,
         PRR.ID_ALMOXARIFADO,
         PR.ID_IDENREGIPROD,
         PRR.ID_PRODMATEEMBA,
         PRR.ID_MATERIAL,
         PRR.ID_EMBALAGEM,
         PRR.ID_MATEALMO,
         PRR.DT_REGIPROD,
         PRR.DT_PADRREGIPROD,
         PRR.DT_BALAREGIPROD,
         PR.DT_ELABREGIPROD,
         PRR.ID_BALANCA,
         PRR.QN_TARAEMBAREGIPROD,
         PRR.QN_TARACOMPREGIPROD,
         PRR.QN_PESOPADRREGIPROD,
         PRR.QN_PESOLIQUREGIPROD,
         PRR.QN_PESOORIGREGIPROD,
         'ES' FL_STATREGIPROD,
         PR.NR_LOTERASTREGIPROD,
         PRR.FL_ORIGREGIPROD,
         PRR.FL_PRODPROPREGIPROD,
         COALESCE(PRR.FL_SIMUREGIPROD, 'N') FL_SIMUREGIPROD,
         PRR.ID_USUASIST_REGIPROD,
         PR.ID_ESTRUNIDABAT,
         EAV.ID_ENTRAVEVIVA,
         PRR.FL_MODAREGIPROD,
         PR.DT_REFEREGIPROD,
         COALESCE(PR.FL_SEQUREGIPROD, 'N') FL_SEQUREGIPROD,
         PR.ID_BATCPROD,
         PB.NR_BATCPROD,
         PB.DT_PADRBATCPROD,
         PR.ID_IDENORIGDESMREGIPROD,
         CASE
             WHEN PR.ID_IDENORIGDESMREGIPROD IS NOT NULL
               OR PR.FL_STATREGIPROD = 'DM'
             THEN 'S'
             ELSE 'N'
          END AS FL_DESMREGIPROD,
         PR.ID_TUNEPROD,
         PR.ID_PACKPROD,
         COALESCE(PR.QN_PRODEMBAREGIPROD, 0) QN_PRODEMBAREGIPROD,
         COALESCE(PR.QN_CAIXREGIPROD, 0) QN_CAIXREGIPROD,
         COALESCE(PR.QN_PESOQUEBREGIPROD, 0) QN_PESOQUEBREGIPROD,
         PR.NR_SEQUTURNREGIPROD,
         COALESCE(PR.ID_INVEPROD, 0) ID_INVEPROD,
         PR.FILIAL_IMPRESSA,
         PR.EMPRESA_IMPRESSA,
         PR.ID_PROCTERMPRODADICMATECONS,
         PR.QN_TARAPRIMREGIPROD,
         PR.FL_TIPOUNIDREGIPROD,
         PR.ID_CENTCUST,
         'N' FL_SOBRREGIPROD,
         PR.DT_ENTRTUNEREGIPROD,
         PR.DT_SAIDTUNEREGIPROD,
         PR.ID_ALMOXARIFADO_PRODUCAO,
         PR.ID_ITEMDESTREGIPROD_AUTO,
         NULL AS ID_PALEEXPE,
         NULL AS DT_ESTOREGIPROD,
         PR.DT_LOTERASTREGIPROD,
         CASE WHEN LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE IS NOT NULL
              THEN 'LS ' + CAST(LOTE_SECUNDARIO_HORARIO.NR_HORASECULOTE AS VARCHAR(10)) + ' - ' + CONVERT(CHAR(10), PR.DT_PADRREGIPROD, 103)  
              ELSE NULL
               END GN_LOTESECU,
         LOTE_SECUNDARIO_HORARIO.GN_TAGHORASECULOTE,
		     PRR.DT_VALIREGIPROD,
		     PR.ID_ESTRMATEEMBAREGIPROD,
         NULL AS DT_FECHCONTREGIPROD,
         PR.GN_PERIRASTREGIPROD,
         PR.ID_FECHPROD,
         PR.GN_SSCCREGIPROD,
         EP.NR_IDENPALEEXPE,
         EP.ID_SSCCPALEEXPE,
         EP.IE_PALEEXPE,
         NULL AS QN_PESOTOLEMINIREGIPROD,
         NULL AS QN_PESOTOLEMAXIREGIPROD,
         PR.ID_MOTIMOVIREGIPROD,
		 PR.NR_LOTERASTTERCREGIPROD,
		 PRR.ID_VARIDEFIEMBA,
	 	 PR.ID_RECIPIENTE,
         PR.GN_LOTEEMBUREGIPROD,
         PR.FL_SINCMIDDREGIPROD
    FROM PRODUCAO_REGISTRO_REPOSITORIO PRR
    JOIN PRODUCAO_REGISTRO PR
      ON PRR.ID_REGIPROD = PR.ID_REGIPROD
    LEFT JOIN ABATE_UNIDADE_ESTRUTURA AUE 
           ON PR.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
    LEFT JOIN PRODUCAO_BATCH PB 
           ON PR.ID_BATCPROD = PB.ID_BATCPROD
    LEFT JOIN ENTRADA_AVE_VIVA EAV 
           ON PRR.ID_ENTRAVEVIVA = EAV.ID_ENTRAVEVIVA
    LEFT JOIN LOTE_SECUNDARIO_HORARIO
           ON PR.ID_HORASECULOTE = LOTE_SECUNDARIO_HORARIO.ID_HORASECULOTE
    LEFT JOIN EXPEDICAO_PALETE EP
           ON PR.ID_PALEEXPE = EP.ID_PALEEXPE
   WHERE PRR.FL_STATREPOREGIPROD  = 'DP'
     AND PRR.ID_PRODMATEEMBA <> '9999'
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRODUCAO_DESTINACAO_TURNO' AND TYPE = 'V')
    DROP VIEW VW_PRODUCAO_DESTINACAO_TURNO
//    
CREATE OR ALTER VIEW VW_PRODUCAO_DESTINACAO_TURNO AS
SELECT PRDI.ID_ITEMDESTREGIPROD,
       CASE WHEN PRDI.NR_SEQUTURNITEMDESTREGIPROD IS NOT NULL
            THEN CAST(PRDI.NR_SEQUTURNITEMDESTREGIPROD AS VARCHAR(20))
            ELSE COALESCE((SELECT TOP 1 SUBSTRING(GN_SEQUITEMDIARTURNPROD, 1, CHARINDEX('º', GN_SEQUITEMDIARTURNPROD) - 1)
                             FROM PRODUCAO_TURNO_DIARIO_ITEM,
                                  PRODUCAO_TURNO_DIARIO
                            WHERE PRODUCAO_TURNO_DIARIO_ITEM.ID_DIARTURNPROD = PRODUCAO_TURNO_DIARIO.ID_DIARTURNPROD
                              AND PRDI.DT_ITEMDESTREGIPROD BETWEEN PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAINICITEMDIARTURNPROD AND
                                                                   PRODUCAO_TURNO_DIARIO_ITEM.DT_HORAFINAITEMDIARTURNPROD
                              AND PRODUCAO_TURNO_DIARIO.ID_UNIDABAT = AUE.ID_UNIDABAT), '1')
       END AS NR_SEQUTURNDESTREGIPROD,
       CASE WHEN PRDI.NR_SEQUTURNITEMDESTREGIPROD IS NOT NULL THEN 'S' ELSE 'N' END AS FL_TURNMANUDESTREGIPROD
  FROM PRODUCAO_REGISTRO_DEST_ITEM PRDI
       JOIN PRODUCAO_REGISTRO PR ON PRDI.ID_REGIPROD = PR.ID_REGIPROD
       JOIN ABATE_UNIDADE_ESTRUTURA AUE ON PR.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
//


IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRODUCAO_PROG_SIMU_CARG' AND TYPE = 'V')
    DROP VIEW VW_PRODUCAO_PROG_SIMU_CARG
//    
CREATE OR ALTER VIEW VW_PRODUCAO_PROG_SIMU_CARG AS
SELECT CASE WHEN COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.ID_CAMISIMUPROGPROD 
          ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
        END ID_CAMISIMUPROGPROD,
       PPS_CARG.ID_SIMUPROGPROD,
       PPS_CARG.ID_LINHTIPOAVE,
       PPS_CARG.ID_ESTRUNIDABAT,              
       PPS_CARG.DT_PADRCARGSIMUPROGPROD,
       VW_AVE_PROCESSADA.QN_AVECARGLINHSIMUPROGPROD,
       VW_AVE_PROCESSADA.QN_PESOAVECARGLINHSIMUPROGPROD,
       VW_AVE_TOTAL.QN_TOTACARGSIMUPROGPROD,
       VW_AVE_TOTAL.QN_MORTCARGSIMUPROGPROD,       
       COALESCE(PPS_CAMI.FL_INTEPADRCAMISIMUPROGPROD, 'N') FL_INTEPADRCAMISIMUPROGPROD,
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.ID_CAMISIMUPROGPROD 
          ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
        END ID_CARGSIMUPROGPROD,
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.NR_ORDEABATCAMISIMUPROGPROD 
          ELSE ROW_NUMBER() OVER (PARTITION BY PPS_CARG.ID_SIMUPROGPROD,
                                               PPS_CARG.DT_PADRCARGSIMUPROGPROD
                                      ORDER BY PPS_CARG.QN_PESOMEDICARGSIMUPROGPROD)
        END NR_ORDEABATCARGSIMUPROGPROD,
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.FL_SEXOAVECAMISIMUPROGPROD 
          ELSE PPS_CARG.FL_SEXOAVECARGSIMUPROGPROD 
        END FL_SEXOAVECARGSIMUPROGPROD,
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.FL_DESTCAMISIMUPROGPROD 
          ELSE PPS_CARG.FL_DESTCARGSIMUPROGPROD 
        END FL_DESTCARGSIMUPROGPROD,       
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.IE_FAZECAMISIMUPROGPROD 
          ELSE PPS_CARG.IE_FAZECARGSIMUPROGPROD 
        END IE_FAZECARGSIMUPROGPROD,       
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.IE_LOTECAMISIMUPROGPROD 
          ELSE PPS_CARG.IE_LOTECARGSIMUPROGPROD 
        END IE_LOTECARGSIMUPROGPROD,       
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.IE_GALPCAMISIMUPROGPROD 
          ELSE PPS_CARG.IE_GALPCARGSIMUPROGPROD 
        END IE_GALPCARGSIMUPROGPROD,              
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.QN_PESOMEDICAMISIMUPROGPROD 
          ELSE PPS_CARG.QN_PESOMEDICARGSIMUPROGPROD 
        END QN_PESOMEDICARGSIMUPROGPROD,       
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.PC_MORTCAMISIMUPROGPROD 
          ELSE PPS_CARG.PC_MORTCARGSIMUPROGPROD 
        END PC_MORTCARGSIMUPROGPROD,            
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.PC_GRADCAMISIMUPROGPROD 
          ELSE PPS_CARG.PC_GRADCARGSIMUPROGPROD 
        END PC_GRADCARGSIMUPROGPROD,
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.PC_SEGUGRADCAMISIMUPROGPROD 
          ELSE PPS_CARG.PC_SEGUGRADCARGSIMUPROGPROD 
        END PC_SEGUGRADCARGSIMUPROGPROD,
       CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.QN_CABECAMISIMUPROGPROD 
          ELSE PPS_CARG.QN_CABECARGSIMUPROGPROD 
        END QN_CABECARGSIMUPROGPROD
  FROM PRODUCAO_PROGRAMACAO_SIMU_CARG PPS_CARG
            JOIN PRODUCAO_PROGRAMACAO_SIMULACAO PPS 
              ON PPS_CARG.ID_SIMUPROGPROD = PPS.ID_SIMUPROGPROD  
            JOIN ABATE_UNIDADE_ESTRUTURA AUE
              ON PPS_CARG.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
            JOIN ABATE_UNIDADE AU
              ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
       LEFT JOIN SISTEMA_PARAMETRO_FILIAL SPF
              ON AU.EMPRESA = SPF.EMPRESA
             AND AU.FILIAL = SPF.FILIAL
            JOIN (SELECT CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPSC.ID_CAMISIMUPROGPROD
                            ELSE PPSC.ID_CARGSIMUPROGPROD
                          END ID_CAMISIMUPROGPROD,
                         MIN(PPSC.ID_CARGSIMUPROGPROD) ID_CARGSIMUPROGPROD
                    FROM PRODUCAO_PROGRAMACAO_SIMU_CARG PPSC
                              JOIN PRODUCAO_PROGRAMACAO_SIMULACAO PPS
                                ON PPSC.ID_SIMUPROGPROD = PPS.ID_SIMUPROGPROD
                              JOIN ABATE_UNIDADE_ESTRUTURA AUE
                                ON PPSC.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
                              JOIN ABATE_UNIDADE AU
                                ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
                         LEFT JOIN SISTEMA_PARAMETRO_FILIAL SPF
                                ON AU.EMPRESA = SPF.EMPRESA
                               AND AU.FILIAL = SPF.FILIAL                                
                   GROUP BY CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPSC.ID_CAMISIMUPROGPROD
                               ELSE PPSC.ID_CARGSIMUPROGPROD
                             END) VW_CARGA_FILTRO
              ON PPS_CARG.ID_CARGSIMUPROGPROD = VW_CARGA_FILTRO.ID_CARGSIMUPROGPROD
       LEFT JOIN PRODUCAO_PROGRAMACAO_SIMU_CAMI PPS_CAMI 
              ON PPS_CARG.ID_CAMISIMUPROGPROD = PPS_CAMI.ID_CAMISIMUPROGPROD
       LEFT JOIN (SELECT CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CARG.ID_CAMISIMUPROGPROD 
                            ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
                          END ID_CARGSIMUPROGPROD,
                         SUM(PPS_CARG.QN_CABECARGSIMUPROGPROD * PPS_CARG.QN_PESOMEDICARGSIMUPROGPROD) QN_TOTACARGSIMUPROGPROD,
                         SUM(FLOOR(PPS_CARG.QN_CABECARGSIMUPROGPROD * PPS_CARG.PC_MORTCARGSIMUPROGPROD / 100.0)) QN_MORTCARGSIMUPROGPROD
                    FROM PRODUCAO_PROGRAMACAO_SIMU_CARG PPS_CARG
                              JOIN PRODUCAO_PROGRAMACAO_SIMULACAO PPS 
                                ON PPS_CARG.ID_SIMUPROGPROD = PPS.ID_SIMUPROGPROD
                              JOIN ABATE_UNIDADE_ESTRUTURA AUE
                                ON PPS_CARG.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
                              JOIN ABATE_UNIDADE AU
                                ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
                         LEFT JOIN SISTEMA_PARAMETRO_FILIAL SPF
                                ON AU.EMPRESA = SPF.EMPRESA
                               AND AU.FILIAL = SPF.FILIAL                                                                
                   GROUP BY CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CARG.ID_CAMISIMUPROGPROD 
                               ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
                             END) VW_AVE_TOTAL 
              ON CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.ID_CAMISIMUPROGPROD 
                    ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
                  END = VW_AVE_TOTAL.ID_CARGSIMUPROGPROD
       LEFT JOIN (SELECT CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CARG.ID_CAMISIMUPROGPROD 
                            ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
                          END ID_CARGSIMUPROGPROD,
                         SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD) QN_AVECARGLINHSIMUPROGPROD,
                         SUM(PPSLCA.QN_AVECARGLINHSIMUPROGPROD * PPS_CARG.QN_PESOMEDICARGSIMUPROGPROD) QN_PESOAVECARGLINHSIMUPROGPROD
                    FROM PROD_PROG_SIMU_LINH_CARG_AVE PPSLCA
                              JOIN PRODUCAO_PROGRAMACAO_SIMU_CARG PPS_CARG 
                                ON PPSLCA.ID_CARGSIMUPROGPROD = PPS_CARG.ID_CARGSIMUPROGPROD
                              JOIN PRODUCAO_PROGRAMACAO_SIMULACAO PPS 
                                ON PPS_CARG.ID_SIMUPROGPROD = PPS.ID_SIMUPROGPROD
                              JOIN ABATE_UNIDADE_ESTRUTURA AUE
                                ON PPS_CARG.ID_ESTRUNIDABAT = AUE.ID_ESTRUNIDABAT
                              JOIN ABATE_UNIDADE AU
                                ON AUE.ID_UNIDABAT = AU.ID_UNIDABAT
                         LEFT JOIN SISTEMA_PARAMETRO_FILIAL SPF
                                ON AU.EMPRESA = SPF.EMPRESA
                               AND AU.FILIAL = SPF.FILIAL   
                   GROUP BY CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CARG.ID_CAMISIMUPROGPROD 
                               ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
                             END) VW_AVE_PROCESSADA 
              ON CASE WHEN PPS.FL_PERISIMUPROGPROD = 'C' AND COALESCE(SPF.FL_AGRUCARGPPCPFILIPARASIST, 'N') = 'N' THEN PPS_CAMI.ID_CAMISIMUPROGPROD 
                    ELSE PPS_CARG.ID_CARGSIMUPROGPROD 
                  END = VW_AVE_PROCESSADA.ID_CARGSIMUPROGPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_PRODUCAO_PROGRAMACAO' AND TYPE = 'V')
    DROP VIEW VW_PRODUCAO_PROGRAMACAO
//   
CREATE OR ALTER VIEW VW_PRODUCAO_PROGRAMACAO AS
SELECT (Abate_Unidade.EMPRESA) EMPRESA,
	   (Abate_Unidade.FILIAL) FILIAL,
	   CONVERT(DATETIME,CONVERT(VARCHAR,Producao_Programacao.DT_PADRPROGPROD,112)) DT_PADRPROD,
	   (Producao_Programacao_Item.ID_MATEEMBA) ID_MATEEMBA,
	   'PG' AS FL_TIPOREGI,
	   (Producao_Programacao_Item.QN_ITEMPROGPROD) QN_REGIPROD,
       CASE ISNULL(Producao_programacao_item.QN_PESOITEMPROGPROD, 0)
       WHEN 0                        
       THEN (ISNULL(Producao_programacao_item.QN_ITEMPROGPROD, 0) *
               CASE ISNULL(Material_embalagem.QN_CAPAPADRMATEEMBA, 0)
               WHEN 0 
               THEN ISNULL(Material_embalagem.QN_CAPAMEDIMATEEMBA, 0)
               ELSE ISNULL(Material_embalagem.QN_CAPAPADRMATEEMBA, 0)
                END)    
        ELSE Producao_programacao_item.QN_PESOITEMPROGPROD
        END QN_PESOITEMPROGPROD  
FROM PRODUCAO_PROGRAMACAO_ITEM Producao_Programacao_Item,
	 PRODUCAO_PROGRAMACAO Producao_Programacao,
	 ABATE_UNIDADE Abate_Unidade,
	 MATERIAL_EMBALAGEM
WHERE Producao_Programacao_Item.ID_PROGPROD = Producao_Programacao.ID_PROGPROD
	  AND Producao_Programacao.ID_UNIDABAT = Abate_Unidade.ID_UNIDABAT
	  AND Producao_programacao_item.ID_MATEEMBA  = Material_embalagem.ID_MATEEMBA
UNION
SELECT Producao_Registro.EMPRESA,
       Producao_Registro.FILIAL,
       CONVERT(DATETIME,CONVERT(VARCHAR,Producao_Registro.DT_PADRREGIPROD,112)) DT_PADRPROD,
       Material_Embalagem.ID_MATEEMBA,
       'PD' AS FL_TIPOREGI,
       COUNT(ID_REGIPROD) AS QN_REGIPROD,
       0 AS QN_PESOITEMPROGPROD
  FROM PRODUCAO_REGISTRO Producao_Registro,
       MATERIAL_EMBALAGEM Material_Embalagem
 WHERE Producao_Registro.ID_MATERIAL = Material_Embalagem.ID_MATERIAL
   AND Producao_Registro.ID_EMBALAGEM = Material_Embalagem.ID_EMBALAGEM
   AND Producao_Registro.FL_STATREGIPROD NOT IN('ER', 'CO')  
   AND Producao_Registro.ID_PRODMATEEMBA <> '9999' 
   AND coalesce(Producao_Registro.FL_PRODPROPREGIPROD, 'S') = 'S'
   AND coalesce(Producao_Registro.FL_ORIGREGIPROD, 'NM') IN ('NM','RS')   
GROUP BY Producao_Registro.EMPRESA,
         Producao_Registro.FILIAL,
         Producao_Registro.DT_PADRREGIPROD,
         Material_Embalagem.ID_MATEEMBA;
//		   

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRODUCAO_REPROCESSO_TURNO' AND TYPE = 'V')
    DROP VIEW VW_PRODUCAO_REPROCESSO_TURNO
//    
CREATE OR ALTER VIEW VW_PRODUCAO_REPROCESSO_TURNO AS
SELECT Data_Padrao_Registro.DT_REGIDATAPADR,
       Vw_Turno.NR_SEQUTURN,
       COALESCE(Vw_DestRegiProd.QN_PESOVENDREGIPROD, 0) QN_PESOVENDDESTREPR,
       COALESCE(Vw_DestRegiProd.QN_PESOPADRREGIPROD, 0) QN_PESOPADRREGIPROD,
       COALESCE(Vw_DestRegiProd.QN_PESOLIQUREGIPROD, 0) QN_PESOLIQUDESTREPR,
       COALESCE(Vw_ReprRegiProd.QN_PESOVENDREGIPROD, 0) QN_PESOVENDREPRPROD,
       COALESCE(Vw_ReprRegiProd.QN_PESOPADRREGIPROD, 0) QN_PESOPADRREPRPROD,
       COALESCE(Vw_ReprRegiProd.QN_PESOLIQUREGIPROD, 0) QN_PESOLIQUREPRPROD
  FROM DATA_PADRAO_REGISTRO Data_Padrao_Registro
       LEFT JOIN (SELECT DISTINCT PTD.DT_DIARTURNPROD,
                         SUBSTRING(PTDI.GN_SEQUITEMDIARTURNPROD, 1, CHARINDEX('º', PTDI.GN_SEQUITEMDIARTURNPROD) - 1) AS NR_SEQUTURN
                    FROM PRODUCAO_TURNO_DIARIO_ITEM PTDI
                         JOIN PRODUCAO_TURNO_DIARIO PTD ON PTDI.ID_DIARTURNPROD = PTD.ID_DIARTURNPROD) Vw_Turno ON Data_Padrao_Registro.DT_REGIDATAPADR = Vw_Turno.DT_DIARTURNPROD
       LEFT JOIN (SELECT Data_Padrao_Registro.DT_REGIDATAPADR,
                         Vw_Producao_Destinacao_Turno.NR_SEQUTURNDESTREGIPROD AS NR_SEQUTURN,
                         SUM(CASE WHEN COALESCE(Producao_Registro.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN Sistema_Parametro_Filial.FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(Producao_Registro.QN_PESOORIGREGIPROD, 0) 
                                                                                                        ELSE COALESCE(Producao_Registro.QN_PESOLIQUREGIPROD, 0) END
                                  ELSE Producao_Registro.QN_PESOPADRREGIPROD END) QN_PESOVENDREGIPROD,
                         MAX(COALESCE(Producao_Registro.QN_PESOPADRREGIPROD, 0)) QN_PESOPADRREGIPROD,
                         SUM(CASE WHEN Sistema_Parametro_Filial.FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(Producao_Registro.QN_PESOORIGREGIPROD, 0) 
                                  ELSE COALESCE(Producao_Registro.QN_PESOLIQUREGIPROD, 0) END) QN_PESOLIQUREGIPROD
                    FROM PRODUCAO_REGISTRO_DESTINACAO Producao_Registro_Destinacao
                         JOIN PRODUCAO_REGISTRO_DEST_ITEM Producao_Registro_Dest_Item ON Producao_Registro_Destinacao.ID_DESTREGIPROD = Producao_Registro_Dest_Item.ID_DESTREGIPROD
                         JOIN VW_PRODUCAO_DESTINACAO_TURNO Vw_Producao_Destinacao_Turno ON Vw_Producao_Destinacao_Turno.ID_ITEMDESTREGIPROD = Producao_Registro_Dest_Item.ID_ITEMDESTREGIPROD
                         JOIN PRODUCAO_REGISTRO Producao_Registro ON Producao_Registro_Dest_Item.ID_REGIPROD = Producao_Registro.ID_REGIPROD
                         JOIN DATA_PADRAO_REGISTRO Data_Padrao_Registro ON Producao_Registro_Destinacao.ID_REGIDATAPADR = Data_Padrao_Registro.ID_REGIDATAPADR
                         JOIN SISTEMA_PARAMETRO_FILIAL Sistema_Parametro_Filial ON Producao_Registro.EMPRESA = Sistema_Parametro_Filial.EMPRESA AND
                                                                                   Producao_Registro.FILIAL = Sistema_Parametro_Filial.FILIAL
                   WHERE Producao_Registro_Dest_Item.FL_TIPOITEMDESTREGIPROD = 'RP'
                   GROUP BY Data_Padrao_Registro.DT_REGIDATAPADR,
                            Vw_Producao_Destinacao_Turno.NR_SEQUTURNDESTREGIPROD) Vw_DestRegiProd ON Data_Padrao_Registro.DT_REGIDATAPADR = Vw_DestRegiProd.DT_REGIDATAPADR AND
                                                                                                     Vw_Turno.NR_SEQUTURN = Vw_DestRegiProd.NR_SEQUTURN
       LEFT JOIN (SELECT PRODUCAO_REGISTRO.DT_PADRREGIPROD,
                         SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('º', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) AS NR_SEQUTURN,
                         SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN SISTEMA_PARAMETRO_FILIAL.FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                                        ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) END 
                                  ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD END) QN_PESOVENDREGIPROD,
                         SUM(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
                         SUM(CASE WHEN SISTEMA_PARAMETRO_FILIAL.FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                  ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) END ) QN_PESOLIQUREGIPROD
                    FROM PRODUCAO_REGISTRO
                         JOIN VW_PRODUCAO_REGISTRO_TURNO ON PRODUCAO_REGISTRO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
                         JOIN SISTEMA_PARAMETRO_FILIAL ON PRODUCAO_REGISTRO.EMPRESA = SISTEMA_PARAMETRO_FILIAL.EMPRESA AND
                                                          PRODUCAO_REGISTRO.FILIAL = SISTEMA_PARAMETRO_FILIAL.FILIAL                         
                   WHERE PRODUCAO_REGISTRO.FL_ORIGREGIPROD = 'RP'
                     AND PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN('ER', 'CO')
                  GROUP BY PRODUCAO_REGISTRO.DT_PADRREGIPROD,
                           SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('º', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1)) Vw_ReprRegiProd ON Data_Padrao_Registro.DT_REGIDATAPADR = Vw_ReprRegiProd.DT_PADRREGIPROD AND
                                                                                                                                                                                Vw_Turno.NR_SEQUTURN = Vw_ReprRegiProd.NR_SEQUTURN
//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_PRODUCAO_TURNO' AND type = 'V')
    DROP VIEW VW_PRODUCAO_TURNO
//	
CREATE OR ALTER VIEW VW_PRODUCAO_TURNO AS
 SELECT DT_PADRREGIPROD,
        ID_TURNPROD,
        SUM(CONVERT(FLOAT, QN_PESOPADRTOTAREGIPROD)) AS QN_PESOPADRTOTAREGIPROD,
        SUM(CONVERT(FLOAT, QN_PESOVENDTOTAREGIPROD)) AS QN_PESOVENDTOTAREGIPROD,
        SUM(CONVERT(FLOAT, QN_PESOLIQUTOTAREGIPROD)) AS QN_PESOLIQUTOTAREGIPROD
   FROM (SELECT PRODUCAO_REGISTRO.DT_PADRREGIPROD,
                PRODUCAO_TURNO.ID_TURNPROD,
                SUM(CONVERT(FLOAT, PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD)) AS QN_PESOPADRTOTAREGIPROD,
                SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0)
                                   WHEN 0 THEN PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD
                                   ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD
                                    END)) AS QN_PESOVENDTOTAREGIPROD,
                SUM(CONVERT(FLOAT, PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD)) AS QN_PESOLIQUTOTAREGIPROD
           FROM PRODUCAO_REGISTRO,
                PRODUCAO_TURNO,
                (SELECT FILIAL,
                        COUNT(ID_TURNPROD) AS QN_TURNOS
                   FROM PRODUCAO_TURNO
                  GROUP BY FILIAL ) VW_TURNO
          WHERE	PRODUCAO_REGISTRO.EMPRESA = PRODUCAO_TURNO.EMPRESA
            AND	PRODUCAO_REGISTRO.FILIAL = PRODUCAO_TURNO.FILIAL
            AND	PRODUCAO_REGISTRO.FILIAL = VW_TURNO.FILIAL
            AND	PRODUCAO_REGISTRO.ID_PRODMATEEMBA != '9999'
            AND	ISNULL(PRODUCAO_REGISTRO.FL_ORIGREGIPROD, 'NM') IN ('NM','RS')
            AND	PRODUCAO_REGISTRO.FL_STATREGIPROD  NOT IN ('ER','CO')
            AND	ISNULL(PRODUCAO_REGISTRO.FL_PRODPROPREGIPROD, 'S')  = 'S'
            AND	((VW_TURNO.QN_TURNOS  = 1)
                 OR	(PRODUCAO_REGISTRO.DT_REGIPROD BETWEEN CONVERT(DATETIME, (CAST(CONVERT(VARCHAR(23), DT_REGIPROD, 103) AS VARCHAR) + ' ' +
                                                                              CAST(GN_HORAINICTURNPROD AS VARCHAR)), 103)
                                                       AND CONVERT(DATETIME, (CAST(CONVERT(VARCHAR(23), DT_REGIPROD, 103) AS VARCHAR) + ' ' +
                                                                              CAST(GN_HORAFINATURNPROD AS VARCHAR)), 103)))
          GROUP BY PRODUCAO_REGISTRO.DT_PADRREGIPROD,
                   PRODUCAO_TURNO.ID_TURNPROD
         UNION
         SELECT PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
                PRODUCAO_TURNO.ID_TURNPROD,
                SUM(CONVERT(FLOAT, PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD)) AS QN_PESOPADRTOTAREGIPROD,
                SUM(CONVERT(FLOAT, CASE ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD, 0)
                                   WHEN 0 THEN PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD
                                   ELSE PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOPADRREGIPROD
                                    END)) AS QN_PESOVENDTOTAREGIPROD,
                SUM(CONVERT(FLOAT, PRODUCAO_REGISTRO_REPOSITORIO.QN_PESOLIQUREGIPROD)) AS QN_PESOLIQUTOTAREGIPROD
           FROM PRODUCAO_REGISTRO_REPOSITORIO,
                PRODUCAO_TURNO,
                (SELECT FILIAL,
                        COUNT(ID_TURNPROD) AS QN_TURNOS
                   FROM PRODUCAO_TURNO
                  GROUP BY FILIAL) VW_TURNO
          WHERE PRODUCAO_REGISTRO_REPOSITORIO.EMPRESA = PRODUCAO_TURNO.EMPRESA
            AND	PRODUCAO_REGISTRO_REPOSITORIO.FILIAL = PRODUCAO_TURNO.FILIAL
            AND	PRODUCAO_REGISTRO_REPOSITORIO.FILIAL = VW_TURNO.FILIAL
            AND	PRODUCAO_REGISTRO_REPOSITORIO.ID_PRODMATEEMBA != '9999'
            AND	ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.FL_ORIGREGIPROD, 'NM') IN ('NM','RS')
            AND	PRODUCAO_REGISTRO_REPOSITORIO.FL_STATREPOREGIPROD = 'DP'
            AND	ISNULL(PRODUCAO_REGISTRO_REPOSITORIO.FL_PRODPROPREGIPROD, 'S') = 'S'
            AND	((VW_TURNO.QN_TURNOS  = 1)
                 OR (PRODUCAO_REGISTRO_REPOSITORIO.DT_REGIPROD BETWEEN CONVERT(DATETIME, (CAST(CONVERT(VARCHAR(23), DT_REGIPROD, 103) AS VARCHAR) + ' ' + CAST(GN_HORAINICTURNPROD AS VARCHAR)), 103)
                                                                  AND CONVERT(DATETIME, (CAST(CONVERT(VARCHAR(23), DT_REGIPROD, 103) AS VARCHAR) + ' ' + CAST(GN_HORAFINATURNPROD AS VARCHAR)), 103)))
          GROUP BY PRODUCAO_REGISTRO_REPOSITORIO.DT_PADRREGIPROD,
                   PRODUCAO_TURNO.ID_TURNPROD ) VW
  GROUP BY DT_PADRREGIPROD,
           ID_TURNPROD
//		  

IF EXISTS ( SELECT NAME 
            FROM SYSOBJECTS  
            WHERE NAME = 'VW_QUEBRA_TURNO_TIPO'
            AND TYPE = 'V')
    DROP VIEW VW_QUEBRA_TURNO_TIPO        
//
CREATE OR ALTER VIEW  [DBO].[VW_QUEBRA_TURNO_TIPO]                       
AS
SELECT DPR.DT_REGIDATAPADR                   AS DT_PADRTIPOTURNQUEB,         /*DATA PADRÃO*/
       DATEPART(WEEK,DPR.DT_REGIDATAPADR)    AS WK_PADRTIPOTURNQUEB,         /*SEMANA DO ANO*/
       DATEPART(MONTH,DPR.DT_REGIDATAPADR)   AS MM_PADRTIPOTURNQUEB,         /*MÊS DO ANO*/
       DATEPART(YEAR,DPR.DT_REGIDATAPADR)    AS YY_PADRTIPOTURNQUEB,         /*ANO COM 4 ALGARISMOS*/
       EAVTT.ID_TIPOAVE                         AS ID_TIPOAVE,               /*ID TIPO AVE*/
       AT.NM_TIPOAVE                         AS NM_TIPOAVE,                  /*TIPO DE AVE*/
       LP1.ID_PROCLINH                       AS ID_PROCLINH,                 /*ID LINHA PROCESSAMENTO*/
       LP1.NM_PROCLINH                       AS NM_PROCLINH,                 /*LINHA PROCESSAMENTO*/ 
       SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR) AS QN_CABETIPOTURNQUEB,         /*QUANTIDADE DE CABEÇAS*/

       SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
          (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                           CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))))
                                             AS QN_PESOKILOTIPOTURNQUEB,    /*PESO LIQUIDO POR TIPO DE AVE EM (KG)*/

       (SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
          (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                           CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))))*  2.20462 )    
                                             AS QN_PESOLIBRTIPOTURNQUEB,    /*PESO LIQUIDO POR TIPO DE AVE EM (LBS)*/

       DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) 
                           ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR))      
                                             AS QN_PESOMEDIKILOTIPOTURNQUEB,/*PESO POR CABEÇA EM (KG)*/

       DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) *2.20462  
                                             AS QN_PESOMEDILIBRTIPOTURNQUEB,/*PESO POR CABEÇA EM (LBRS)*/

        0                                    AS QN_PESODESTKILOTIPOTURNQUEB,/**************************************/
        0                                    AS QN_PESODESTLIBRTIPOTURNQUEB,/**************************************/



        SUM(EAV.QN_MORTENTRAVEVIVA * 
             DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  
                                             AS QN_CABEMORTTIPOTURNQUEB,   /*MORTOS NA PLATAFORMA*/

        SUM(EAV.QN_MORTENTRAVEVIVA * 

             DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  *
                   (DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) )

                                            AS QN_PESOKILOMORTTIPOTURNQUEB, /*PESO DOS MORTOS NA PLATAFORMA EM KG*/

        SUM(EAV.QN_MORTENTRAVEVIVA * 
             DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  *
                   (DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) ) * 2.20462  
                                             AS QN_PESOLIBRMORTTIPOTURNQUEB,/*PESO DOS MORTOS NA PLATAFORMA EM LBS*/

        DBO.FN_DIVIZERO(SUM(EAV.QN_MORTENTRAVEVIVA * 
                            DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  ,
                        SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)
                        ) *100               AS PC_MORTTIPOTURNQUEB,        /*PC DE MORTALIDADE NA PLATAFORMA*/

          SUM(CASE WHEN PD.ID_PARTAVE = 999999998 THEN (COALESCE(PD.QN_UNIDDESCPROD,0)) END * 
               DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  
                                             AS QN_CABEDESCTIPOTURNQUEB,   /*QUANTIDADE DE CARCAÇAS DESCARTADAS*/

          SUM(CASE WHEN PD.ID_PARTAVE = 999999998 THEN (COALESCE(PD.QN_PESODESCPROD,0)) END * 
              (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                                      CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))) ))  
                                             AS QN_PESOKILODESCTIPOTURNQUEB,  /*PESO DE CARCAÇAS DESCARTADAS EM KG*/


          SUM(CASE WHEN PD.ID_PARTAVE = 999999998 THEN (COALESCE(PD.QN_PESODESCPROD,0)) END* 
              (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                                      CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))) )) *2.20462 
                                     AS QN_PESOLIBRDESCTIPOTURNQUEB, /*PESO DE CARCAÇAS DESCARTADAS EM LBS*/

          DBO.FN_DIVIZERO(SUM(CASE WHEN PD.ID_PARTAVE = 999999998 THEN (COALESCE(PD.QN_UNIDDESCPROD,0)) END * 
                               DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) *100 
                                     AS PC_DESCTIPOTURNQUEB, /*PERCENTUAL DE CARCAÇAS DESCARTADAS*/

          SUM(CASE WHEN PD.ID_PARTAVE = 9 THEN (COALESCE(PD.QN_PESODESCPROD,0)) END * 
               DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))
                                   AS QN_PESOKILODESCPATATIPOTURNQUEB, /*PESO DE PATAS DESCARTADAS EM KG FIXO*/

          SUM(CASE WHEN PD.ID_PARTAVE = 9 THEN (COALESCE(PD.QN_PESODESCPROD,0)) END * 

               DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))*2.20462 
                                        AS QN_PESOLIBRDESCPATATIPOTURNQUEB, /*PESO DE PATAS DESCARTADAS EM LBS*/

        SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)  -
        SUM(EAV.QN_MORTENTRAVEVIVA * 
            COALESCE(DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 

                                       CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))),0)) -
        SUM(CASE WHEN PD.ID_PARTAVE = 999999998 
                THEN (PD.QN_UNIDDESCPROD) END * 
                DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  
                                      AS QN_CABEPROCTIPOTURNQUEB, /*QUANTIDADE DE CABEÇAS A SER PROCESSADAS*/


       SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
          (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                           CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))))-
        SUM(EAV.QN_MORTENTRAVEVIVA * 
             DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  *
                   (DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) )-
          SUM(COALESCE(PD.QN_PESODESCPROD,0) * 
              (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))) ))    
                                       AS QN_PESOKILOPROCTIPOTURNQUEB,/*QUANTIDADE KILOS A SER PROCESSADAS*/

       (SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
          (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                           CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))))-
        SUM(EAV.QN_MORTENTRAVEVIVA * 
             DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  *
                   (DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) )-
          SUM(COALESCE(PD.QN_PESODESCPROD,0) * 
              (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))) ))

                            )* 2.20462 AS QN_PESOLIBRPROCTIPOTURNQUEB, /*QUANTIDADE LIBRAS A SER PROCESSADAS*/

        DBO.FN_DIVIZERO((SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
          (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                           CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))))-
        SUM(EAV.QN_MORTENTRAVEVIVA * 
             DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  *
                   (DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 

                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) )-
          SUM(COALESCE(PD.QN_PESODESCPROD,0) * 
              (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))) )))    ,

            SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)  -
        SUM(EAV.QN_MORTENTRAVEVIVA * 

            COALESCE(DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                       CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))),0)) -
        SUM(CASE WHEN PD.ID_PARTAVE = 999999998 
                THEN (PD.QN_UNIDDESCPROD) END * 
                DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  
                            )                                        AS QN_PESOMEDIKILOPROCTIPOTURNQUEB, /*PESO MÉDIO EM KILOS A SER PROCESSADAS*/

        DBO.FN_DIVIZERO((SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
          (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                           CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))))-
        SUM(EAV.QN_MORTENTRAVEVIVA * 
             DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  *
                   (DBO.FN_DIVIZERO( SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) * 
                        (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                         CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))) ,
                          SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)) )-
          SUM(COALESCE(PD.QN_PESODESCPROD,0) * 
              (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                               CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))) )))    ,

            SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR)  -
        SUM(EAV.QN_MORTENTRAVEVIVA * 
            COALESCE(DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)), 
                                       CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))),0)) -
        SUM(CASE WHEN PD.ID_PARTAVE = 999999998 
                THEN (PD.QN_UNIDDESCPROD) END * 
                DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8))  , 
                                CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8))))  
                            )*2.20462 AS QN_PESOMEDILIBRPROCTIPOTURNQUEB, /*PESO MÉDIO EM LIBRAS A SER PROCESSADOS*/

		AVG(VW1.QN_QTDE_PROD)  AS QN_CABEPRODTIPOTURNQUEB, /*QUANTIDADE DE UNIDADE PRODUZIDAS*/
		AVG(VW1.QN_PESO_PROD)  AS QN_PESOKILOPRODTIPOTURNQUEB, /*PESO EM KILOS PRODUZIDOS*/
		AVG(VW1.QN_PESO_PROD) * 2.20462 AS QN_PESOLIBRPRODTIPOTURNQUEB, /*PESO EM LIBRAS PRODUZIDO*/
		AVG((VW1.QN_PESO_PROD) / (VW1.QN_QTDE_PROD))  AS QN_PESOMEDIKILOPRODTIPOTURNQUEB, /*PESO MÉDIO DE PRODUÇÃO POR UNIDADES EM KILOS*/
		AVG((VW1.QN_PESO_PROD) / (VW1.QN_QTDE_PROD))*2.20462     AS QN_PESOMEDILIBRPRODTIPOTURNQUEB, /*PESO MÉDIO DE PRODUÇÃO EM LIBRAS*/
		CAST(SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR) -SUM(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR) AS FLOAT)  AS QN_CABEQUEBTIPOTURNQUEB,  /*QUEBRA / GANHO DE CABEÇAS REPOUSO SEMPRE ZERO*/
 	    SUM(CASE COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0)
		         WHEN 0 THEN (COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) -  COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0))
			         	ELSE CASE WHEN COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0) > 0
				        		  THEN (COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) -
					        		   (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0))               
						          ELSE 0
					          END
	              END) QN_PESOKILOQUEBTIPOTURNQUEB,/*QUEBRA / GANHO DE PESO EM KILOS REPOUSO*/     
		SUM(CASE COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0)
		         WHEN 0 THEN (COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) -  COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0))
			         	ELSE CASE WHEN COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0) > 0
				        		  THEN (COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) -
					        		   (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0))               
						          ELSE 0
					          END
	              END) *2.20462 AS QN_PESOLIBRQUEBTIPOTURNQUEB, /*QUEBRA / GANHO PESO EM LIBRA REPOUSO*/
		DBO.FN_DIVIZERO(SUM(CASE COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0)
		                    WHEN 0 THEN (COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) -  COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0))
			                       ELSE CASE WHEN COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0) > 0
				        		             THEN (COALESCE(EAV.QN_PESOPENDENTRAVEVIVA, 0) - COALESCE(EAV.QN_PESOTARAENTRAVEVIVA, 0)) -
            				        		      (COALESCE(EAV.QN_PESOBRUTENTRAVEVIVA, 0) - COALESCE(EAVQP.QN_PESOTARAENTRAVEVIVAQUARPESA, 0))               
						                     ELSE 0 
					                          END
	                                END) *2.20462,
					   (SUM((EAV.QN_PESOPENDENTRAVEVIVA -EAV.QN_PESOTARAENTRAVEVIVA) *  (DBO.FN_DIVIZERO(CAST(EAVTT.QN_QTDETIPOTURNAVEVIVAENTR AS NUMERIC(18,8)) , 
																										 CAST(EAV.QN_CABEENTRAVEVIVA AS  NUMERIC(18,8)))))*  2.20462 )    ) *100AS PC_QUEBTIPOTURNQUEB, /*PERCENTUAL DE QUEBRA / GANHO REPOUSO*/
        SUM(EAV.QN_MORTENTRAVEVIVA) AS QN_MORTENTRAVEVIVA

FROM ENTRADA_AVE_VIVA EAV 
JOIN DATA_PADRAO_REGISTRO DPR ON (EAV.ID_REGIDATAPADR = DPR.ID_REGIDATAPADR)
JOIN ENTRADA_AVE_VIVA_QUARTA_PESA EAVQP ON (EAVQP.ID_ENTRAVEVIVA = EAV.ID_ENTRAVEVIVA)
JOIN ENTRADA_AVE_VIVA_TURNO_TIPO  EAVTT ON (EAV.ID_ENTRAVEVIVA = EAVTT.ID_ENTRAVEVIVA)
JOIN AVE_TIPO AT ON (AT.ID_TIPOAVE = EAVTT.ID_TIPOAVE)
JOIN LINHA_PROCESSAMENTO LP1 ON (LP1.FL_PADRESTRPROCLINH = 'S' AND LP1.FL_TIPOPROCLINH = 'EM')
LEFT JOIN (SELECT PRT.DT_PADRTOTAREGIPROD, 
 				  MED.ID_TIPOAVE,
				  SUM(PRT.QN_TOTAREGIPROD *  (CASE WHEN MEF.QN_PRODEMBAMATEEMBAFILI IS NULL 
					 							   THEN  MED.QN_PRODEMBAMATEEMBADEFI 
												   ELSE  MEF.QN_PRODEMBAMATEEMBAFILI 
												    END )) AS QN_QTDE_PROD, 
				 SUM(PRT.QN_PESOTOTAREGIPROD) AS QN_PESO_PROD
             FROM PRODUCAO_REGISTRO_TOTAL PRT
   		          JOIN MATERIAL_EMBALAGEM_DEFINICAO MED ON (PRT.ID_MATEEMBA = MED.ID_DEFIMATEEMBA)
		          JOIN MATERIAL_EMBALAGEM_FILIAL    MEF ON (MEF.ID_DEFIMATEEMBA = MED.ID_DEFIMATEEMBA)
		 GROUP BY PRT.DT_PADRTOTAREGIPROD,
			    MED.ID_TIPOAVE) VW1 
				ON (VW1.DT_PADRTOTAREGIPROD = DPR.DT_REGIDATAPADR) AND (VW1.ID_TIPOAVE = EAVTT.ID_TIPOAVE)

LEFT JOIN (SELECT ID_ENTRAVEVIVA,
                  ID_PARTAVE, 
                  SUM(COALESCE(QN_UNIDDESCPROD,0)) AS QN_UNIDDESCPROD,
                  SUM(COALESCE(QN_PESODESCPROD,0)) AS QN_PESODESCPROD
             FROM PRODUCAO_DESCARTE 
             WHERE ID_PARTAVE IN(999999998, 9) 
             GROUP BY ID_ENTRAVEVIVA, 
                      ID_PARTAVE) PD ON (PD.ID_ENTRAVEVIVA = EAV.ID_ENTRAVEVIVA AND PD.ID_PARTAVE IN(999999998))

GROUP BY DPR.DT_REGIDATAPADR , 
         EAVTT.ID_TIPOAVE, 
         AT.NM_TIPOAVE,
         LP1.ID_PROCLINH, 
         LP1.NM_PROCLINH

//

If Exists ( SELECT name FROM sysobjects  WHERE name = 'VW_REL059' AND type = 'V')
    DROP VIEW VW_REL059
//
CREATE OR ALTER VIEW VW_REL059 AS 
  SELECT EXPEDICAO_CARGA.ID_CARGEXPE,
		 SUM(CONVERT(FLOAT, ISNULL(PEDIDO_VENDA.QN_PESOPADREXPEPEDIVEND, 0))) QN_PESOPADREXPEPEDIVEND,
		 SUM(CONVERT(FLOAT, ISNULL(PEDIDO_VENDA.QN_PESOPADRDEVOPEDIVEND, 0))) QN_PESOPADRDEVOPEDIVEND,
		 SUM(CONVERT(FLOAT, ISNULL( VW.ID_PEDIVEND, 0))) QN_PESOQUEB
   FROM PEDIDO_VENDA 
        LEFT OUTER JOIN EXPEDICAO_CARGA ON PEDIDO_VENDA.ID_CARGEXPE = EXPEDICAO_CARGA.ID_CARGEXPE  
        LEFT OUTER JOIN FRETE_APONTAMENTO_FINANCEIRO ON PEDIDO_VENDA.ID_PEDIVEND = FRETE_APONTAMENTO_FINANCEIRO.ID_PEDIVEND		
		LEFT OUTER JOIN  PEDIDO_VENDA_NOTA_FISCAL  ON  PEDIDO_VENDA.ID_PEDIVEND  = PEDIDO_VENDA_NOTA_FISCAL.ID_PEDIVEND   
		LEFT OUTER JOIN  NOTA_FISCAL  ON  PEDIDO_VENDA_NOTA_FISCAL.ID_NOTAFISC  = NOTA_FISCAL.ID_NOTAFISC,
        (SELECT SUM(CONVERT(FLOAT, ISNULL(PDVI.QN_PESOQUEBITEMPEDIDEVOVEND, 0))) QN_PESO, PVI.ID_PEDIVEND
		                              FROM PEDIDO_VENDA_ITEM PVI,
			                               PEDIDO_DEVOLUCAO_VENDA PDV,
			                               PEDIDO_DEVOLUCAO_VENDA_ITEM PDVI 
		                             WHERE PVI.ID_PEDIVEND  = PDV.ID_PEDIVEND
		                               AND PDVI.ID_PEDIDEVOVEND  = PDV.ID_PEDIDEVOVEND
		                               AND PDVI.ID_MATEEMBA  = PVI.ID_MATEEMBA
									 GROUP BY PVI.ID_PEDIVEND  ) VW		
  WHERE (EXPEDICAO_CARGA.ID_CARGEXPE  = FRETE_APONTAMENTO_FINANCEIRO.ID_CARGEXPE)
    AND (ISNULL(NOTA_FISCAL.FL_CANCNOTAFISC, 'N')  <> 'S')
    AND (FRETE_APONTAMENTO_FINANCEIRO.FL_AUTOAPONFINAFRET  = 'S')
	AND (VW.ID_PEDIVEND = PEDIDO_VENDA.ID_PEDIVEND)
  GROUP BY  EXPEDICAO_CARGA.ID_CARGEXPE 
  
  UNION ALL
  
  SELECT EXPEDICAO_CARGA.ID_CARGEXPE,
		 SUM(CONVERT(FLOAT, ISNULL(PEDIDO_VENDA.QN_PESOPADREXPEPEDIVEND, 0))) QN_PESOPADREXPEPEDIVEND,
		 SUM(CONVERT(FLOAT, ISNULL(PEDIDO_VENDA.QN_PESOPADRDEVOPEDIVEND, 0))) QN_PESOPADRDEVOPEDIVEND,
		 SUM(CONVERT(FLOAT, ISNULL( VW.ID_PEDIVEND, 0))) QN_PESOQUEB
   FROM PEDIDO_VENDA 
        LEFT OUTER JOIN EXPEDICAO_CARGA ON PEDIDO_VENDA.ID_CARGEXPE = EXPEDICAO_CARGA.ID_CARGEXPE  
        LEFT OUTER JOIN  PEDIDO_VENDA_NOTA_FISCAL  ON  PEDIDO_VENDA.ID_PEDIVEND  = PEDIDO_VENDA_NOTA_FISCAL.ID_PEDIVEND   
		LEFT OUTER JOIN  NOTA_FISCAL  ON  PEDIDO_VENDA_NOTA_FISCAL.ID_NOTAFISC  = NOTA_FISCAL.ID_NOTAFISC,
		FRETE_APONTAMENTO_FINANCEIRO,
        (SELECT SUM(CONVERT(FLOAT, ISNULL(PDVI.QN_PESOQUEBITEMPEDIDEVOVEND, 0))) QN_PESO, PVI.ID_PEDIVEND
		                              FROM PEDIDO_VENDA_ITEM PVI,
			                               PEDIDO_DEVOLUCAO_VENDA PDV,
			                               PEDIDO_DEVOLUCAO_VENDA_ITEM PDVI 
		                             WHERE PVI.ID_PEDIVEND  = PDV.ID_PEDIVEND
		                               AND PDVI.ID_PEDIDEVOVEND  = PDV.ID_PEDIDEVOVEND
		                               AND PDVI.ID_MATEEMBA  = PVI.ID_MATEEMBA
									 GROUP BY PVI.ID_PEDIVEND  ) VW		
  WHERE (EXPEDICAO_CARGA.ID_CARGEXPE  = FRETE_APONTAMENTO_FINANCEIRO.ID_CARGEXPE)
    AND (ISNULL(NOTA_FISCAL.FL_CANCNOTAFISC, 'N')  <> 'S')
    AND (FRETE_APONTAMENTO_FINANCEIRO.FL_AUTOAPONFINAFRET  = 'S')
	AND (COALESCE(EXPEDICAO_CARGA.FL_ESPECARGEXPE, 'NM') <> 'RC') 
	AND (VW.ID_PEDIVEND = PEDIDO_VENDA.ID_PEDIVEND)
  GROUP BY  EXPEDICAO_CARGA.ID_CARGEXPE   
//  

IF (OBJECT_ID('dbo.VW_REL060') IS NOT NULL )
   DROP VIEW dbo.VW_REL060
//       
                             
CREATE OR ALTER VIEW VW_REL060 AS
SELECT EXPEDICAO_CARGA.EMPRESA,
      EXPEDICAO_CARGA.FILIAL,
      EXPEDICAO_CARGA.ID_CARGEXPE,
      TRANSPORTADOR_VEICULO.ID_FORNECEDOR_TRANSPORTADOR,
      FORNECEDOR.NM_FORNECEDOR,
      TRANSPORTADOR_VEICULO.ID_VEICTRAN,
      TRANSPORTADOR_VEICULO.GN_PLACVEICTRAN,
      (COALESCE((SELECT SUM(CONVERT(FLOAT, FAF.VL_APONFINAFRET))
                 FROM FRETE_APONTAMENTO_FINANCEIRO FAF
                WHERE FAF.FL_TIPOAPONFINAFRET  = 'C'
                  AND FAF.ID_CARGEXPE  = EXPEDICAO_CARGA.ID_CARGEXPE), 0) +
      COALESCE((SELECT SUM(CONVERT(FLOAT, FAF.VL_APONFINAFRET))
                FROM FRETE_APONTAMENTO_FINANCEIRO FAF
               WHERE FAF.FL_TIPOAPONFINAFRET  = 'D'
                 AND FAF.ID_CARGEXPE  = EXPEDICAO_CARGA.ID_CARGEXPE), 0)) AS VL_FRETCARGEXPE,
      EXPEDICAO_CARGA.DT_CARGEXPE,
      VEICULO_TIPO.NM_TIPOVEIC,
      CASE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
      WHEN 0 THEN VEICULO_TIPO.QN_CAPATIPOVEIC
      ELSE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
      END QN_CAPATIPOVEIC,
      VW_EXPECARG_FRETQUIL.VL_CUSTFRETQUIL,
      VW_EXPECARG_FRETQUIL.VL_CUSTFRETBRUTQUIL,
      VW_PEDIVEND.QN_ENTRCARG QN_ENTRCARG,
      (VW_PEDIVEND.VL_PESOBRUTEXPEPEDIVEND + VW_PEDIVEND.QN_TARACARRREAL) QN_PESOCARRREAL,
      VL_PESOBRUTEXPEPEDIVEND QN_PESOCARRPADR,
      (VW_PEDIVEND.VL_PESOBRUTEXPEPEDIVEND + VW_PEDIVEND.QN_TARACARRREAL - VW_PEDIVEND.QN_PESOBRUTDEVO) QN_PESOCARRREALLIQU,
      (VW_PEDIVEND.VL_PESOBRUTEXPEPEDIVEND + VW_PEDIVEND.QN_TARACARRREAL) AS QN_PESOCARRREALBRUT,
      (COALESCE(CASE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
              WHEN 0 THEN VEICULO_TIPO.QN_CAPATIPOVEIC
              ELSE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
               END, 0) - (VW_PEDIVEND.VL_PESOBRUTEXPEPEDIVEND + VW_PEDIVEND.QN_TARACARRREAL)) AS QN_CAPAOCIOBRUT,
      (COALESCE(CASE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
              WHEN 0 THEN VEICULO_TIPO.QN_CAPATIPOVEIC
              ELSE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
              END, 0) - (VW_PEDIVEND.VL_PESOBRUTEXPEPEDIVEND + VW_PEDIVEND.QN_TARACARRREAL - VW_PEDIVEND.QN_PESOBRUTDEVO)) AS QN_CAPAOCIOLIQU,
      VW_PEDIVEND.QN_TARACARRREAL,
      CASE COALESCE(CASE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
      WHEN 0 THEN VEICULO_TIPO.QN_CAPATIPOVEIC
      ELSE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
      END, 0)
      WHEN 0 THEN 0
      ELSE ((VW_PEDIVEND.VL_PESOBRUTEXPEPEDIVEND + VW_PEDIVEND.QN_TARACARRREAL) * 100) / COALESCE(CASE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
      WHEN 0 THEN VEICULO_TIPO.QN_CAPATIPOVEIC
      ELSE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
      END, 0)
      END AS PC_APROBRUTVEIC,
      CASE COALESCE(CASE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
                  WHEN 0 THEN VEICULO_TIPO.QN_CAPATIPOVEIC
                  ELSE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
                  END, 0)
      WHEN 0 THEN 0
      ELSE ((VW_PEDIVEND.VL_PESOBRUTEXPEPEDIVEND + VW_PEDIVEND.QN_TARACARRREAL - VW_PEDIVEND.QN_PESOBRUTDEVO) * 100) /
            COALESCE(CASE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
                  WHEN 0 THEN VEICULO_TIPO.QN_CAPATIPOVEIC
                 ELSE TRANSPORTADOR_VEICULO.QN_CAPAVEIC
                 END, 0)
      END AS PC_APROLIQUVEIC,
      VW_PEDIVEND.QN_PESOBRUTDEVO,
      VW_PEDIVEND.QN_PESOPADRDEVO,
      VW_PEDIVEND.QN_PESOREALDEVO,
      VW_PEDIVEND.QN_TARAREALDEVO,
      EXPEDICAO_CARGA.ID_SUBRLOGI_FRETE,
      LOGISTICA_SUBREGIAO.NM_SUBRLOGI,
      COALESCE(EXPEDICAO_CARGA.VL_FRETSUGECARGEXPE, 0) AS VL_FRETSUGECARGEXPE,
      VW_PEDIVEND.SG_TIPOFRETPEDIVEND,
	  VW_PEDIVEND.ID_TIPOFRET,
      EXPEDICAO_CARGA.ID_CARGEXPE_PRINCIPAL,
      QN_PESOBRUTEXPEPEDIVEND QN_PESOBRUTEXPE,
      QN_EMBAEXPEPEDIVEND QN_EMBAEXPE,
      EXPEDICAO_CARGA.GN_OBSECARGEXPE,
      QN_EMBADEVOPEDIVEND QN_EMBADEVO,
      COALESCE(QN_UNIDDEVOPEDIVEND, 0) QN_UNIDDEVO,
	  VEICULO_TIPO.VL_SAIDTIPOVEIC,
	  VEICULO_TIPO.VL_KMTIPOVEIC,
	  VEICULO_TIPO.VL_ADICTIPOVEIC,
	  FORNECEDOR.FL_PESSFORN,
	  FORNECEDOR.NR_CNPJFORN,
	  FORNECEDOR.NR_CPFFORN,
	  TRANSPORTADOR_VEICULO.QN_CAPAVEIC,
	  EXPEDICAO_CARGA.FL_STATCARGEXPE,
	  EXPEDICAO_CARGA.QN_KMFRETCARGEXPE,
	  EXPEDICAO_CARGA.VL_FRETCARGEXPE VL_FRETCARGEXPE_EXPECARG,
	  EXPEDICAO_CARGA.ID_MODACALCFRETCARGEXPE,
	  EXPEDICAO_CARGA.VL_SAIDCARGEXPE,
	  EXPEDICAO_CARGA.VL_KMCARGEXPE,
	  EXPEDICAO_CARGA.VL_ENTRCARGEXPE
 FROM EXPEDICAO_CARGA
      LEFT OUTER JOIN (SELECT VW.ID_CARGEXPE_PRINCIPAL,
                              SUM(VW_PEDIDO_ITEM.VL_PESOBRUTEXPEPEDIVEND) VL_PESOBRUTEXPEPEDIVEND,
                              SUM(VW_PEDIDO_ITEM.QN_TARACARRREAL) QN_TARACARRREAL,
                              SUM(VW_PEDIDO_ITEM.QN_PESOPADRDEVO) QN_PESOPADRDEVO,
                              SUM(VW_PEDIDO_ITEM.QN_PESOBRUTDEVO) QN_PESOBRUTDEVO,
                              SUM(VW_PEDIDO_ITEM.QN_PESOREALDEVO) QN_PESOREALDEVO,
                              SUM(VW_PEDIDO_ITEM.QN_TARAREALDEVO) QN_TARAREALDEVO,
                              MIN(VW_PEDIDO_ITEM.SG_TIPOFRETPEDIVEND) SG_TIPOFRETPEDIVEND,
							  MIN(VW_PEDIDO_ITEM.ID_TIPOFRET) ID_TIPOFRET,
                              COUNT(DISTINCT VW_PEDIDO_ITEM.ID_CLIENTE) QN_ENTRCARG,
                              SUM(VW_PEDIDO_ITEM.QN_PESOBRUTEXPEPEDIVEND) QN_PESOBRUTEXPEPEDIVEND,
                              SUM(VW_PEDIDO_ITEM.QN_EMBAEXPEPEDIVEND) QN_EMBAEXPEPEDIVEND,
                              SUM(VW_PEDIDO_ITEM.QN_EMBADEVOPEDIVEND) QN_EMBADEVOPEDIVEND,
                              SUM(COALESCE(VW_PEDIDO_ITEM.QN_UNIDDEVOPEDIVEND, 0)) QN_UNIDDEVOPEDIVEND
                         FROM (SELECT CASE COALESCE(PV.QN_PESOPADREXPEPEDIVEND, 0)
                                        WHEN 0
                                      THEN COALESCE(PV.QN_PESOPEDIVEND, 0)
                                      ELSE COALESCE(PV.QN_PESOPADREXPEPEDIVEND, 0)
                                      END VL_PESOBRUTEXPEPEDIVEND,
                                      CASE COALESCE(PV.QN_TARAREALEXPEPEDIVEND, 0)
                                        WHEN 0
                                      THEN COALESCE(PV.QN_TARAPEDIVEND, 0)
                                      ELSE COALESCE(PV.QN_TARAREALEXPEPEDIVEND, 0)
                                      END QN_TARACARRREAL,
                                      COALESCE(PV.QN_PESOPADRDEVOPEDIVEND, 0) QN_PESOPADRDEVO,
                                      COALESCE(PV.QN_PESOPADRDEVOPEDIVEND, 0) + COALESCE(PV.QN_TARAREALDEVOPEDIVEND, 0) QN_PESOBRUTDEVO,
                                      COALESCE(PV.QN_PESOREALDEVOPEDIVEND, 0) QN_PESOREALDEVO,
                                      COALESCE(PV.QN_TARAREALDEVOPEDIVEND, 0) QN_TARAREALDEVO,
                                      SG_TIPOFRETPEDIVEND,
									  ID_TIPOFRET,
                                      PV.ID_CLIENTE,
                                      CASE COALESCE(PV.QN_PESOPADREXPEPEDIVEND, 0)
                                        WHEN 0
                                      THEN COALESCE(PV.QN_PESOPEDIVEND, 0)
                                      ELSE COALESCE(PV.QN_PESOPADREXPEPEDIVEND, 0)
                                      END QN_PESOBRUTEXPEPEDIVEND,

                                      CASE COALESCE(PV.QN_EMBAEXPEPEDIVEND, 0)
                                        WHEN 0
                                      THEN COALESCE(PV.QN_EMBAPEDIVEND, 0)
                                      ELSE COALESCE(PV.QN_EMBAEXPEPEDIVEND, 0)
                                      END QN_EMBAEXPEPEDIVEND,

                                      COALESCE(QN_EMBADEVOPEDIVEND, 0) QN_EMBADEVOPEDIVEND,
                                      SUM(COALESCE(PVI.QN_UNIDDEVOITEMPEDIVEND, 0)) QN_UNIDDEVOPEDIVEND,
                                      PV.ID_PEDIVEND,
                                      PV.FL_STATPEDIVEND
                                 FROM PEDIDO_VENDA PV
                                 LEFT OUTER JOIN PEDIDO_VENDA_ITEM PVI ON (PV.ID_PEDIVEND = PVI.ID_PEDIVEND)
                                GROUP BY PV.QN_PESOPADREXPEPEDIVEND, PV.QN_PESOPEDIVEND, PV.QN_TARAREALEXPEPEDIVEND,
                                         PV.QN_TARAPEDIVEND, PV.QN_PESOPADRDEVOPEDIVEND, PV.QN_TARAREALDEVOPEDIVEND,
                                         PV.QN_PESOREALDEVOPEDIVEND, PV.SG_TIPOFRETPEDIVEND, PV.ID_TIPOFRET, PV.ID_CLIENTE, PV.ID_PEDIVEND,
                                         PV.QN_EMBAEXPEPEDIVEND, PV.QN_EMBAPEDIVEND, PV.QN_EMBADEVOPEDIVEND,
                                         PV.FL_STATPEDIVEND) VW_PEDIDO_ITEM
                         JOIN VW_EXPECARG_PEDIVEND VW ON (VW_PEDIDO_ITEM.ID_PEDIVEND = VW.ID_PEDIVEND)
                        WHERE VW_PEDIDO_ITEM.FL_STATPEDIVEND NOT IN ('CN', 'ZR')
                     GROUP BY VW.ID_CARGEXPE_PRINCIPAL ) VW_PEDIVEND ON EXPEDICAO_CARGA.ID_CARGEXPE_PRINCIPAL = VW_PEDIVEND.ID_CARGEXPE_PRINCIPAL
      LEFT OUTER JOIN  LOGISTICA_SUBREGIAO  ON  EXPEDICAO_CARGA.ID_SUBRLOGI_FRETE  = LOGISTICA_SUBREGIAO.ID_SUBRLOGI ,
      EMPRESA_FILIAL,
      CAMINHAO_PROGRAMACAO_ITEM,
      TRANSPORTADOR_VEICULO,
      FORNECEDOR,
      VEICULO_TIPO,
      VW_EXPECARG_FRETQUIL
WHERE (EXPEDICAO_CARGA.EMPRESA  = EMPRESA_FILIAL.EMPRESA)
  AND (EXPEDICAO_CARGA.FILIAL  = EMPRESA_FILIAL.FILIAL)
  AND (EXPEDICAO_CARGA.ID_CARGEXPE_PRINCIPAL  = VW_EXPECARG_FRETQUIL.ID_CARGEXPE_PRINCIPAL)
  AND (EXPEDICAO_CARGA.ID_ITEMPROGCAMI  = CAMINHAO_PROGRAMACAO_ITEM.ID_ITEMPROGCAMI)
  AND (CAMINHAO_PROGRAMACAO_ITEM.ID_VEICTRAN  = TRANSPORTADOR_VEICULO.ID_VEICTRAN)
  AND (TRANSPORTADOR_VEICULO.ID_FORNECEDOR_TRANSPORTADOR  = FORNECEDOR.ID_FORNECEDOR)
  AND (TRANSPORTADOR_VEICULO.ID_TIPOVEIC  = VEICULO_TIPO.ID_TIPOVEIC)
  AND (EXPEDICAO_CARGA.ID_CARGEXPE  = EXPEDICAO_CARGA.ID_CARGEXPE_PRINCIPAL)

//     

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_RELAROMADETA' AND TYPE = 'V')
    DROP VIEW VW_RELAROMADETA
//

CREATE OR ALTER VIEW [dbo].[VW_RELAROMADETA] 
AS 
SELECT VW.ID_CLIENTE,
	   PEDIDO_VENDA.ID_PEDIVEND,
	   VW.ID_EMBALAGEM,
	   VW.NM_EMBALAGEM,
	   VW.QN_SALDATUA,
	   (ISNULL((SELECT DISTINCT SUM(CONVERT(FLOAT, QN_EMBACLIECONTEMBA))
		          FROM EMBALAGEM_CONTROLE EC,
			           PEDIDO_VENDA PV 
		         WHERE EC.ID_PEDIVEND = PV.ID_PEDIVEND
		           AND PV.ID_CLIENTE = VW.ID_CLIENTE
		           AND PV.ID_PEDIVEND = PEDIDO_VENDA.ID_PEDIVEND
		           AND EC.ID_EMBALAGEM = VW.ID_EMBALAGEM), 0)) QN_LCTOCARG
  FROM (SELECT ECT.ID_CLIENTE,
			   EMB.ID_EMBALAGEM,
			   EMB.NM_EMBALAGEM,
			   SUM(CONVERT(FLOAT, ECT.QN_CLIETOTACONTEMBA)) QN_SALDATUA
	      FROM EMBALAGEM_CONTROLE_TOTAL ECT,
		       EMBALAGEM EMB 
	     WHERE ECT.ID_EMBALAGEM = EMB.ID_EMBALAGEM
	  GROUP BY ECT.ID_CLIENTE,
		       EMB.ID_EMBALAGEM,
      		   EMB.NM_EMBALAGEM ) VW,
	 PEDIDO_VENDA 

WHERE PEDIDO_VENDA.ID_CLIENTE  = VW.ID_CLIENTE

//
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'Vw_Sobra_Aves' AND TYPE = 'V')
    DROP VIEW Vw_Sobra_Aves
//    
CREATE  VIEW Vw_Sobra_Aves AS
                 SELECT   Producao_Medicao.ID_LINHTIPOAVE,
                          Producao_Medicao.DT_PADRMEDIPROD,
                          SUM(Producao_Medicao.QN_MEDIPROD) AS SOBRA_AVES                          
                     FROM PRODUCAO_MEDICAO Producao_Medicao
                    WHERE Producao_Medicao.ID_TIPOMEDIPROD = 5    
                    GROUP BY Producao_Medicao.ID_LINHTIPOAVE,
                             Producao_Medicao.DT_PADRMEDIPROD
//
//

 If Exists ( SELECT name FROM sysobjects WHERE name = 'VW_TITULO_DESPESA' AND type = 'V')
   DROP VIEW VW_TITULO_DESPESA
//   
 CREATE OR ALTER VIEW VW_TITULO_DESPESA AS
 SELECT PV.ID_PEDIVEND,
        TR.ID_TITURECE,
        VW_ULTIDEVO.ID_PEDIDEVOVEND,

        CASE VW_ULTIDEVO.ID_PEDIVEND WHEN NULL THEN 0 
		ELSE
          (ISNULL(PV.VL_SEGUPEDIVEND,0) + ISNULL(PV.VL_DESPPEDIVEND,0) + ISNULL(PV.VL_FRETPEDIVEND,0))
        END AS VL_DEVOPEDI,
        (ISNULL(PV.VL_SEGUPEDIVEND, 0) + ISNULL(PV.VL_DESPPEDIVEND, 0) + ISNULL(PV.VL_FRETPEDIVEND, 0)) VL_FATUPEDI,
        (ISNULL(PV.VL_SEGUPEDIVEND, 0) + ISNULL(PV.VL_DESPPEDIVEND, 0) + ISNULL(PV.VL_FRETPEDIVEND, 0)) - 
        (ISNULL(PV.VL_SEGUPEDIVEND,0) + ISNULL(PV.VL_DESPPEDIVEND,0) + ISNULL(PV.VL_FRETPEDIVEND,0)) - 
         CASE VW_ULTIDEVO.ID_PEDIVEND WHEN NULL THEN 0
		 ELSE (ISNULL(PV.VL_SEGUPEDIVEND,0) + ISNULL(PV.VL_DESPPEDIVEND,0) + ISNULL(PV.VL_FRETPEDIVEND,0)) 
		 END AS VL_TOTAPEDI,  

       (ISNULL(PV.VL_SEGUPEDIVEND, 0) + ISNULL(PV.VL_DESPPEDIVEND, 0) + ISNULL(PV.VL_FRETPEDIVEND, 0)) * PV.PC_DESCFINAPEDIVEND / CONVERT(FLOAT, 100) VL_DESPFINAPEDI,
       ROUND((CASE VW_ULTIDEVO.ID_PEDIVEND WHEN NULL THEN 0
              ELSE (ISNULL(PV.VL_SEGUPEDIVEND,0) + ISNULL(PV.VL_DESPPEDIVEND,0) + ISNULL(PV.VL_FRETPEDIVEND,0)) 
			   END) * TR.VL_TITURECE / PV.VL_FATUPEDIVEND,2) VL_DEVOTITU, 
		  
       (ISNULL(PV.VL_SEGUPEDIVEND, 0) + ISNULL(PV.VL_DESPPEDIVEND, 0) + ISNULL(PV.VL_FRETPEDIVEND, 0)) * FPP.PC_PARCFORMPAGA / CONVERT(FLOAT, 100) VL_FATUTITU,
       ROUND(((ISNULL(PV.VL_SEGUPEDIVEND,0) + ISNULL(PV.VL_DESPPEDIVEND,0) + ISNULL(PV.VL_FRETPEDIVEND,0)) - 
               CASE VW_ULTIDEVO.ID_PEDIVEND WHEN NULL THEN 0
               ELSE (ISNULL(PV.VL_SEGUPEDIVEND,0) + ISNULL(PV.VL_DESPPEDIVEND,0) + ISNULL(PV.VL_FRETPEDIVEND,0)) END) * TR.VL_TITURECE / PV.VL_FATUPEDIVEND, 2) VL_TOTATITU,
       ((ISNULL(PV.VL_SEGUPEDIVEND, 0) + ISNULL(PV.VL_DESPPEDIVEND, 0) + ISNULL(PV.VL_FRETPEDIVEND, 0)) * PV.PC_DESCFINAPEDIVEND / CONVERT(FLOAT, 100)) * 
	   TR.VL_TITURECE / PV.VL_FATUPEDIVEND VL_DESPFINATITU,
       FPP.NR_PARCFORMPAGA NR_PARCELA,
       FPP.PC_PARCFORMPAGA PC_PARCELA,
       TR.VL_TITURECE - ROUND(ISNULL((SELECT SUM(CONVERT(FLOAT, ISNULL(VL_ABATTITURECE, 0)))
                                        FROM TITULO_RECEBER_ABATIMENTO 
                                       WHERE TITULO_RECEBER_ABATIMENTO.ID_TITURECE  = TR.ID_TITURECE
                                         AND FL_TIPOABATTITURECE  IS NOT NULL), 0) + 
							  ISNULL((SELECT SUM(CONVERT(FLOAT, ISNULL(VL_DESCBAIXTITURECE, 0)))
                                        FROM TITULO_RECEBER_BAIXA 
                                       WHERE TITULO_RECEBER_BAIXA.ID_TITURECE  = TR.ID_TITURECE
                                         AND ISNULL(FL_TIPOBAIXTITURECE, 'MN')  = 'DV'
                                         AND ISNULL(TITULO_RECEBER_BAIXA.VL_DESCBAIXTITURECE, 0)  > 0), 0) + 
							  ISNULL((SELECT SUM(CONVERT(FLOAT, ISNULL(VL_DEVOBLOQTITURECE, 0)))
                                        FROM TITULO_RECEBER_DEVOLUCAO_BLOQ 
                                       WHERE TITULO_RECEBER_DEVOLUCAO_BLOQ.ID_TITURECE  = TR.ID_TITURECE ), 0), 2) VL_BASETITU
  FROM PEDIDO_VENDA PV LEFT OUTER JOIN 
       (SELECT ID_PEDIVEND, ID_PEDIDEVOVEND
           FROM PEDIDO_DEVOLUCAO_VENDA PDV
          WHERE ISNULL(PDV.FL_ULTIPEDIDEVOVEND, 'N') = 'S' ) VW_ULTIDEVO  ON  PV.ID_PEDIVEND  = VW_ULTIDEVO.ID_PEDIVEND ,
       TITULO_RECEBER TR,
       FORMA_PAGAMENTO FP,
       FORMA_PAGAMENTO_PARCELA FPP
      
 WHERE PV.ID_PEDIVEND  = TR.ID_PEDIVEND
   AND FP.ID_FORMPAGA  = PV.ID_FORMPAGA
   AND FP.ID_FORMPAGA  = FPP.ID_FORMPAGA
   AND TR.NR_NUMEPARCTITURECE  = FPP.NR_PARCFORMPAGA
   AND PV.ID_FORMPAGA  IS NOT NULL
   AND (ISNULL(PV.VL_SEGUPEDIVEND, 0) + ISNULL(PV.VL_DESPPEDIVEND, 0) + ISNULL(PV.VL_FRETPEDIVEND, 0))  > 0
//

ALTER TABLE PRODUCAO_REGISTRO_TR_ITEM ADD QN_PESOLIQUSAIDTRANREGIPROD NUMERIC(16,3)
//

ALTER TABLE PRODUCAO_REGISTRO_TR_ITEM ADD QN_PESOLIQURECETRANREGIPROD NUMERIC(16,3)
//

IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'VW_PRODUCAO_PROG_MULT_TOTA' AND TYPE = 'V')
    DROP VIEW VW_PRODUCAO_PROG_MULT_TOTA
//    
CREATE VIEW VW_PRODUCAO_PROG_MULT_TOTA AS
WITH VW AS (
  SELECT PPM.EMPRESA,
        PPM.FILIAL,
        PPM.ID_MULTPROGPROD,
        PPM.ID_ESTRUNIDABAT,
        PPM.ID_PRODMATEEMBA,
        PPM.DT_MULTPROGPROD,
        PPM.NR_PRIOMULTPROGPROD,
        PPM.ID_CLIENTE,
        PPM.ID_PEDIVEND,
        PPM.GN_TAGMULTPROGPROD, 
        PPM.ID_ETIQUETA,
        PPM.QN_ALERANTEEXPRMULTPROGPROD,
        PPM.FL_BLOQPRODEXCEMULTPROGPROD,
        PPM.FL_EXIBPAINCONTMULTPROGPROD,
        PPM.FL_ALERANTEEXPRMULTPROGPROD,
        CASE WHEN VW.NR_POSIMULTPROGPROD = VW.NR_ULTIPOSIMULTPROGPROD THEN 'S'
          ELSE 'N'
        END FL_ULTIREGIMULTPROGPROD,
        PPM.FX_MULTPROGPROD,            
        PPM.ID_UNIDABAT,                                               
        PPM.NR_SEQUTURNMULTPROGPROD,
        PPM.ID_SIMUPROGPROD,                               
        COALESCE(PPM.QN_CAIXMULTPROGPROD, 0) QN_CAIXMULTPROGPROD,
			  COALESCE((SELECT SUM(COALESCE(VW_INTE.QN_CAIXMULTPROGPROD, 0))
                          FROM PRODUCAO_PROGRAMACAO_MULTIPLA VW_INTE
                        WHERE VW_INTE.ID_ESTRUNIDABAT = PPM.ID_ESTRUNIDABAT
                          AND VW_INTE.DT_MULTPROGPROD = PPM.DT_MULTPROGPROD                                  
                          AND VW_INTE.ID_PRODMATEEMBA = PPM.ID_PRODMATEEMBA
                          AND COALESCE(VW_INTE.NR_SEQUTURNMULTPROGPROD, 0) = COALESCE(PPM.NR_SEQUTURNMULTPROGPROD, 0)            
                          AND COALESCE(VW_INTE.ID_ETIQUETA, 0) = COALESCE(PPM.ID_ETIQUETA, 0) 
						              AND COALESCE(VW_INTE.GN_TAGMULTPROGPROD, '') = COALESCE(PPM.GN_TAGMULTPROGPROD, '')
                          AND CASE WHEN VW_INTE.FL_BLOQPRODEXCEMULTPROGPROD = 'N' THEN 10000000000
                                  ELSE 0
                                END + VW_INTE.NR_PRIOMULTPROGPROD <= CASE WHEN PPM.FL_BLOQPRODEXCEMULTPROGPROD = 'N' THEN 10000000000
                                                                        ELSE 0
                                                                      END + PPM.NR_PRIOMULTPROGPROD), 0) QN_CAIXACUMMULTPROGPROD,   
        COALESCE(PRT.QN_TOTAREGIPROD, 0) QN_CAIXTOTAREGIPROD,    
        COALESCE(PPM.QN_PESOMULTPROGPROD, 0) QN_PESOMULTPROGPROD,
        COALESCE((SELECT SUM(COALESCE(VW_INTE.QN_PESOMULTPROGPROD, 0))
                    FROM PRODUCAO_PROGRAMACAO_MULTIPLA VW_INTE
                  WHERE VW_INTE.ID_ESTRUNIDABAT                      = PPM.ID_ESTRUNIDABAT
                    AND VW_INTE.DT_MULTPROGPROD                      = PPM.DT_MULTPROGPROD                                  
                    AND VW_INTE.ID_PRODMATEEMBA                      = PPM.ID_PRODMATEEMBA
                    AND COALESCE(VW_INTE.NR_SEQUTURNMULTPROGPROD, 0) = COALESCE(PPM.NR_SEQUTURNMULTPROGPROD, 0)            
                    AND COALESCE(VW_INTE.ID_ETIQUETA, 0)             = COALESCE(PPM.ID_ETIQUETA, 0)
							      AND COALESCE(VW_INTE.GN_TAGMULTPROGPROD, '')     = COALESCE(PPM.GN_TAGMULTPROGPROD, '')
                    AND CASE WHEN VW_INTE.FL_BLOQPRODEXCEMULTPROGPROD = 'N' THEN 10000000000
                            ELSE 0
                          END + VW_INTE.NR_PRIOMULTPROGPROD <= CASE WHEN PPM.FL_BLOQPRODEXCEMULTPROGPROD = 'N' THEN 10000000000
                                                                  ELSE 0
                                                                END + PPM.NR_PRIOMULTPROGPROD), 0) QN_PESOACUMMULTPROGPROD,  
        COALESCE(PRT.QN_PESOTOTAREGIPROD, 0) QN_PESOTOTAREGIPROD,
        PPM.IE_MULTPROGPROD,
        PPM.ID_CENTCUST,
        PPM.DT_ELABMULTPROGPROD,
		PPM.QN_CAIXSOLIMULTPROGPROD
    FROM PRODUCAO_PROGRAMACAO_MULTIPLA PPM
        CROSS APPLY (
        SELECT ID_MULTPROGPROD,
              ROW_NUMBER() OVER (PARTITION BY ID_ESTRUNIDABAT,
                                              DT_MULTPROGPROD,                     
                                              ID_PRODMATEEMBA,                     
                                              COALESCE(NR_SEQUTURNMULTPROGPROD, 0),
                                              COALESCE(ID_ETIQUETA, 0),
				                                      COALESCE(GN_TAGMULTPROGPROD, '')
                                    ORDER BY CASE WHEN FL_BLOQPRODEXCEMULTPROGPROD = 'N' THEN 10000000000
                                                ELSE 0
                                              END + NR_PRIOMULTPROGPROD ASC) NR_POSIMULTPROGPROD,
              COUNT(ID_MULTPROGPROD) OVER (PARTITION BY ID_ESTRUNIDABAT,
                                                            DT_MULTPROGPROD,                     
                                                            ID_PRODMATEEMBA,                     
                                                            COALESCE(NR_SEQUTURNMULTPROGPROD, 0),
                                                            COALESCE(ID_ETIQUETA, 0),
				                                                    COALESCE(GN_TAGMULTPROGPROD, '')) NR_ULTIPOSIMULTPROGPROD
        FROM PRODUCAO_PROGRAMACAO_MULTIPLA
        WHERE ID_MULTPROGPROD = PPM.ID_MULTPROGPROD
		  and ID_ESTRUNIDABAT = PPM.ID_ESTRUNIDABAT
          AND DT_MULTPROGPROD = PPM.DT_MULTPROGPROD                      
          AND ID_PRODMATEEMBA = PPM.ID_PRODMATEEMBA                     
        ) VW
        LEFT JOIN PRODUCAO_REGISTRO_TOTAL PRT
               ON PPM.ID_ESTRUNIDABAT = PRT.ID_ESTRUNIDABAT
              AND PPM.DT_MULTPROGPROD = PRT.DT_PADRTOTAREGIPROD
              AND PPM.ID_PRODMATEEMBA = PRT.ID_PRODMATEEMBA
              AND COALESCE(PPM.NR_SEQUTURNMULTPROGPROD, 0) = COALESCE(PRT.NR_SEQUTURNTOTAREGIPROD, 0)
              AND COALESCE(PPM.ID_ETIQUETA, 0) = COALESCE(PRT.ID_ETIQUETA, 0)
		      AND COALESCE(PPM.GN_TAGMULTPROGPROD, '') = COALESCE(PRT.GN_TAGTOTAREGIPROD, '')
        WHERE VW.ID_MULTPROGPROD = PPM.ID_MULTPROGPROD
  )
SELECT VW.EMPRESA,
      VW.FILIAL,
      VW.ID_MULTPROGPROD,                                                    
      VW.ID_ESTRUNIDABAT,
      VW.ID_PRODMATEEMBA,
      VW.DT_MULTPROGPROD,
      VW.NR_PRIOMULTPROGPROD,
      VW.ID_CLIENTE,
      VW.ID_PEDIVEND,
      VW.GN_TAGMULTPROGPROD,
      VW.ID_ETIQUETA,
      VW.QN_ALERANTEEXPRMULTPROGPROD,
      VW.FL_BLOQPRODEXCEMULTPROGPROD,
      VW.FL_EXIBPAINCONTMULTPROGPROD,
      VW.FL_ALERANTEEXPRMULTPROGPROD,
      VW.FX_MULTPROGPROD,
      VW.ID_UNIDABAT,
      VW.NR_SEQUTURNMULTPROGPROD,
      VW.ID_SIMUPROGPROD,
      VW.QN_CAIXMULTPROGPROD,
	    CASE WHEN VW.FL_ULTIREGIMULTPROGPROD <> 'S'
              AND VW.QN_CAIXTOTAREGIPROD >= VW.QN_CAIXACUMMULTPROGPROD THEN VW.QN_CAIXMULTPROGPROD
          WHEN VW.QN_CAIXTOTAREGIPROD <= (VW.QN_CAIXACUMMULTPROGPROD - VW.QN_CAIXMULTPROGPROD) THEN 0
          ELSE VW.QN_CAIXTOTAREGIPROD - (VW.QN_CAIXACUMMULTPROGPROD - VW.QN_CAIXMULTPROGPROD)
        END QN_CAIXATENMULTPROGPROD,       
        VW.QN_PESOMULTPROGPROD,
        CASE WHEN VW.FL_ULTIREGIMULTPROGPROD <> 'S'
              AND VW.QN_PESOTOTAREGIPROD >= VW.QN_PESOACUMMULTPROGPROD THEN VW.QN_PESOMULTPROGPROD
          WHEN VW.QN_PESOTOTAREGIPROD <= (VW.QN_PESOACUMMULTPROGPROD - VW.QN_PESOMULTPROGPROD) THEN 0
          ELSE VW.QN_PESOTOTAREGIPROD - (VW.QN_PESOACUMMULTPROGPROD - VW.QN_PESOMULTPROGPROD)
        END QN_PESOATENMULTPROGPROD,
	   VW.IE_MULTPROGPROD,
       VW.ID_CENTCUST,
       VW.DT_ELABMULTPROGPROD,
	   VW.QN_CAIXSOLIMULTPROGPROD
  FROM VW
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE  NAME = 'VW_MATERIAL_EMBALAGEM' AND TYPE = 'V')
    DROP VIEW VW_MATERIAL_EMBALAGEM
//    
CREATE VIEW [dbo].[VW_MATERIAL_EMBALAGEM]                
 (EMPRESA,                               
  FILIAL,
  ID_MATEEMBA,                                                            
  ID_PRODMATEEMBA,
  NM_PRODMATEEMBA,
  NM_PRODREDUMATEEMBA,
  ID_MATERIAL,
  ID_EMBALAGEM,
  QN_CAPAMINIMATEEMBA,
  QN_CAPAMAXIMATEEMBA,
  QN_CAPAPADRMATEEMBA,
  QN_CAPAMEDIMATEEMBA,
  QN_CAPAPADRUNIDMATEEMBA,
  QN_CAPAMEDIUNIDMATEEMBA,
  ID_INTEMATEEMBA,
  PC_TOLEMINIMATEEMBA,
  PC_TOLEMAXIMATEEMBA,
  ID_VALIMATEEMBA,
  FL_ESPEMATEEMBA,
  FL_ESTAMATEEMBA,
  QN_PESOMINIMATEEMBA,
  QN_PESOMAXIMATEEMBA,
  PC_TEMPMATEEMBA,
  ID_TIPOAVE,
  PC_QUEBMATEEMBA,
  IE_MATEEMBA,
  ID_MARCA,
  FL_TIPODESTCUSTMATEEMBA,
  FL_IDENPRODMATEEMBA,
  ID_FAMIPROD,
  ID_OBSECERT,
  GN_CODIEA13MATEEMBA,
  GN_CODIEA14MATEEMBA,
  FL_MODAIDENMATEEMBA,
  NM_SIGLPRODMATEEMBA,
  GN_NUMESENAMATEEMBA,
  ID_CLASEXTE,
  GN_DESCETIQLINHUMMATEEMBA,
  GN_DESCETIQLINHDOISMATEEMBA,
  GN_DESCETIQLINHTRESMATEEMBA,
  ID_TEXTETIQ,
  ID_INSTCONS,
  FL_IMPRPRODCERTMATEEMBA,
  ID_UNIDMEDIFATUMATEEMBA,
  FL_TIPOEXPEMATEEMBA,
  FL_ATIVMATEEMBA,
  FL_PRODMATEEMBA,
  QN_TARACOMPMATEEMBA,
  QN_ETIQEXPEMATEEMBA,
  FL_PESAESTAMATEEMBA,
  FL_REPEMATEEMBA,
  NR_REGIMINIAGRIMATEEMBA,
  NM_REGIMINIAGRIMATEEMBA,
  QN_FORMPALEMATEEMBA,
  FL_CONTTUNEMATEEMBA,
  ID_MODEETIQIMPRMATEEMBA,
  ID_MODEETIQIMPRPREMATEEMBA,
  ID_MODEETIQCOMPMATEEMBA,
  FX_MATEEMBA,
  NM_PACKMATEEMBA,
  FL_STATSINCMATEEMBA,
  NR_ESTETUNEMATEEMBA,
  FL_SIMUPRODMATEEMBA,
  FL_VALIRESTPESODEFIMATEEMBA,
  FL_TRATLIMIPESOMATEEMBA,
  ID_MODELOTERASTFILISIST,
  QN_INICPENDMATEEMBA,
  FL_PRODBATCMATEEMBA,
  FL_SEMIACABMATEEMBA,
  FL_STATMATEPRIMMATEEMBA,
  FL_DESMAUTOMATEEMBA,
  QN_UNIDDESMAUTOMATEEMBA,
  ID_PRODDESMAUTOMATEEMBA,
  FL_AGRUDIVIFATUMATEEMBA,
  QN_CAPAPADRUNIDTLMATEEMBA,
  ID_MODEETIQPRIMMATEEMBA,
  NM_PRODFILIMATEEMBA,
  ID_IMAGETIQ,
  GN_RECEMATEEMBAFILI, 
  NR_LOG1MATEEMBAFILI, 
  NR_LOG2MATEEMBAFILI, 
  NR_LOG3MATEEMBAFILI, 
  NR_CODIBAR1MATEEMBAFILI, 
  NR_CODIBAR2MATEEMBAFILI, 
  NR_CODIBAR3MATEEMBAFILI, 
  NR_LAY1MATEEMBAFILI, 
  NR_LAY2MATEEMBAFILI, 
  GN_CODIBAR1MATEEMBAFILI, 
  GN_CODIBAR2MATEEMBAFILI, 
  GN_CODIBAR3MATEEMBAFILI, 
  ID_CLASGRAD, 
  GN_GRADMATEEMBAFILI,
  FL_TIPOGRADMATEEMBAFILI,  
  FL_BINMATEEMBAFILI, 
  ID_VALONUTR,
  FL_AUTOENDEMATEEMBAFILI,
  ID_PROCLINH,
  ID_PROCLINH_DESTREPR, 
  ID_PROCLINH_DESTPROC,
  FL_SEPAPRODMATEEMBAFILI,
  QN_PRODEMBAMATEEMBA,
  FL_QTDEINDIMATEEMBA,
  QN_PRODEMBAATUAMATEEMBA,
  PC_QUEBAUTOMATEEMBA,
  FL_OBRIPALEPESAGRUMATEEMBA,
  PC_TOLEPESOPESAGRUMATEEMBA,
  FL_RASTMATESECUMATEEMBA,
  HR_TEMPQUEBAUTOMATEEMBA,
  ID_ALMOXARIFADO,
  FL_EXIGTARAPRODMATEEMBAFILI,
  FL_PPCPMATEEMBA,
  PC_GIVEAWAYMATEEMBA,
  QN_MINIPRODEMBAMATEEMBA,
  ID_UNIDMEDI_UNIDMATEEMBA,
  QN_PECAPRODMATEEMBA,
  ID_UNIDMEDI_PECAMATEEMBA,
  QN_DIASTOLEDTPADRMATEEMBA,
  QN_DATATOLEDTPADRMATEEMBA,
  ID_GRUPDEMA,
  FL_UTILFORMPPCPMATEEMBA,
  QN_LIMIDEMAPPCPMATEEMBA,
  PC_MINIDEMAPPCPMATEEMBA,
  ID_CENTCUST,
  ID_ESTRMATEEMBAFILI,
  NM_ESTRMATEEMBAFILI,
  ID_AREAPROD,
  FL_CONDMATEEMBA,
  QN_ANIMEMBAMATEEMBA,
  ID_ALMOXARIFADO_PALETIZACAO,
  QN_ETIQPICKPEDIMATEEMBA,
  FL_UTILALMOPADTUNEMATEEMBA,
  FL_ALTEPRODPALEMATEEMBA,
  FL_RESTPRODMATEEMBA,
  FL_UTILDATAINDIMATEEMBA,
  FL_PERMTURNDIFEMATEEMBA,
  ID_MODEETIQPALEMATEEMBA,
  FL_EXIGLAUDMATEEMBA,
  ID_PRIMFICHPALEMATEEMBA,
  ID_SEGUFICHPALEMATEEMBA,
  FL_CALCCUSTMATEEMBA,
  FL_PALEPESAAGRUMATEEMBA,
  FL_PALEREGIPRODMATEEMBA,
  ID_EMBAPALEPRODMATEEMBA,
  FL_LOCADESMAUTOMATEEMBA,
  ID_QUEBPROGNORMMATEEMBA,
  ID_QUEBPROGCONGMATEEMBA,
  FL_SEQUAUTOPRODMATEEMBA,
  ID_MOTISEQUAUTOMATEEMBA,
  FL_INFOPESOSIMUMATEEMBA,
  FL_UNDTIPOPESODEFIMATEEMBA,
  QN_UNDCAPANOMIDEFIMATEEMBA,
  PC_UNDTOLEMINIDEFIMATEEMBA,
  PC_UNDTOLEMAXIDEFIMATEEMBA,
  QN_UNDTARADEFIMATEEMBA,
  ID_MATEEMBAFILI,
  ID_MATEEMBALOCA,
  FL_PALEPESAMATEEMBA,
  FL_REGIPRODPALEMATEEMBA,
  FL_INTEPALEPRODMATEEMBAFILI,
  FL_EXIGLOTEEMBUMATEEMBA,
  FL_CONTEXCEPALEMATEEMBA,
  FL_RESTEMBAPALEMATEEMBA,
  NR_LIMIDATAPADRMATEEMBA,
  NR_LIMIDATARETRMATEEMBA,
  FL_PRODCONTCORTMATEEMBA,
  FL_CONSRENDMATEEMBA,
  FL_ESTOPRODUDESTMATEEMBA,
  ID_GRUPPROD,
  QN_REPEREGIPRODMATEEMBA,
  FL_AGRUPRODPALEMATEEMBA,
  FL_UTILEMBAREUTMATEEMBA,
  FL_LOTEEMBUPAAUMATEEMBA,
  FL_PRODCONTMATEEMBA,
  PC_INJEMATEEMBA) AS
SELECT ISNULL(MEF.EMPRESA, (SELECT EMPRESA FROM EMPRESA_FILIAL_LOCAL)) EMPRESA,
       CAST(ISNULL(MEF.FILIAL, (SELECT FILIAL    FROM EMPRESA_FILIAL_LOCAL)) AS NUMERIC(5)) FILIAL,
       MED.ID_DEFIMATEEMBA,
       MED.ID_PRODDEFIMATEEMBA,
       MED.NM_PRODDEFIMATEEMBA,
       MED.NM_PRODREDUDEFIMATEEMBA,
       MED.ID_MATERIAL,
       MED.ID_EMBALAGEM,
       MED.QN_CAPAMINIDEFIMATEEMBA,
       MED.QN_CAPAMAXIDEFIMATEEMBA,
       MED.QN_CAPAPADRDEFIMATEEMBA,
       MED.QN_CAPAMEDIDEFIMATEEMBA,
       MED.QN_CAPAPADRUNIDDEFIMATEEMBA,
       MED.QN_CAPAMEDIUNIDDEFIMATEEMBA,
       MED.ID_INTEDEFIMATEEMBA,
       COALESCE(MEF.PC_TOLEMINIMATEEMBAFILI, MED.PC_TOLEMINIDEFIMATEEMBA) PC_TOLEMINIDEFIMATEEMBA,
       COALESCE(MEF.PC_TOLEMAXIMATEEMBAFILI, MED.PC_TOLEMAXIDEFIMATEEMBA) PC_TOLEMAXIDEFIMATEEMBA,
       MED.ID_VALIMATEEMBA,
       MED.FL_ESPEDEFIMATEEMBA,
       MED.FL_ESTADEFIMATEEMBA,
       MED.QN_PESOMINIDEFIMATEEMBA,
       MED.QN_PESOMAXIDEFIMATEEMBA,
       COALESCE(COALESCE(MEF.PC_TEMPMATEEMBAFILI,MED.PC_TEMPDEFIMATEEMBA),0) PC_TEMPMATEEMBA,
       MED.ID_TIPOAVE,
       MED.PC_QUEBDEFIMATEEMBA,
       MED.IE_DEFIMATEEMBA,
       MED.ID_MARCA,
	   MED.FL_TIPODESTCUSTDEFIMATEEMBA,
       MEF.FL_IDENPRODMATEEMBAFILI,
       MED.ID_FAMIPROD,
       MEF.ID_OBSECERT,
       MED.GN_CODIEA13DEFIMATEEMBA,
       MED.GN_CODIEA14DEFIMATEEMBA,
       MEF.FL_MODAIDENMATEEMBAFILI,
       MED.NM_SIGLPRODDEFIMATEEMBA,
       MED.GN_NUMESENADEFIMATEEMBA,
       MED.ID_CLASEXTE,
       MED.GN_DESCETIQLINH1DEFIMATEEMBA,
       MED.GN_DESCETIQLINH2DEFIMATEEMBA,
       MED.GN_DESCETIQLINH3DEFIMATEEMBA,
       MED.ID_TEXTETIQ,
       MED.ID_INSTCONS,
       MED.FL_IMPRPRODCERTDEFIMATEEMBA,
       MED.ID_UNIDMEDI_FATUDEFIMATEEMBA,
       MEF.FL_TIPOEXPEMATEEMBAFILI,
       MEF.FL_ATIVMATEEMBAFILI,
       MEF.FL_PRODMATEEMBAFILI,
       MEL.QN_TARACOMPMATEEMBALOCA,
       MEF.QN_ETIQEXPEMATEEMBAFILI,
       MEF.FL_PESAESTAMATEEMBAFILI,
       MEF.FL_REPEMATEEMBAFILI,
       MEF.NR_REGIMINIAGRIMATEEMBAFILI,
       MEF.NM_REGIMINIAGRIMATEEMBAFILI,
       MEF.QN_FORMPALEMATEEMBAFILI,
       MEF.FL_CONTTUNEMATEEMBAFILI,
       COALESCE(MEF.ID_MODEETIQIMPRMATEEMBAFILI, MED.ID_MODEETIQIMPRMATEEMBADEFI) ID_MODEETIQIMPRMATEEMBAFILI,
       COALESCE(MEF.ID_MODEETIQIMPRPREMATEEMBAFILI, MED.ID_MODEETIQIMPRPREMATEEMBADEFI) ID_MODEETIQIMPRPREMATEEMBAFILI,
       MEF.ID_MODEETIQCOMPMATEEMBAFILI, 
       MEF.FX_MATEEMBAFILI,
       MED.NM_PACKDEFIMATEEMBA,
       ISNULL(MEL.FL_STATSINCMATEEMBALOCA ,MEF.FL_STATSINCMATEEMBAFILI) AS FL_STATSINCMATEEMBAFILI,
       MEL.NR_ESTETUNEMATEEMBALOCA,
       MEF.FL_SIMUPRODMATEEMBAFILI,
       MED.FL_VALIRESTPESODEFIMATEEMBA,
       MEF.FL_TRATLIMIPESOMATEEMBAFILI,
       MEF.ID_MODELOTERASTFILISIST,
       MEF.QN_INICPENDMATEEMBAFILI,
       COALESCE(MED.FL_PRODBATCDEFIMATEEMBA, 'N') FL_PRODBATCDEFIMATEEMBA,
       COALESCE(MED.FL_SEMIACABDEFIMATEEMBA, 'N') FL_SEMIACABDEFIMATEEMBA,
       COALESCE(MEF.FL_STATMATEPRIMMATEEMBAFILI, 'LB') FL_STATMATEPRIMMATEEMBAFILI,
       COALESCE(MEF.FL_DESMAUTOMATEEMBAFILI, 'N') FL_DESMAUTOMATEEMBAFILI,
       MEF.QN_UNIDDESMAUTOMATEEMBAFILI QN_UNIDDESMAUTOMATEEMBAFILI,
       MEF.ID_PRODDESMAUTOMATEEMBAFILI ID_PRODDESMAUTOMATEEMBAFILI,
       MED.FL_AGRUDIVIFATUDEFIMATEEMBA,
       MED.QN_CAPAPADRUNIDTLDEFIMATEEMBA,
       COALESCE(MEF.ID_MODEETIQPRIMMATEEMBAFILI, MED.ID_MODEETIQPRIMMATEEMBADEFI) ID_MODEETIQPRIMMATEEMBAFILI,
       MEF.NM_PRODFILIMATEEMBA,
       MEF.ID_IMAGETIQ,
       MEF.GN_RECEMATEEMBAFILI, 
       MEF.NR_LOG1MATEEMBAFILI, 
       MEF.NR_LOG2MATEEMBAFILI, 
       MEF.NR_LOG3MATEEMBAFILI, 
       MEF.NR_CODIBAR1MATEEMBAFILI, 
       MEF.NR_CODIBAR2MATEEMBAFILI, 
       MEF.NR_CODIBAR3MATEEMBAFILI, 
       MEF.NR_LAY1MATEEMBAFILI, 
       MEF.NR_LAY2MATEEMBAFILI, 
       MEF.GN_CODIBAR1MATEEMBAFILI, 
       MEF.GN_CODIBAR2MATEEMBAFILI, 
       MEF.GN_CODIBAR3MATEEMBAFILI, 
       MEF.ID_CLASGRAD, 
       MEF.NM_CLASGRAD,
       COALESCE(MEF.FL_TIPOCLASGRAD, 'C') FL_TIPOCLASGRAD,     
       MEF.FL_BINMATEEMBAFILI, 
       MED.ID_VALONUTR,
       MEF.FL_AUTOENDEMATEEMBAFILI,
       MEF.ID_PROCLINH,
       MEF.ID_PROCLINH_DESTREPR, 
       MEF.ID_PROCLINH_DESTPROC,
       MEF.FL_SEPAPRODMATEEMBAFILI,
       COALESCE(MEF.QN_PRODEMBAMATEEMBAFILI, MED.QN_PRODEMBAMATEEMBADEFI) QN_PRODEMBAMATEEMBAFILI,
       MEF.FL_QTDEINDIMATEEMBAFILI,
       MEL.QN_PRODEMBAATUAMATEEMBALOCA,
       MEF.PC_QUEBMATEEMBAFILI,
       MEF.FL_OBRIPALEPESAGRUMATEEMBAFILI,
       MEF.PC_TOLEPESOPESAGRUMATEEMBAFILI,
       MEF.FL_RASTMATESECUMATEEMBAFILI,
       MEF.HR_TEMPQUEBAUTOMATEEMBAFILI,
       MEF.ID_ALMOXARIFADO,
       COALESCE(MEF.FL_EXIGTARAPRODMATEEMBAFILI, 'N') FL_EXIGTARAPRODMATEEMBAFILI,
       COALESCE(MEF.FL_PPCPMATEEMBAFILI, 'S') FL_PPCPMATEEMBAFILI,
       COALESCE(MEF.PC_GIVEAWAYMATEEMBAFILI, 0) PC_GIVEAWAYMATEEMBAFILI,
       COALESCE(MEL.QN_MINIPRODMATEEMBALOCA, 0) QN_MINIPRODMATEEMBALOCA,
       COALESCE(MEF.ID_UNIDMEDI_UNIDMATEEMBAFILI, MED.ID_UNIDMEDI_UNIDMATEEMBADEFI),
       COALESCE(MEF.QN_PECAPRODMATEEMBAFILI, MED.QN_PECAPRODMATEEMBADEFI),
       COALESCE(MEF.ID_UNIDMEDI_PECAMATEEMBAFILI, MED.ID_UNIDMEDI_PECAMATEEMBADEFI),
       MEF.QN_DIASTOLEDTPADRMATEEMBAFILI,
       MEF.QN_DATATOLEDTPADRMATEEMBAFILI,
       MED.ID_GRUPDEMA,
       COALESCE(MEF.FL_UTILFORMPPCPMATEEMBAFILI, 'N') FL_UTILFORMPPCPMATEEMBAFILI,
       COALESCE(MEF.QN_LIMIDEMAPPCPMATEEMBAFILI, 0) QN_LIMIDEMAPPCPMATEEMBAFILI,
       COALESCE(MEF.PC_MINIDEMAPPCPMATEEMBAFILI, 100) PC_MINIDEMAPPCPMATEEMBAFILI,
       MEF.ID_CENTCUST,
       COALESCE(MEF.ID_ESTRMATEEMBAFILI, 0) ID_ESTRMATEEMBAFILI,
       MEF.NM_ESTRMATEEMBAFILI,
       MEF.ID_AREAPROD,
       MED.FL_CONDDEFIMATEEMBA,
       MEF.QN_ANIMEMBAMATEEMBAFILI,
	   MEF.ID_ALMOXARIFADO_PALETIZACAO,
       MEF.QN_ETIQPICKPEDIMATEEMBAFILI,
	   MEF.FL_UTILALMOPADTUNEMATEEMBAFILI,
	   COALESCE(MEF.FL_ALTEPRODPALEMATEEMBAFILI, MED.FL_ALTEPRODPALEDEFIMATEEMBA) FL_ALTEPRODPALEMATEEMBA,
       COALESCE(MEF.FL_RESTPRODMATEEMBAFILI, 'N') FL_RESTPRODMATEEMBAFILI,
       COALESCE(MEF.FL_UTILDATAINDIMATEEMBAFILI, 'N') FL_UTILDATAINDIMATEEMBAFILI,
       COALESCE(MEF.FL_PERMTURNDIFEMATEEMBAFILI, 'S') FL_PERMTURNDIFEMATEEMBAFILI,
       MEF.ID_MODEETIQPALEMATEEMBAFILI,
       COALESCE(MEF.FL_EXIGLAUDMATEEMBAFILI, 'N') FL_EXIGLAUDMATEEMBAFILI,
       MEF.ID_PRIMFICHPALEMATEEMBAFILI,
       MEF.ID_SEGUFICHPALEMATEEMBAFILI,
	   COALESCE(MED.FL_CALCCUSTDEFIMATEEMBA, case when FL_SEMIACABDEFIMATEEMBA = 'N' then 'S' else 'N'end) FL_CALCCUSTDEFIMATEEMBA,
       COALESCE(MEF.FL_PALEPESAAGRUMATEEMBAFILI, 'N') FL_PALEPESAAGRUMATEEMBAFILI,
	   COALESCE(MEF.FL_PALEREGIPRODMATEEMBAFILI, 'N') FL_PALEREGIPRODMATEEMBAFILI,
       MEF.ID_EMBAPALEPRODMATEEMBAFILI,
       MEF.FL_LOCADESMAUTOMATEEMBAFILI,
       MEF.ID_QUEBPROGNORMMATEEMBAFILI,
       MEF.ID_QUEBPROGCONGMATEEMBAFILI,
       MEF.FL_SEQUAUTOPRODMATEEMBAFILI,
       MEF.ID_MOTISEQUAUTOMATEEMBAFILI,
       COALESCE(MEF.FL_INFOPESOSIMUMATEEMBAFILI, 'N') FL_INFOPESOSIMUMATEEMBAFILI,
	   MED.FL_UNDTIPOPESODEFIMATEEMBA,
       MED.QN_UNDCAPANOMIDEFIMATEEMBA,
       MED.PC_UNDTOLEMINIDEFIMATEEMBA,
       MED.PC_UNDTOLEMAXIDEFIMATEEMBA,
       MED.QN_UNDTARADEFIMATEEMBA,
	   MEF.ID_MATEEMBAFILI,
       MEL.ID_MATEEMBALOCA,
       COALESCE(MEF.FL_PALEPESAMATEEMBAFILI, 'N') FL_PALEPESAMATEEMBAFILI,
       COALESCE(MEF.FL_REGIPRODPALEMATEEMBAFILI, 'N') FL_REGIPRODPALEMATEEMBAFILI,
       COALESCE(MEF.FL_INTEPALEPRODMATEEMBAFILI, 'N') FL_INTEPALEPRODMATEEMBAFILI,
       COALESCE(MEF.FL_EXIGLOTEEMBUMATEEMBAFILI, 'N') FL_EXIGLOTEEMBUMATEEMBAFILI,
       COALESCE(MEF.FL_CONTEXCEPALEMATEEMBAFILI, 'S') FL_CONTEXCEPALEMATEEMBAFILI,
	   COALESCE(MEF.FL_RESTEMBAPALEMATEEMBAFILI, 'N') FL_RESTEMBAPALEMATEEMBAFILI,
       MEF.NR_LIMIDATAPADRMATEEMBAFILI,
       MEF.NR_LIMIDATARETRMATEEMBAFILI,
       MED.FL_PRODCONTCORTDEFIMATEEMBA,
	   COALESCE(MEF.FL_CONSRENDMATEEMBAFILI, 'S') AS FL_CONSRENDMATEEMBAFILI,
       COALESCE(MEF.FL_ESTOPRODUDESTMATEEMBAFILI, 'N') AS  FL_ESTOPRODUDESTMATEEMBAFILI,
       MEF.ID_GRUPPROD,
	   COALESCE(MEF.QN_REPEREGIPRODMATEEMBAFILI, 0) QN_REPEREGIPRODMATEEMBAFILI,
	   COALESCE(MED.FL_AGRUPRODPALEDEFIMATEEMBA, 'N') FL_AGRUPRODPALEDEFIMATEEMBA,
	   COALESCE(MEF.FL_UTILEMBAREUTMATEEMBAFILI, 'N') FL_UTILEMBAREUTMATEEMBAFILI,
	   COALESCE(MEF.FL_LOTEEMBUPAAUMATEEMBAFILI, 'N') FL_LOTEEMBUPAAUMATEEMBAFILI,
	   COALESCE(MEF.FL_PRODCONTMATEEMBAFILI, 'N') FL_PRODCONTMATEEMBAFILI,
	   MEF.PC_INJEMATEEMBAFILI
  FROM MATERIAL_EMBALAGEM_DEFINICAO MED  
       LEFT JOIN (SELECT MEF_1.EMPRESA,
                          MEF_1.FILIAL,
                          MEF_1.FL_IDENPRODMATEEMBAFILI,
                          MEF_1.ID_OBSECERT,
                          MEF_1.FL_MODAIDENMATEEMBAFILI,
                          MEF_1.FL_TIPOEXPEMATEEMBAFILI,
                          MEF_1.FL_ATIVMATEEMBAFILI,
                          MEF_1.FL_PRODMATEEMBAFILI,
                          MEF_1.QN_ETIQEXPEMATEEMBAFILI,
                          MEF_1.FL_PESAESTAMATEEMBAFILI,
                          MEF_1.FL_REPEMATEEMBAFILI,
                          MEF_1.NR_REGIMINIAGRIMATEEMBAFILI,
                          MEF_1.NM_REGIMINIAGRIMATEEMBAFILI,
                          MEF_1.QN_FORMPALEMATEEMBAFILI,
                          MEF_1.FL_CONTTUNEMATEEMBAFILI,
                          MEF_1.ID_MODEETIQIMPRMATEEMBAFILI,
                          MEF_1.ID_MODEETIQIMPRPREMATEEMBAFILI,
                          MEF_1.ID_MODEETIQCOMPMATEEMBAFILI, 
                          MEF_1.FX_MATEEMBAFILI,
                          MEF_1.FL_STATSINCMATEEMBAFILI,
                          MEF_1.FL_SIMUPRODMATEEMBAFILI,
                          MEF_1.ID_DEFIMATEEMBA,
                          MEF_1.ID_MATEEMBAFILI,
                          MEF_1.FL_TRATLIMIPESOMATEEMBAFILI,
                          MEF_1.ID_MODELOTERASTFILISIST,
                          MEF_1.QN_INICPENDMATEEMBAFILI,
                          MEF_1.FL_STATMATEPRIMMATEEMBAFILI,
                          MEF_1.FL_DESMAUTOMATEEMBAFILI,
                          MEF_1.QN_UNIDDESMAUTOMATEEMBAFILI,
                          MEF_1.ID_PRODDESMAUTOMATEEMBAFILI,
                          MEF_1.ID_MODEETIQPRIMMATEEMBAFILI,
                          MEF_1.NM_PRODFILIMATEEMBA,
                          MEF_1.ID_IMAGETIQ,
                          MEF_1.GN_RECEMATEEMBAFILI,                                     
                          MEF_1.NR_LOG1MATEEMBAFILI,                                         
                          MEF_1.NR_LOG2MATEEMBAFILI,                                     
                          MEF_1.NR_LOG3MATEEMBAFILI,                                 
                          MEF_1.NR_CODIBAR1MATEEMBAFILI,                                 
                          MEF_1.NR_CODIBAR2MATEEMBAFILI,                             
                          MEF_1.NR_CODIBAR3MATEEMBAFILI,                                 
                          MEF_1.NR_LAY1MATEEMBAFILI,                                     
                          MEF_1.NR_LAY2MATEEMBAFILI,                                     
                          MEF_1.GN_CODIBAR1MATEEMBAFILI,                                 
                          MEF_1.GN_CODIBAR2MATEEMBAFILI,                             
                          MEF_1.GN_CODIBAR3MATEEMBAFILI,                                 
                          MEF_1.ID_CLASGRAD,        
                          GC.NM_CLASGRAD,                           
                          GC.FL_TIPOCLASGRAD,                           
                          MEF_1.FL_BINMATEEMBAFILI,
                          MEF_1.FL_AUTOENDEMATEEMBAFILI,
                          MEF_1.ID_PROCLINH,
                          MEF_1.ID_PROCLINH_DESTREPR, 
                          MEF_1.ID_PROCLINH_DESTPROC,
                          MEF_1.FL_SEPAPRODMATEEMBAFILI,
                          MEF_1.QN_PRODEMBAMATEEMBAFILI,
                          MEF_1.FL_QTDEINDIMATEEMBAFILI,
                          MEF_1.PC_QUEBMATEEMBAFILI,
                          MEF_1.FL_OBRIPALEPESAGRUMATEEMBAFILI,
                          MEF_1.PC_TOLEPESOPESAGRUMATEEMBAFILI,
                          MEF_1.FL_RASTMATESECUMATEEMBAFILI,
                          MEF_1.PC_TOLEMINIMATEEMBAFILI,
                          MEF_1.PC_TOLEMAXIMATEEMBAFILI,
                          MEF_1.HR_TEMPQUEBAUTOMATEEMBAFILI,
                          MEF_1.ID_ALMOXARIFADO,
                          MEF_1.FL_EXIGTARAPRODMATEEMBAFILI,
                          MEF_1.FL_PPCPMATEEMBAFILI,
                          MEF_1.PC_GIVEAWAYMATEEMBAFILI,
                          MEF_1.ID_UNIDMEDI_UNIDMATEEMBAFILI,
                          MEF_1.QN_PECAPRODMATEEMBAFILI,
                          MEF_1.ID_UNIDMEDI_PECAMATEEMBAFILI,
                          MEF_1.QN_DIASTOLEDTPADRMATEEMBAFILI,
                          MEF_1.QN_DATATOLEDTPADRMATEEMBAFILI,
                          MEF_1.FL_UTILFORMPPCPMATEEMBAFILI,
                          MEF_1.QN_LIMIDEMAPPCPMATEEMBAFILI,
                          MEF_1.PC_MINIDEMAPPCPMATEEMBAFILI,
                          MEF_1.ID_CENTCUST,
                          MEF_1.ID_ESTRMATEEMBAFILI,
                          MEF_1.NM_ESTRMATEEMBAFILI,
                          MEF_1.ID_AREAPROD,
                          MEF_1.QN_ANIMEMBAMATEEMBAFILI,
						  MEF_1.ID_ALMOXARIFADO_PALETIZACAO,
                          MEF_1.QN_ETIQPICKPEDIMATEEMBAFILI,
						  MEF_1.FL_UTILALMOPADTUNEMATEEMBAFILI,
						  MEF_1.FL_ALTEPRODPALEMATEEMBAFILI,
                          MEF_1.FL_RESTPRODMATEEMBAFILI,
                          MEF_1.FL_UTILDATAINDIMATEEMBAFILI,
                          MEF_1.FL_PERMTURNDIFEMATEEMBAFILI,
                          MEF_1.ID_MODEETIQPALEMATEEMBAFILI,
                          MEF_1.FL_EXIGLAUDMATEEMBAFILI,
                          MEF_1.ID_PRIMFICHPALEMATEEMBAFILI,
                          MEF_1.ID_SEGUFICHPALEMATEEMBAFILI,
                          MEF_1.FL_PALEPESAAGRUMATEEMBAFILI,
						  MEF_1.FL_PALEREGIPRODMATEEMBAFILI,
                          MEF_1.ID_EMBAPALEPRODMATEEMBAFILI,
                          MEF_1.FL_LOCADESMAUTOMATEEMBAFILI,
                          MEF_1.ID_QUEBPROGNORMMATEEMBAFILI,
                          MEF_1.ID_QUEBPROGCONGMATEEMBAFILI,
                          MEF_1.FL_SEQUAUTOPRODMATEEMBAFILI,
                          MEF_1.ID_MOTISEQUAUTOMATEEMBAFILI,
                          COALESCE(MEF_1.FL_INFOPESOSIMUMATEEMBAFILI, 'N') FL_INFOPESOSIMUMATEEMBAFILI,
                          MEF_1.FL_PALEPESAMATEEMBAFILI,
                          MEF_1.FL_REGIPRODPALEMATEEMBAFILI,
                          MEF_1.FL_INTEPALEPRODMATEEMBAFILI,
                          MEF_1.FL_EXIGLOTEEMBUMATEEMBAFILI,
                          MEF_1.FL_CONTEXCEPALEMATEEMBAFILI,
						  MEF_1.FL_RESTEMBAPALEMATEEMBAFILI,
                          MEF_1.NR_LIMIDATAPADRMATEEMBAFILI,
                          MEF_1.NR_LIMIDATARETRMATEEMBAFILI,
                          MEF_1.PC_TEMPMATEEMBAFILI,
						  MEF_1.FL_CONSRENDMATEEMBAFILI,
                          MEF_1.FL_ESTOPRODUDESTMATEEMBAFILI,
                          MEF_1.ID_GRUPPROD,
						  MEF_1.QN_REPEREGIPRODMATEEMBAFILI,
						  MEF_1.FL_UTILEMBAREUTMATEEMBAFILI,
						  MEF_1.FL_LOTEEMBUPAAUMATEEMBAFILI,
						  MEF_1.FL_PRODCONTMATEEMBAFILI,
						  MEF_1.PC_INJEMATEEMBAFILI
                     FROM MATERIAL_EMBALAGEM_FILIAL MEF_1 
                     LEFT OUTER JOIN GRADE_CLASSIFICADORA GC
                       ON (MEF_1.ID_CLASGRAD = GC.ID_CLASGRAD)    
                    WHERE MEF_1.FILIAL = ISNULL((SELECT FILIAL    
                                                   FROM SISTEMA_USUARIO_SESSAO 
                                                  WHERE SERIAL# = CAST((SELECT @@SPID AS SERIAL#) AS CHAR(50))), 
                                                (SELECT FILIAL FROM EMPRESA_FILIAL_LOCAL))) MEF ON MED.ID_DEFIMATEEMBA = MEF.ID_DEFIMATEEMBA
  LEFT OUTER JOIN (SELECT MEL_1.ID_MATEEMBALOCA,
                          MEL_1.QN_TARACOMPMATEEMBALOCA,
                          MEL_1.NR_ESTETUNEMATEEMBALOCA,
                          MEL_1.ID_MATEEMBAFILI,
                          MEL_1.QN_PRODEMBAATUAMATEEMBALOCA,
                          MEL_1.FL_STATSINCMATEEMBALOCA,
                          MEL_1.QN_MINIPRODMATEEMBALOCA
                     FROM MATERIAL_EMBALAGEM_LOCAL MEL_1 
                    WHERE MEL_1.FILIAL = ISNULL((SELECT FILIAL
                                                   FROM SISTEMA_USUARIO_SESSAO 
                                                  WHERE SERIAL# = CAST((SELECT @@SPID AS SERIAL#) AS CHAR(50))), 
                                                (SELECT FILIAL FROM EMPRESA_FILIAL_LOCAL))) MEL ON MEF.ID_MATEEMBAFILI = MEL.ID_MATEEMBAFILI
//

ALTER TABLE TMP_BATCPROD ADD TMP_PERIODO AS FORMAT(DT_BATCPROD, 'MM/yyyy')
//

IF EXISTS (SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'VW_PRO166' AND TYPE = 'V') 
BEGIN 
  DROP VIEW VW_PRO166
END
//  

CREATE VIEW VW_PRO166 AS
SELECT 'PRO166' aS RELATORIO,
       VW_BATCH.EMPRESA, 
	   VW_BATCH.FILIAL,
       VW_BATCH.ID_MATERIAL,
       VW_BATCH.ID_PRODMATEEMBA,
       VW_BATCH.NM_MATEPRIMBATCPROD,
       VW_BATCH.IE_MATERIAL,
       VW_BATCH.SG_UNIDMEDI,
       SUM(VW_BATCH.QN_PESOBATCPROD) AS QN_PESOBATCPROD,
       MATERIAL_PRECO.VL_VALOMATE,
       SUM(VW_BATCH.QN_PESOBATCPROD * MATERIAL_PRECO.VL_VALOMATE) as VALOR_CONSUMIDO,
       VW_BATCH.NM_CLASMATE,                                
       VW_BATCH.NM_PERIODO

FROM (

      SELECT PB.EMPRESA, 
	         PB.FILIAL,
	         PB.DT_PADRBATCPROD DT_PADRPROD,
             PB.NR_BATCPROD,
             case when coalesce(PBMP.ID_MATERIAL,0) <> 0  
                  then PBMP.ID_MATERIAL
                  else ME.ID_MATERIAL
                  END ID_MATERIAL,
             COALESCE(PBMP.ID_PRODMATEEMBA, '') ID_PRODMATEEMBA,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN ME.NM_PRODMATEEMBA ELSE MA2.NM_MATERIAL END NM_MATEPRIMBATCPROD,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN UM1.SG_UNIDMEDI ELSE UM2.SG_UNIDMEDI END SG_UNIDMEDI,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MA1.IE_MATERIAL ELSE MA2.IE_MATERIAL END IE_MATERIAL,
             PB.ID_PROGPROD,
             COALESCE(PBP.QN_PESOPESABATCPROD, 0) QN_PESOBATCPROD,                                                   
             ME2.ID_PRODMATEEMBA ID_PRODUTO,     
             ME2.NM_PRODMATEEMBA,                                                      
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MC1.NM_CLASMATE ELSE MC2.NM_CLASMATE END NM_CLASMATE,
             'BT' GN_TIPOREGI,                                           
             PBP.NR_LOTEPESABATCPROD NR_NUMELOTE,
             CONVERT(DATETIME, CONVERT(CHAR(10), PB.DT_BATCPROD, 103), 103) DT_REGIPROD,
             PBP.ID_PESABATCPROD,
             PBP.ID_ALMOXARIFADO,                 
             ALMOXARIFADO.NM_ALMOXARIFADO,
             PB.FL_STATBATCPROD,                                                            
             PBP.ID_REPOPESABATCPROD,
             ME.ID_EMBALAGEM,                                         
             PBP.ID_REGIPROD,
             PB.NM_RECEBATCPROD,
             PB.ID_RECEBATCPROD,
             PB.NM_PERIODO,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MT1.NM_TIPOMATE ELSE MT2.NM_TIPOMATE END NM_TIPOMATE,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MCA1.NM_CATEMATE ELSE MCA2.NM_CATEMATE END NM_CATEMATE,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MS1.NM_SUBCMATE ELSE MS2.NM_SUBCMATE END NM_SUBCMATE,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MG1.NM_GRUPMATE ELSE MG2.NM_GRUPMATE END NM_GRUPMATE,
             'C' FL_TIPOMOVI,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN TM1.NM_TRATMATE ELSE TM2.NM_TRATMATE END NM_TRATMATE,
             PBMP.ID_PRIMMATEBATCPROD ID_TABEPRIN
             
        FROM PRODUCAO_BATCH_MATERIA_PRIMA PBMP
        JOIN PRODUCAO_BATCH PB ON PBMP.ID_BATCPROD = PB.ID_BATCPROD
        JOIN MATERIAL_EMBALAGEM ME ON PBMP.ID_PRODMATEEMBA = ME.ID_PRODMATEEMBA
        LEFT JOIN PRODUCAO_BATCH_PESAGEM PBP ON PBMP.ID_PRIMMATEBATCPROD = PBP.ID_PRIMMATEBATCPROD             
        LEFT JOIN MATERIAL MA1 ON ME.ID_MATERIAL = MA1.ID_MATERIAL
        LEFT JOIN UNIDADE_MEDIDA UM1 ON MA1.ID_UNIDMEDI = UM1.ID_UNIDMEDI
        LEFT JOIN MATERIAL MA2 ON PBMP.ID_MATERIAL = MA2.ID_MATERIAL
        LEFT JOIN UNIDADE_MEDIDA UM2 ON MA2.ID_UNIDMEDI = UM2.ID_UNIDMEDI
        LEFT JOIN MATERIAL_EMBALAGEM ME2 ON PB.ID_MATEEMBA = ME2.ID_MATEEMBA  
        LEFT JOIN MATERIAL_CLASSIFICACAO MC1 ON MA1.ID_CLASMATE = MC1.ID_CLASMATE
        LEFT JOIN MATERIAL_CLASSIFICACAO MC2 ON MA2.ID_CLASMATE = MC2.ID_CLASMATE
        LEFT JOIN ALMOXARIFADO ON ALMOXARIFADO.ID_ALMOXARIFADO = PBP.ID_ALMOXARIFADO
        LEFT JOIN MATERIAL_TIPO MT1 ON MA1.ID_TIPOMATE = MT1.ID_TIPOMATE
        LEFT JOIN MATERIAL_TIPO MT2 ON MA2.ID_TIPOMATE = MT2.ID_TIPOMATE
        LEFT JOIN MATERIAL_CATEGORIA MCA1 ON MCA1.ID_CATEMATE = MA1.ID_CATEMATE
        LEFT JOIN MATERIAL_CATEGORIA MCA2 ON MCA2.ID_CATEMATE = MA2.ID_CATEMATE
        LEFT JOIN MATERIAL_SUBCATEGORIA MS1 ON MS1.ID_SUBCMATE = MA1.ID_SUBCMATE
	    LEFT JOIN MATERIAL_SUBCATEGORIA MS2 ON MS2.ID_SUBCMATE = MA2.ID_SUBCMATE
        LEFT JOIN MATERIAL_GRUPO MG1 ON MG1.ID_GRUPMATE = MA1.ID_GRUPMATE 
        LEFT JOIN MATERIAL_GRUPO MG2 ON MG2.ID_GRUPMATE = MA2.ID_GRUPMATE
        LEFT JOIN MATERIAL_TRATAMENTO TM1 ON MA1.ID_TRATMATE = TM1.ID_TRATMATE
        LEFT JOIN MATERIAL_TRATAMENTO TM2 ON MA2.ID_TRATMATE = TM2.ID_TRATMATE
       WHERE (PB.FL_STATBATCPROD IN ('FE', 'FD'))

       UNION
                                                
      SELECT PB.EMPRESA, 
	         PB.FILIAL,
	         COALESCE(PB.DT_PADRBATCPROD, PP.DT_FINAPROGPROD) DT_PADRPROD,
             COALESCE(PB.NR_BATCPROD, '') NR_BATCPROD,
             case when coalesce(PBMA.ID_MATERIAL,0) <> 0  
                  then PBMA.ID_MATERIAL
                  else ME.ID_MATERIAL
                  END ID_MATERIAL,
             '' ID_PRODMATEEMBA,
             MA.NM_MATERIAL NM_MATEPRIMBATCPROD,
             UM.SG_UNIDMEDI,
             MA.IE_MATERIAL,
             PBMA.ID_PROGPROD,                                                                          
             COALESCE(PBMA.QN_CONSADICMATEBATCPROD, 0)* case when  FL_OPERCONSADICMATEBATCPROD = 'E' then -1 else 1 end  QN_PESOBATCPROD,
             CASE WHEN ME.ID_PRODMATEEMBA IS NOT NULL THEN ME.ID_PRODMATEEMBA ELSE ME2.ID_PRODMATEEMBA END ID_PRODUTO,
             CASE WHEN ME.ID_PRODMATEEMBA IS NOT NULL THEN ME.NM_PRODMATEEMBA ELSE ME2.NM_PRODMATEEMBA END NM_PRODMATEEMBA,
             MC.NM_CLASMATE,                             
             CASE WHEN ME.ID_PRODMATEEMBA IS NOT NULL THEN 'PT' ELSE 'BT' END GN_TIPOREGI,
             PBMA.NR_LOTEADICMATEBATCPROD NR_NUMELOTE,
             CONVERT(DATETIME, CONVERT(CHAR(10), PBMA.DT_PRODBATCADICMATEBATCPROD, 103), 103) DT_REGIPROD,
             NULL ID_PESABATCPROD,
             NULL ID_ALMOXARIFADO,
             NULL NM_ALMOXARIFADO,
             NULL FL_STATBATCPROD,
             NULL ID_REPOPESABATCPROD,
             NULL ID_EMBALAGEM,              
             NULL ID_REGIPROD,                                   
             PB.NM_RECEBATCPROD,
             PB.ID_RECEBATCPROD,
             COALESCE(PB.NM_PERIODO, PP.NM_PERIODO) NM_PERIODO,
             MT.NM_TIPOMATE,
             MCA.NM_CATEMATE,
             MS.NM_SUBCMATE,
             MG.NM_GRUPMATE,
             'C' FL_TIPOMOVI,
             MTR.NM_TRATMATE,
             PBMA.ID_ADICMATEBATCPROD ID_TABEPRIN
        FROM PRODUCAO_BATCH_MATERIAL_ADICIO PBMA                                         
             JOIN PRODUCAO_BATCH PB ON PBMA.ID_BATCPROD = PB.ID_BATCPROD
             JOIN MATERIAL_EMBALAGEM ME ON PBMA.ID_MATEEMBA = ME.ID_MATEEMBA
             LEFT JOIN PRODUCAO_PROGRAMACAO PP ON PBMA.ID_PROGPROD = PP.ID_PROGPROD
             LEFT JOIN MATERIAL MA ON PBMA.ID_MATERIAL = MA.ID_MATERIAL
             LEFT JOIN UNIDADE_MEDIDA UM ON MA.ID_UNIDMEDI = UM.ID_UNIDMEDI               
             LEFT JOIN MATERIAL_CLASSIFICACAO MC ON MA.ID_CLASMATE = MC.ID_CLASMATE
             LEFT JOIN MATERIAL_EMBALAGEM ME2 ON ME2.ID_MATEEMBA = PB.ID_MATEEMBA
             LEFT JOIN MATERIAL_TIPO MT ON MA.ID_TIPOMATE = MT.ID_TIPOMATE
             LEFT JOIN MATERIAL_CATEGORIA MCA ON MCA.ID_CATEMATE = MA.ID_CATEMATE
             LEFT JOIN MATERIAL_SUBCATEGORIA MS ON MS.ID_SUBCMATE = MA.ID_SUBCMATE
             LEFT JOIN MATERIAL_GRUPO MG ON MG.ID_GRUPMATE = MA.ID_GRUPMATE
             LEFT JOIN MATERIAL_TRATAMENTO MTR ON MA.ID_TRATMATE = MTR.ID_TRATMATE
                     
       UNION

      SELECT PB.EMPRESA, 
	         PB.FILIAL,
	         PB.DT_PADRBATCPROD DT_PADRPROD,
             PB.NR_BATCPROD,
             PBMP.ID_MATERIAL, 
             COALESCE(PBMP.ID_PRODMATEEMBA, '') ID_PRODMATEEMBA,

			 CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN ME.NM_PRODMATEEMBA ELSE MA2.NM_MATERIAL END NM_MATEPRIMBATCPROD,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN UM1.SG_UNIDMEDI ELSE UM2.SG_UNIDMEDI END SG_UNIDMEDI,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MA1.IE_MATERIAL ELSE MA2.IE_MATERIAL END IE_MATERIAL,
             PB.ID_PROGPROD,
             COALESCE(PBPR.QN_PESOREPOPESABATCPROD, 0) QN_PESOBATCPROD,
             ME2.ID_PRODMATEEMBA ID_PRODUTO,     
             ME2.NM_PRODMATEEMBA,                                                      
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MC1.NM_CLASMATE ELSE MC2.NM_CLASMATE END NM_CLASMATE,
             'BT' GN_TIPOREGI,                                           
             PBPR.NR_LOTEREPOPESABATCPROD NR_NUMELOTE,
             CONVERT(DATETIME, CONVERT(CHAR(10), PB.DT_BATCPROD, 103), 103) DT_REGIPROD,
             PBPR.ID_REPOPESABATCPROD,
             PBPR.ID_ALMOXARIFADO,
             ALMOXARIFADO.NM_ALMOXARIFADO,
             PB.FL_STATBATCPROD,
             PBPR.ID_REPOPESABATCPROD,
             ME.ID_EMBALAGEM,
             PBPR.ID_REGIPROD,
             PB.NM_RECEBATCPROD,
             PB.ID_RECEBATCPROD,
             PB.NM_PERIODO,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MT1.NM_TIPOMATE ELSE MT2.NM_TIPOMATE END NM_TIPOMATE,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MCA1.NM_CATEMATE ELSE MCA2.NM_CATEMATE END NM_CATEMATE,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MS1.NM_SUBCMATE ELSE MS2.NM_SUBCMATE END NM_SUBCMATE,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MG1.NM_GRUPMATE ELSE MG2.NM_GRUPMATE END NM_GRUPMATE,
             'D' FL_TIPOMOVI,
             CASE WHEN PBMP.ID_PRODMATEEMBA IS NOT NULL THEN MTR1.NM_TRATMATE ELSE MTR2.NM_TRATMATE END NM_TRATMATE,
             PBPR.ID_REPOPESABATCPROD ID_TABEPRIN
        FROM PRODUCAO_BATCH_PESAGEM_REPO PBPR
        LEFT JOIN PRODUCAO_BATCH_MATE_PRIM_REPO PBMPR ON PBPR.ID_REPOPRIMMATEBATCPROD = PBMPR.ID_REPOPRIMMATEBATCPROD 
        LEFT JOIN PRODUCAO_BATCH_REPOSITORIO PBR ON PBMPR.ID_REPOBATCPROD = PBR.ID_REPOBATCPROD
        LEFT JOIN PRODUCAO_BATCH PB ON PBR.ID_BATCPROD = PB.ID_BATCPROD
        LEFT JOIN PRODUCAO_BATCH_MATERIA_PRIMA PBMP ON PB.ID_BATCPROD = PBMP.ID_BATCPROD
                                                   AND (PBMPR.ID_MATERIAL = PBMP.ID_MATERIAL OR
                                                        PBMPR.ID_PRODMATEEMBA = PBMP.ID_PRODMATEEMBA)
        LEFT JOIN MATERIAL_EMBALAGEM ME ON PBMP.ID_PRODMATEEMBA = ME.ID_PRODMATEEMBA
        LEFT JOIN MATERIAL MA1 ON ME.ID_MATERIAL = MA1.ID_MATERIAL
        LEFT JOIN UNIDADE_MEDIDA UM1 ON MA1.ID_UNIDMEDI = UM1.ID_UNIDMEDI
        LEFT JOIN MATERIAL MA2 ON PBMP.ID_MATERIAL = MA2.ID_MATERIAL
        LEFT JOIN UNIDADE_MEDIDA UM2 ON MA2.ID_UNIDMEDI = UM2.ID_UNIDMEDI
        LEFT JOIN MATERIAL_EMBALAGEM ME2 ON PB.ID_MATEEMBA = ME2.ID_MATEEMBA  
        LEFT JOIN MATERIAL_CLASSIFICACAO MC1 ON MA1.ID_CLASMATE = MC1.ID_CLASMATE
        LEFT JOIN MATERIAL_CLASSIFICACAO MC2 ON MA2.ID_CLASMATE = MC2.ID_CLASMATE
        LEFT JOIN ALMOXARIFADO ON ALMOXARIFADO.ID_ALMOXARIFADO = PBPR.ID_ALMOXARIFADO
        LEFT JOIN MATERIAL_TIPO MT1 ON MA1.ID_TIPOMATE = MT1.ID_TIPOMATE
        LEFT JOIN MATERIAL_TIPO MT2 ON MA2.ID_TIPOMATE = MT2.ID_TIPOMATE
        LEFT JOIN MATERIAL_CATEGORIA MCA1 ON MCA1.ID_CATEMATE = MA1.ID_CATEMATE
        LEFT JOIN MATERIAL_CATEGORIA MCA2 ON MCA2.ID_CATEMATE = MA2.ID_CATEMATE
        LEFT JOIN MATERIAL_SUBCATEGORIA MS1 ON MS1.ID_SUBCMATE = MA1.ID_SUBCMATE

	    LEFT JOIN MATERIAL_SUBCATEGORIA MS2 ON MS2.ID_SUBCMATE = MA2.ID_SUBCMATE
        LEFT JOIN MATERIAL_GRUPO MG1 ON MG1.ID_GRUPMATE = MA1.ID_GRUPMATE 
        LEFT JOIN MATERIAL_GRUPO MG2 ON MG2.ID_GRUPMATE = MA2.ID_GRUPMATE
        LEFT JOIN MATERIAL_TRATAMENTO MTR1 ON MA1.ID_TRATMATE = MTR1.ID_TRATMATE
        LEFT JOIN MATERIAL_TRATAMENTO MTR2 ON MA2.ID_TRATMATE = MTR2.ID_TRATMATE
       WHERE (PB.FL_STATBATCPROD IN ('FE', 'FD'))
         AND (COALESCE(PBPR.FL_DESCREPOPESABATCPROD, 'N') = 'S')

    )VW_BATCH
JOIN MATERIAL_PRECO ON (VW_BATCH.ID_MATERIAL = MATERIAL_PRECO.ID_MATERIAL AND MATERIAL_PRECO.NM_VALOMATE = VW_BATCH.NM_PERIODO)
GROUP BY VW_BATCH.EMPRESA, 
         VW_BATCH.FILIAL,   
         VW_BATCH.NM_CLASMATE,
         VW_BATCH.ID_MATERIAL,
         VW_BATCH.ie_MATERIAL,
         VW_BATCH.ID_PRODMATEEMBA,
         VW_BATCH.NM_MATEPRIMBATCPROD,
         VW_BATCH.SG_UNIDMEDI,
         MATERIAL_PRECO.VL_VALOMATE,
         VW_BATCH.NM_PERIODO
--ORDER BY VW_BATCH.NM_CLASMATE;
//


if exists (select name from sys.objects 
            where name = 'VW_PRODUCAO_REGISTRO_TURNO'
			  and type = 'V')
begin 
	DROP VIEW [dbo].[VW_PRODUCAO_REGISTRO_TURNO]
end 
//
CREATE VIEW [dbo].[VW_PRODUCAO_REGISTRO_TURNO]
AS
SELECT ID_REGIPROD,
       GN_SEQUTURNREGIPROD,
       FL_TURNMANUREGIPROD,
       NR_SEQUTURNREGIPROD,
       IE_PERITURNREGIPROD,
       FL_PERIMANUTURNREGIPROD,
	   GN_SEQUTURNREGIPROD AS GN_SEQUITEMDIARTURNPROD, 
	   NR_SEQUTURNREGIPROD AS NR_TURNREGIPROD
  FROM PRODUCAO_REGISTRO_TURNO
//



CREATE NONCLUSTERED INDEX IDX_VALIPROD_FILIMATEDATA
ON [dbo].[VALIDA_PRODUCAO] ([FILIAL],[ID_MATEEMBA],[DT_REGIPROD])
INCLUDE ([ID_TIPOAVE],[Qn_PesoLiquRegiprod])
//

CREATE NONCLUSTERED INDEX IDX_VALIDEST_COSTOS001
ON [dbo].[VALIDA_DESTINACAO] ([EMPRESA],[FILIAL],[ID_PROCLINH],[DT_DESTPROD],[ID_MATEEMBA])
INCLUDE ([ID_PROCLINHORIGDESTVALI],[Qn_PesoLiquRegiprod])
//


CREATE NONCLUSTERED INDEX IDX_CUSTCOMPDIAR_DATALINH
ON [dbo].[CUSTO_COMPONENTE_DIARIO] ([DT_PADRDIARCOMPCUST],[ID_PROCLINH])
INCLUDE ([ID_COMPAVE],[NR_TURNDIARCOMPCUST],[QN_PESODESCDIARCOMPCUST],[ID_TIPOAVE],[ID_ESTRUNIDABAT])
//

CREATE NONCLUSTERED INDEX IDX_MATRCOMP_COMPAVE
ON [dbo].[MATRIZ_COMPONENTES] ([ID_COMPAVE])
INCLUDE ([ID_MATEEMBA],[PC_COMPONENTE])
// 


CREATE NONCLUSTERED INDEX IDX_MATRCOMP_PRODCOMPAVE
ON [dbo].[MATRIZ_COMPONENTES] ([ID_MATEEMBA],[ID_COMPAVE])
INCLUDE ([PC_COMPONENTE])

CREATE NONCLUSTERED INDEX IDX_PRODDESC_CUTOS
ON [dbo].[PRODUCAO_DESCARTE] ([EMPRESA],[FILIAL],[ID_PARTAVE],[ID_TIPOAVE],[ID_ESTRUNIDABAT],[NR_SEQUTURNDESCPROD],[ID_PROCLINH])
INCLUDE ([QN_PESODESCPROD],[ID_REGIDATAPADR],[ID_MATEEMBA])
//

CREATE NONCLUSTERED INDEX IDX_COMPPRODDIARCUST_ID
ON [dbo].[CUSTO_DIARIO_PRODUTO_COMP] ([ID_PRODDIARCUST])
//

CREATE NONCLUSTERED INDEX  IDX_PRODDIARCUST
ON [dbo].[CUSTO_DIARIO_PRODUTO] ([EMPRESA],[FILIAL],[DT_PADRPRODDIARCUST])
//

CREATE NONCLUSTERED INDEX [IDX_AJUS_EMPRFILIMATE] 
  ON [MATERIAL_EMBALAGEM_MATE_AJUS]([EMPRESA], [FILIAL], [ID_MATERIAL])
// 
CREATE NONCLUSTERED INDEX [IDX_ALMOENDITEM] 
  ON [ALMOXARIFADO_ENDEREC_ITEM]([ID_ENDEALMO]) 
//
CREATE NONCLUSTERED INDEX [IDX_ALMOXARIFADO_ENDEREC_ITEM_FL_STATITEMENDEALMO] ON [ALMOXARIFADO_ENDEREC_ITEM]([ID_ENDEALMO], [GN_ITEMENDEALMO], [FL_ATIVITEMENDEALMO], [FL_STATITEMENDEALMO]) 
//
CREATE NONCLUSTERED INDEX [IDX_AtuaValoDist_001] ON [CUSTO_MENSAL_PRODUTO_MATE_REAL]([EMPRESA], [FILIAL], [ID_REALPRODCUSTMENS], [ID_MATERIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_AV_Orig_regiprod_id] ON [PRODUCAO_REGISTRO_ORIG_AVEVIVA]([FL_TIPOORIGAVEVIVAREGIPROD], [ID_REGIPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_BATCMATE_001] ON [BATCH_MATERIAL]([ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_BATCMATE_002] ON [BATCH_MATERIAL]([ID_BATCPROD], [ID_MATERIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_BATCPROD_PRODBATCMATEADIC] ON [PRODUCAO_BATCH_MATERIAL_ADICIO]([ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_CalcCustCST018_001] ON [PRODUCAO_MENSAL_REAL]([ID_MATEEMBA], [ID_BATCPROD], [NR_BATCPROD], [NR_MESREALPRODMENS], [NR_ANOREALPRODMENS], [QN_REALPRODMENS], [QN_PESOBRUTREALPRODMENS], [QN_PESOPADRREALPRODMENS], [FL_PRODPROPREALPRODMENS], [FL_TIPOPRODREALPRODMENS], [EMPRESA], [FILIAL], [NM_REALPRODMENS], [QN_PESOLIQUREALPRODMENS]) 
//
CREATE NONCLUSTERED INDEX [IDX_CalcCustCST018_002] ON [PRODUCAO_BATCH_MATERIAL_ADICIO]([ID_MATERIAL], [QN_PADRADICMATEBATCPROD], [QN_CONSADICMATEBATCPROD], [FL_OPERCONSADICMATEBATCPROD], [ID_BATCPROD], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_CMAPT] ON [CONS_MATE_ADIC_PROD_TERM]([ID_PROCTERMPRODADICMATECONS]) 
//
CREATE NONCLUSTERED INDEX [IDX_CONTEMBAINDI_001] ON [EMBALAGEM_CONTROLE_INDIVIDUAL]([ID_CONTEMBAINDI]) 
//
CREATE NONCLUSTERED INDEX [IDX_CST032_DATAPADRCOMP] ON [CUSTO_COMPONENTE_DIARIO]([EMPRESA], [FILIAL], [NR_TURNDIARCOMPCUST], [QN_KGTOTADIARCOMPCUST], [VL_TOTADIARCOMPCUST], [QN_PESODESCDIARCOMPCUST], [ID_TIPOAVE], [QN_PESOINTEDIARCOMPCUST], [QN_PESOCORTDIARCOMPCUST], [VL_KGINTEDIARCOMPCUST], [ID_ESTRUNIDABAT], [ID_PROCLINH], [ID_COMPAVE], [DT_PADRDIARCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CST032_DIARIO] ON [CUSTO_COMPONENTE_DIARIO]([EMPRESA], [FILIAL], [ID_COMPAVE], [ID_TIPOAVE], [NR_TURNDIARCOMPCUST], [QN_KGTOTADIARCOMPCUST], [QN_PESODESCDIARCOMPCUST], [VL_TOTADIARCOMPCUST], [QN_PESOINTEDIARCOMPCUST], [ID_ESTRUNIDABAT], [QN_PESOCORTDIARCOMPCUST], [VL_KGINTEDIARCOMPCUST], [ID_PROCLINH], [DT_PADRDIARCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CST032DIARIOBUSCA] ON [CUSTO_COMPONENTE_DIARIO]([EMPRESA], [FILIAL], [ID_TIPOAVE], [NR_TURNDIARCOMPCUST], [QN_KGTOTADIARCOMPCUST], [QN_PESODESCDIARCOMPCUST], [VL_TOTADIARCOMPCUST], [QN_PESOINTEDIARCOMPCUST], [ID_ESTRUNIDABAT], [QN_PESOCORTDIARCOMPCUST], [VL_KGINTEDIARCOMPCUST], [ID_PROCLINH], [ID_COMPAVE], [DT_PADRDIARCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [idx_cuscompdiardatalinha] ON [CUSTO_COMPONENTE_DIARIO]([ID_COMPAVE], [NR_TURNDIARCOMPCUST], [QN_PESODESCDIARCOMPCUST], [ID_TIPOAVE], [ID_ESTRUNIDABAT], [DT_PADRDIARCOMPCUST], [ID_PROCLINH]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTCOMPDIAR_002] ON [CUSTO_COMPONENTE_DIARIO]([QN_COMPCOMEDIARCOMPCUST], [EMPRESA], [FILIAL], [DT_PADRDIARCOMPCUST], [ID_ESTRUNIDABAT], [ID_TIPOAVE], [ID_COMPAVE]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTCOMPDIAR_data] ON [CUSTO_COMPONENTE_DIARIO]([ID_COMPAVE], [NR_TURNDIARCOMPCUST], [QN_KGTOTADIARCOMPCUST], [ID_TIPOAVE], [QN_PESOINTEDIARCOMPCUST], [QN_PESOCORTDIARCOMPCUST], [VL_KGINTEDIARCOMPCUST], [ID_ESTRUNIDABAT], [ID_PROCLINH], [EMPRESA], [FILIAL], [DT_PADRDIARCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CustCompDiar_Peri] ON [CUSTO_COMPONENTE_DIARIO]([EMPRESA], [FILIAL], [QN_KGTOTADIARCOMPCUST], [VL_TOTADIARCOMPCUST], [ID_TIPOAVE], [QN_PESOINTEDIARCOMPCUST], [QN_PESOCORTDIARCOMPCUST], [ID_PROCLINH], [GN_PERIDIARCOMPCUST], [ID_COMPAVE]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTCOMPENTR_EMPRFILI] ON [CUSTO_COMPONENTE_ENTRADA]([ID_ENTRAVEVIVA], [ID_REGIDATAPADR], [ID_COMPAVE], [ID_LINHTIPOAVE], [ID_TIPOAVE], [ID_CONSAVE], [ID_PRINPARTAVE], [NR_TURNENTRCOMPCUST], [QN_CABEENTRCOMPCUST], [QN_PESOMEDIENTRCOMPCUST], [ID_ESTRUNIDABAT], [EMPRESA], [FILIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTCOMPENTR_Entr_TURN] ON [CUSTO_COMPONENTE_ENTRADA]([ID_ENTRAVEVIVA], [FL_DESPENTRCOMPCUST], [NR_TURNENTRCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTCONSDIAR_001] ON [CUSTO_CONSTITUICAO_DIARIA]([QN_COMPDIARCONSCUST], [EMPRESA], [FILIAL], [DT_PADRDIARCONSCUST], [ID_ESTRUNIDABAT], [ID_TIPOAVE], [ID_COMPAVE]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTCONSDIARData] ON [CUSTO_CONSTITUICAO_DIARIA]([EMPRESA], [FILIAL], [ID_ESTRUNIDABAT], [ID_TIPOAVE], [ID_COMPAVE], [NR_TURNDIARCONSCUST], [PC_COMPDIARCONSCUST], [DT_PADRDIARCONSCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTDIARPROD_data] ON [CUSTO_DIARIO_PRODUTO]([EMPRESA], [FILIAL], [DT_PADRPRODDIARCUST]) 
//
CREATE NONCLUSTERED INDEX [idx_CUSTDIARPROD_Flag_Data] ON [CUSTO_DIARIO_PRODUTO]([fl_sincproddiarcust], [DT_PADRPRODDIARCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTDIARPRODCOMP_IDfk] ON [CUSTO_DIARIO_PRODUTO_COMP]([ID_COMPAVE], [QN_MATECOMPPRODDIARCUST], [VL_UNITCOMPPRODDIARCUST], [ID_PRODDIARCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTMENSMAEREALID] ON [CUSTO_MENSAL_PRODUTO_MATE_REAL]([ID_MATERIAL], [ID_MATEEMBA], [QN_DESCMATEPRODCUSTMENS], [FL_TIPOREALMATEPRODCUSTMENS], [QN_MATEPRODCUSTMENS], [QN_AJTOTAREALMATEPRODCUSTMENS], [VL_AJTOTAREALMATEPRODCUSTMENS], [FL_MANUREALMATEPRODCUSTMENS], [QN_MENSMATEPRODCUSTMENS], [VL_MENSREALMATEPRODCUSTMENS], [QN_ANTEMATEPRODCUSTMENS], [VL_ANTEREALMATEPRODCUSTMENS], [ID_REALPRODCUSTMENS]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTMENSMAEREALIDmate] ON [CUSTO_MENSAL_PRODUTO_REAL]([QN_PESOLIQUREALPRODCUSTMENS], [ID_CUSTMENS], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTMENSPRODEMPRFIL] ON [CUSTO_MENSAL_PRODUTO]([EMPRESA], [FILIAL], [ID_CUSTMENS], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTO_COMPONENTE_DIARIO_data] ON [CUSTO_COMPONENTE_DIARIO]([EMPRESA], [FILIAL], [ID_COMPAVE], [ID_TIPOAVE], [VL_KILODESTANTDIARCOMPCUST], [VL_KILOENTRMESDIARCOMPCUST], [DT_PADRDIARCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_CUSTO_MENSAL_PRODUTO_MATERIAL_ID_PRODCUSTMENS_ID_MATERIAL_ID_MATEEMBA] ON [CUSTO_MENSAL_PRODUTO_MATERIAL]([ID_MATEPRODCUSTMENS], [ID_PRODCUSTMENS], [ID_MATERIAL], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_DIARCOMPCUST_COMP] ON [CUSTO_COMPONENTE_DIARIO]([EMPRESA], [FILIAL], [DT_PADRDIARCOMPCUST], [QN_KGTOTADIARCOMPCUST], [VL_TOTADIARCOMPCUST], [ID_TIPOAVE], [QN_PESOINTEDIARCOMPCUST], [QN_PESOCORTDIARCOMPCUST], [ID_PROCLINH], [ID_COMPAVE]) 
//
CREATE NONCLUSTERED INDEX [IDX_DIARCOMPCUST_COMPLinh] ON [CUSTO_COMPONENTE_DIARIO]([EMPRESA], [FILIAL], [DT_PADRDIARCOMPCUST], [QN_KGTOTADIARCOMPCUST], [VL_TOTADIARCOMPCUST], [ID_TIPOAVE], [QN_PESOINTEDIARCOMPCUST], [QN_PESOCORTDIARCOMPCUST], [ID_COMPAVE], [ID_PROCLINH]) 
//
CREATE NONCLUSTERED INDEX [IDX_DIFECONSMATE_001] ON [MATERIAL_CONSUMO_DIFERENCA]([ID_PRODMATEEMBA], [FILIAL], [ID_ESTRMATEEMBAREGIPROD], [NR_LOTERASTREGIPROD], [ID_MATERIAL], [ID_UNIDMEDI]) 
//
CREATE NONCLUSTERED INDEX [idx_entradaaveviva_DT_PADRENTRCOMPCUST] ON [CUSTO_COMPONENTE_ENTRADA]([ID_ENTRAVEVIVA], [ID_REGIDATAPADR], [ID_COMPAVE], [ID_LINHTIPOAVE], [ID_TIPOAVE], [ID_CONSAVE], [ID_PRINPARTAVE], [NR_TURNENTRCOMPCUST], [QN_CABEENTRCOMPCUST], [QN_REALCOMPENTRCOMPCUST], [ID_ESTRUNIDABAT], [EMPRESA], [FILIAL], [DT_PADRENTRCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_EntrAveViva_estr] ON [ENTRADA_AVE_VIVA]([DT_ENTRCAMIENTRAVEVIVA], [GN_PLACCAMIENTRAVEVIVA], [ID_FORNECEDOR], [ID_REQUSAIDGRAN], [ID_LOTECRIA], [QN_KMINICENTRAVEVIVA], [DT_SAIDORIGENTRAVEVIVA], [ID_MATERIAL], [QN_CABEENTRAVEVIVA], [QN_KMFINAENTRAVEVIVA], [QN_PESOBRUTENTRAVEVIVA], [QN_PESOTARAENTRAVEVIVA], [QN_PESOORIGENTRAVEVIVA], [ID_VEICTRAN], [DT_SAIDCAMIENTRAVEVIVA], [QN_CONTINICENTRAVEVIVA], [QN_CONTFINAENTRAVEVIVA], [QN_GAIOENTRAVEVIVA], [QN_MORTENTRAVEVIVA], [DT_ABERPENDENTRAVEVIVA], [DT_FECHPENDENTRAVEVIVA], [ID_TRANMOTOTRAN], [ID_LOTECRIAEXTEENTRAVEVIVA], [ID_ESTAPENDESTRUNIDABAT]) 
//
CREATE NONCLUSTERED INDEX [Idx_FKCOMPAVEDIASIMU] ON [CUSTO_COMPONENTE_DIARIO_SIMU]([ID_COMPAVE]) 
//
CREATE NONCLUSTERED INDEX [Idx_FKESTRUNIDABATDIASIMU] ON [CUSTO_COMPONENTE_DIARIO_SIMU]([ID_ESTRUNIDABAT]) 
//
CREATE NONCLUSTERED INDEX [Idx_FKPRINPARTAVEDIASIMU] ON [CUSTO_COMPONENTE_DIARIO_SIMU]([ID_PRINPARTAVE]) 
//
CREATE NONCLUSTERED INDEX [Idx_FKPROCLINH_DESTDIASIMU] ON [CUSTO_COMPONENTE_DIARIO_SIMU]([ID_PROCLINH_DEST]) 
//
CREATE NONCLUSTERED INDEX [Idx_FKPROCLINH_ORIGDIASIMU] ON [CUSTO_COMPONENTE_DIARIO_SIMU]([ID_PROCLINH_ORIG]) 
//
CREATE NONCLUSTERED INDEX [Idx_FKTIPOAVEDIASIMU] ON [CUSTO_COMPONENTE_DIARIO_SIMU]([ID_TIPOAVE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_CONS_MATE_ADIC_PROD_TERM_DT_PRODTERMPRODADICMATECONS] ON [CONS_MATE_ADIC_PROD_TERM]([NR_BATCPROD], [ID_CENTCUST], [DT_PRODTERMPRODADICMATECONS], [ID_PROCTERMPRODADICMATECONS], [ID_PRODMATEEMBA], [ID_MATERIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_CUSTO_CONSTITUICAO_DIARIA_EMPRESA_FILIAL_DT_PADRDIARCONSCUST] ON [CUSTO_CONSTITUICAO_DIARIA]([ID_ESTRUNIDABAT], [ID_TIPOAVE], [ID_COMPAVE], [NR_TURNDIARCONSCUST], [QN_COMPDIARCONSCUST], [VL_COMPDIARCONSCUST], [EMPRESA], [FILIAL], [DT_PADRDIARCONSCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EMBALAGEM_CONTROLE_INDIVIDUAL_DT_PADREMBAINDI_ID_PRODMATEEMBA] ON [EMBALAGEM_CONTROLE_INDIVIDUAL]([ID_IDENCONTEMBAINDI], [DT_PADREMBAINDI], [ID_PRODMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EMBALAGEM_CONTROLE_INDIVIDUAL_ID_REGIPROD] ON [EMBALAGEM_CONTROLE_INDIVIDUAL]([ID_REGIPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EMBALAGEM_MEDIDA_ID_DEFIEMBA] ON [EMBALAGEM_MEDIDA]([FILIAL], [ID_DEFIEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EMPRESA_FILIAL_LOCAL_FILIAL] ON [EMPRESA_FILIAL_LOCAL]([EMPRESA], [FILIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_ENTRADA_AVE_VIVA_EMPRESA_FILIAL_FL_STATENTRAVEVIVA_FL_STATPENDENTRAVEVIVA] ON [ENTRADA_AVE_VIVA]([QN_CONTINICENTRAVEVIVA], [QN_CONTFINAENTRAVEVIVA], [ID_REGIDATAPADR], [DT_ABERPENDENTRAVEVIVA], [ID_LINHTIPOAVE], [ID_ESTAPENDESTRUNIDABAT], [EMPRESA], [FILIAL], [FL_STATENTRAVEVIVA], [FL_STATPENDENTRAVEVIVA]) 
CREATE NONCLUSTERED INDEX [IDX_GN_ENTRADA_AVE_VIVA_GALPAO_ID_ENTRAVEVIVA] ON [ENTRADA_AVE_VIVA_GALPAO]([ID_ENTRAVEVIVA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_ESTOQUE_FECHAMENTO_ITEM_FILIAL_FL_STATITEMFECHESTO] ON [ESTOQUE_FECHAMENTO_ITEM]([ID_FECHESTO], [FILIAL], [FL_STATITEMFECHESTO]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_ESTOQUE_FECHAMENTO_ITEM_FL_STATITEMFECHEST)_FL_TIPOOPERITEMFECHESTO] ON [ESTOQUE_FECHAMENTO_ITEM]([ID_ITEMFECHESTO], [ID_FECHESTO], [FL_STATITEMFECHESTO], [FL_TIPOOPERITEMFECHESTO]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_ESTOQUE_FECHAMENTO_ITEM_ID_ITEMFECHESTO] ON [ESTOQUE_FECHAMENTO_ITEM]([FL_STATITEMFECHESTO], [ID_ITEMFECHESTO]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_BASE_ID_CARGEXPE_ID_PEDIVEND] ON [EXPEDICAO_CARGA_BASE]([ID_CARGEXPE], [ID_PEDIVEND]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_FL_STATCARGEXPE] ON [EXPEDICAO_CARGA]([DT_FECHCARGEXPE], [FL_MODACARGEXPE], [DT_PREVINICCARRCARGEXPE], [FL_SINCINTECARGEXPE], [FL_STATCARGEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_ID_CARGEXPE_AGRU] ON [EXPEDICAO_CARGA]([ID_CARGEXPE_AGRU]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_ID_CARGEXPE_PRINCIPAL] ON [EXPEDICAO_CARGA]([ID_CARGEXPE_PRINCIPAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_IDENTIFICACAO_ID_CARGEXPE_DT_CARRIDENCARGEXPE] ON [EXPEDICAO_CARGA_IDENTIFICACAO]([ID_CARGEXPE], [DT_CARRIDENCARGEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_IE_CARGEXPE] ON [EXPEDICAO_CARGA]([IE_CARGEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_ITEM_ID_CARGEXPE_ID_MATEEMBA] ON [EXPEDICAO_CARGA_ITEM]([ID_CARGEXPE], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_LOG] ON [EXPEDICAO_CARGA_LOG]([DT_ABERREALLOGCARGEXPE], [ID_CARGEXPE], [FL_STATLOGCARGEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_CARGA_PALETE_ID_CARGEXPE] ON [EXPEDICAO_CARGA_PALETE]([ID_PALEEXPE], [ID_CARGEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_PALETE_FL_STATPALEEXPE_ID_USUASIST_PALEPONT_ID_PALEEXPE_ID_PRODPALEPONT] ON [EXPEDICAO_PALETE]([NR_IDENPALEEXPE], [FL_STATPALEEXPE], [ID_USUASIST_PALEPONT], [ID_PALEEXPE], [ID_PRODPALEPONT]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_PALETE_IDENTIFICACAO_ID_PALEEXPE] ON [EXPEDICAO_PALETE_IDENTIFICACAO]([EMPRESA], [FILIAL], [ID_REGIPROD], [ID_PALEEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_PALETE_IDENTIFICACAO_ID_REGIPROD] ON [EXPEDICAO_PALETE_IDENTIFICACAO]([QN_PESOLIQUIDENPALEEXPE], [QN_TARAEMBAIDENPALEEXPE], [ID_REGIPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_EXPEDICAO_PALETE_MOVIMENTACAO_ID_PALEEXPE] ON [EXPEDICAO_PALETE_MOVIMENTACAO]([ID_PALEEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_FORMULARIO_QUALIDADE_ITEM_ID_FORMQUAL] ON [FORMULARIO_QUALIDADE_ITEM]([ID_FORMQUAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_ID_ESTRUNIDABAT_DT_ENCESEQUPROD_NR_LOTERASTREGIPROD_SEQUPROD_ID_PRODMATEEMBA] ON [PRODUCAO_SEQUESTRO]([FL_TIPOSEQUPROD], [GN_SEQUTURNREGIPROD], [DT_PADRSEQUPROD], [DT_REGISEQUPROD], [ID_ESTRUNIDABAT], [DT_ENCESEQUPROD], [NR_LOTERASTREGIPROD_SEQUPROD], [ID_PRODMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_DT_ULTIALTEERPMATE] ON [MATERIAL]([DT_ULTIALTEERPMATE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_ALMO_ENDE_ID_MATEEMBA_ID_ALMOXARIFADO] ON [MATERIAL_EMBALAGEM_ALMO_ENDE]([ID_MATEEMBA], [ID_ALMOXARIFADO], [FL_TIPOENDEALMOMATEEMBA], [ID_ENDEALMO]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_COMPOSICAO_ID_MATEEMBA_ID_ESTRCOMPMATEEMBA] ON [MATERIAL_EMBALAGEM_COMPOSICAO]([ID_MATEEMBA], [ID_ESTRCOMPMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_DEFINICAO_ID_DEFIMATEEMBA_ID_PRODDEFIMATEEMBA] ON [MATERIAL_EMBALAGEM_DEFINICAO]([ID_VALIMATEEMBA], [ID_PRODDEFIMATEEMBA], [ID_DEFIMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_DEFINICAO_ID_DEFIMATEEMBA_ID_VALIMATEEMBA] ON [MATERIAL_EMBALAGEM_DEFINICAO]([ID_DEFIMATEEMBA], [ID_VALIMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_DEFINICAO_ID_PRODDEFIMATEEMBA] ON [MATERIAL_EMBALAGEM_DEFINICAO]([ID_PRODDEFIMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_DEFINICAO_IE_DEFIMATEEMBA] ON [MATERIAL_EMBALAGEM_DEFINICAO]([ID_PRODDEFIMATEEMBA], [IE_DEFIMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_FILIAL_ID_DEFIMATEEMBA_FILIAL] ON [MATERIAL_EMBALAGEM_FILIAL]([EMPRESA], [QN_SEQUDIASESTOMATEEMBAFILI], [ID_DEFIMATEEMBA], [FILIAL]) 
//
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_FILIAL_ID_MODEETIQIMPRPREMATEEMBAFILI] ON [MATERIAL_EMBALAGEM_FILIAL]([EMPRESA], [FILIAL], [ID_DEFIMATEEMBA], [ID_MODEETIQIMPRPREMATEEMBAFILI]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_LOCAL_EMPRESA_FILIAL_ID_MATEEMBAFILI] ON [MATERIAL_EMBALAGEM_LOCAL]([EMPRESA], [FILIAL], [ID_MATEEMBAFILI]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_LOCAL_FILIAL_ID_MATEEMBAFILI] ON [MATERIAL_EMBALAGEM_LOCAL]([EMPRESA], [FILIAL], [ID_MATEEMBAFILI]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_LOCAL_ID_MATEEMBAFILI] ON [MATERIAL_EMBALAGEM_LOCAL]([FILIAL], [ID_MATEEMBAFILI]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_EMBALAGEM_MATE_PRIM_EMPRESA_FILIAL_ID_MATEEMBAFILI] ON [MATERIAL_EMBALAGEM_MATE_PRIM]([EMPRESA], [FILIAL], [ID_MATEEMBAFILI]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_IE_MATERIAL] ON [MATERIAL]([IE_MATERIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_MOVIMENTACAO_DT_MOVIMATE] ON [MATERIAL_MOVIMENTACAO]([ID_OPERMOVIMATE], [DT_MOVIMATE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_PRECO_EMPRESA_FILIAL_ID_MATERIAL_NM_VALOMATE] ON [MATERIAL_PRECO]([VL_VALOMATE], [EMPRESA], [FILIAL], [ID_MATERIAL], [NM_VALOMATE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATERIAL_PRECO_ID_MATERIA_NR_MESVALOMATEL_NR_ANOVALOMATE] ON [MATERIAL_PRECO]([VL_VALOMATE], [NM_VALOMATE], [ID_MATERIAL], [NR_MESVALOMATE], [NR_ANOVALOMATE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_MATRIZ_COMPONENTES_EMPRESA_FILIAL_DT_PADRMATRCOMP] ON [MATRIZ_COMPONENTES]([EMPRESA], [FILIAL], [DT_PADRMATRCOMP]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PEDIDO_VENDA_FL_SINCINTEPEDIVEND] ON [PEDIDO_VENDA]([ID_CARGEXPE], [FL_STATPEDIVEND], [IE_PEDIVEND], [DT_ALTESTATPEDIVEND], [NR_LOTEINTEPEDIVEND], [FL_SINCINTEPEDIVEND]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PEDIDO_VENDA_NR_LOTEINTEPEDIVEND_FL_STATPEDIVEND_IE_PEDIVEND] ON [PEDIDO_VENDA]([NR_LOTEINTEPEDIVEND], [FL_STATPEDIVEND], [IE_PEDIVEND]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PESAGEM_ORDEM_IE_ORDEPESA_FL_ESPEORDEPESA] ON [PESAGEM_ORDEM]([EMPRESA], [FILIAL], [IE_ORDEPESA], [FL_ESPEORDEPESA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PESAGEM_ORDEM_NR_ORDETRANORDEPESA] ON [PESAGEM_ORDEM]([NR_ORDETRANORDEPESA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PESAGEM_REGISTRO_SAIDA_GN_PLACCAMIREGIPESASAID_FL_STATREGIPESASAID] ON [PESAGEM_REGISTRO_SAIDA]([GN_PLACCAMIREGIPESASAID], [FL_STATREGIPESASAID]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PESSOA_ENDERECO_ID_RELAPESS_IE_ENDEPESS] ON [PESSOA_ENDERECO]([ID_RELAPESS], [IE_ENDEPESS]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_DT_PADRBATCPROD_FL_STATBATCPROD] ON [PRODUCAO_BATCH]([NR_BATCPROD], [ID_MATEEMBA], [QN_TAMABATCPROD], [DT_PADRBATCPROD], [FL_STATBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_ID_PROGPROD_FL_STATBATCPROD] ON [PRODUCAO_BATCH]([QN_TAMABATCPROD], [ID_PROGPROD], [FL_STATBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_MATE_PRIM_REPO_ID_REPOBATCPROD_ID_MATERIAL_ID_PRODMATEEMBA] ON [PRODUCAO_BATCH_MATE_PRIM_REPO]([QN_PESOREQUREPOBATCPROD], [QN_PESODOSAREPOBATCPROD], [ID_MATESUBS], [ID_PRODMATEEMBASUBS], [ID_REPOBATCPROD], [ID_MATERIAL], [ID_PRODMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_MATERIA_PRIMA_ID_BATCPROD] ON [PRODUCAO_BATCH_MATERIA_PRIMA]([ID_PRODMATEEMBA], [ID_MATEEMBAFILI], [ID_MATERIAL], [QN_PESODOSABATCPROD], [QN_QTDEMATEPRIMBATCPROD], [QN_PESOREQUBATCPROD], [FL_MANUINCLPRIMMATEBATCPROD], [ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_MATERIAL_ADICIO_ID_BATCPROD_FL_STATSINCADICMATEBATCPROD_QN_PADRADICMATEBATCPROD] ON [PRODUCAO_BATCH_MATERIAL_ADICIO]([ID_MATERIAL], [NR_LOTEADICMATEBATCPROD], [ID_PROGPROD], [ID_MATEEMBA], [ID_BATCPROD], [FL_STATSINCADICMATEBATCPROD], [QN_PADRADICMATEBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_MATERIAL_ADICIO_ID_MATEEMBA] ON [PRODUCAO_BATCH_MATERIAL_ADICIO]([ID_BATCPROD], [ID_MATERIAL], [QN_PADRADICMATEBATCPROD], [QN_CONSADICMATEBATCPROD], [FL_OPERCONSADICMATEBATCPROD], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_MATERIAL_ADICIO_ID_MATERIAL_ID_PROGPROD] ON [PRODUCAO_BATCH_MATERIAL_ADICIO]([QN_PADRADICMATEBATCPROD], [ID_MATERIAL], [ID_PROGPROD], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_PESAGEM_ID_PRIMMATEBATCPROD] ON [PRODUCAO_BATCH_PESAGEM]([QN_PESOPESABATCPROD], [ID_REGIPROD], [ID_PRIMMATEBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_PESAGEM_ID_REGIPROD] ON [PRODUCAO_BATCH_PESAGEM]([ID_REGIPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_PESAGEM_ID_REPOPESABATCPROD] ON [PRODUCAO_BATCH_PESAGEM]([ID_REPOPESABATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_PESAGEM_ID_USUASIST_GN_USUASISTOPERPESABATCPROD] ON [PRODUCAO_BATCH_PESAGEM]([ID_PRIMMATEBATCPROD], [NR_LOTEPESABATCPROD], [FL_DELEPESABATCPROD], [ID_ALMOXARIFADO], [DT_REGIPESABATCPROD], [ID_USUASIST], [GN_USUASISTOPERPESABATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_PESAGEM_NR_CODIBARR] ON [PRODUCAO_BATCH_PESAGEM]([NR_CODIBARR]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_PESAGEM_REPO_ID_REPOPRIMMATEBATCPROD] ON [PRODUCAO_BATCH_PESAGEM_REPO]([ID_REPOPRIMMATEBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_PESAGEM_REPO_ID_USUASIST_GN_USUASISTOPERREPOPESABATCPRO] ON [PRODUCAO_BATCH_PESAGEM_REPO]([ID_REPOPRIMMATEBATCPROD], [NR_LOTEREPOPESABATCPROD], [ID_ALMOXARIFADO], [DT_REGIREPOPESABATCPROD], [ID_USUASIST], [GN_USUASISTOPERREPOPESABATCPRO]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_REPOSITORIO_DT_PADRREPOBATCPROD] ON [PRODUCAO_BATCH_REPOSITORIO]([NR_SEQUREPOBATCPROD], [DT_PADRREPOBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_BATCH_REPOSITORIO_ID_BATCPROD] ON [PRODUCAO_BATCH_REPOSITORIO]([ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_DESCARTE_EMPRESA_FILIAL_ID_REGIDATAPADR_FL_ENTRBATCDESCPROD] ON [PRODUCAO_DESCARTE]([EMPRESA], [FILIAL], [ID_REGIDATAPADR], [FL_ENTRBATCDESCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_DESCARTE_ID_BATCPROD] ON [PRODUCAO_DESCARTE]([QN_PESODESCPROD], [ID_MATERIAL], [ID_PRODMATEEMBA], [ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_DESCARTE_ID_PARTAVE] ON [PRODUCAO_DESCARTE]([QN_UNIDDESCPROD], [QN_PESODESCPROD], [ID_REGIDATAPADR], [ID_ENTRAVEVIVA], [ID_TIPOAVE], [ID_ESTRUNIDABAT], [ID_PARTAVE]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_DESCARTE_ID_PARTAVE_ID_ENTRAVEVIVA] ON [PRODUCAO_DESCARTE]([QN_UNIDDESCPROD], [ID_REGIDATAPADR], [ID_PARTAVE], [ID_ENTRAVEVIVA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_INVENTARIO_ID_ALMOXARIFADO_DT_ABERINVEPROD] ON [PRODUCAO_INVENTARIO]([DT_FECHINVEPROD], [FL_STATINVEPROD], [DT_LIMIINVEPROD], [ID_ALMOXARIFADO], [DT_ABERINVEPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_INVENTARIO_IDEN_ID_INVEPROD_FL_SITUIDENINVEPROD] ON [PRODUCAO_INVENTARIO_IDEN]([ID_REGIPROD], [ID_MATEALMO], [ID_INVEPROD], [FL_SITUIDENINVEPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_INVENTARIO_ITEM_ID_INVEPROD_ID_MATEEMBA] ON [PRODUCAO_INVENTARIO_ITEM]([QN_PESOREGIITEMINVEPROD], [QN_EMBAREGIITEMINVEPROD], [QN_UNIDREGIITEMINVEPROD], [ID_INVEPROD], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_MENSAL_REAL_ID_BATCPROD] ON [PRODUCAO_MENSAL_REAL]([ID_MATEEMBA], [NM_REALPRODMENS], [QN_PESOLIQUREALPRODMENS], [QN_PESOLIQUTOTAREALPRODMENS], [ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_MENSAL_REAL_NM_REALPRODMENS_ID_BATCPROD] ON [PRODUCAO_MENSAL_REAL]([QN_PESOLIQUTOTAREALPRODMENS], [QN_PESOLIQUREALPRODMENS], [NM_REALPRODMENS], [ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_PROGRAMACAO_ITEM_ID_MATEEMBA_ID_PROGPROD] ON [PRODUCAO_PROGRAMACAO_ITEM]([QN_ITEMPROGPROD], [ID_MATEEMBA], [ID_PROGPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_PROGRAMACAO_MULTIPLA_ID_ESTRUNIDABAT_DT_MULTPROGPROD_ID_PRODMATEEMBA] ON [PRODUCAO_PROGRAMACAO_MULTIPLA]([QN_CAIXMULTPROGPROD], [NR_SEQUTURNMULTPROGPROD], [EMPRESA], [FILIAL], [ID_MULTPROGPROD], [NR_PRIOMULTPROGPROD], [ID_ETIQUETA], [FL_BLOQPRODEXCEMULTPROGPROD], [QN_ALERANTEEXPRMULTPROGPROD], [FL_ALERANTEEXPRMULTPROGPROD], [ID_ESTRUNIDABAT], [DT_MULTPROGPROD], [ID_PRODMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_PROGRAMACAO_MULTIPLA_ID_MULTPROGPROD] ON [PRODUCAO_PROGRAMACAO_MULTIPLA]([NR_PRIOMULTPROGPROD], [ID_ETIQUETA], [FL_BLOQPRODEXCEMULTPROGPROD], [NR_SEQUTURNMULTPROGPROD], [ID_MULTPROGPROD], [ID_ESTRUNIDABAT], [DT_MULTPROGPROD], [ID_PRODMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_SEQUESTRO_DT_ENCESEQUPROD_EMPRESA_FILIAL_ID_PRODMATEEMBA] ON [PRODUCAO_SEQUESTRO]([ID_ESTRUNIDABAT], [FL_TIPOSEQUPROD], [NR_LOTERASTREGIPROD_SEQUPROD], [DT_PADRSEQUPROD], [DT_REGISEQUPROD], [GN_SEQUTURNREGIPROD], [GN_PERIRASTSEQUPROD], [DT_ENCESEQUPROD], [EMPRESA], [FILIAL], [ID_PRODMATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_SEQUESTRO_ITEM_ID_REGIPROD] ON [PRODUCAO_SEQUESTRO_ITEM]([ID_SEQUPROD], [FL_PERMDESTREPRITEMSEQUPROD], [ID_REGIPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_SEQUESTROID_MOTISEQU_FL_TIPOSEQUPROD_DT_ENCESEQUPROD] ON [PRODUCAO_SEQUESTRO]([ID_MOTISEQU], [FL_TIPOSEQUPROD], [DT_ENCESEQUPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PRODUCAO_TURNO_DIARIO_ITEM_DT_HORAINICITEMDIARTURNPROD_DT_HORAFINAITEMDIARTURNPROD] ON [PRODUCAO_TURNO_DIARIO_ITEM]([ID_DIARTURNPROD], [GN_SEQUITEMDIARTURNPROD], [DT_HORAINICITEMDIARTURNPROD], [DT_HORAFINAITEMDIARTURNPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_PV_VENDA_DEVOLUCAO_FL_STATDEVOVEND] ON [PV_VENDA_DEVOLUCAO]([FL_SINCERPDEVOVEND], [FL_STATDEVOVEND]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_SCT_DIREITOS_US_ID_MODULO_ID_JANELA_ID_USUARIO] ON [SCT_DIREITOS_US]([ID_RECURSO], [ID_MODULO], [ID_JANELA], [ID_USUARIO]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_SCT_DIREITOS_US_ID_USUARIO] ON [SCT_DIREITOS_US]([ID_MODULO], [ID_JANELA], [ID_RECURSO], [ID_USUARIO]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_SISTEMA_PARAMETRO_EMPRESA_FILIAL] ON [SISTEMA_PARAMETRO]([ID_MODEIDEN], [EMPRESA], [FILIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_SISTEMA_USUARIO_SESSAO_SERIAL_FILIAL] ON [SISTEMA_USUARIO_SESSAO]([SERIAL#], [FILIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_TABELA_CUSTO_ITEM_ID_TABECUST_ID_MATEEMBA] ON [TABELA_CUSTO_ITEM]([VL_ITEMTABECUST], [ID_TABECUST], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_GN_TRANSPORTADOR_VEICULO_FL_ATIVVEICTRAN_GN_PLACVEICTRAN] ON [TRANSPORTADOR_VEICULO]([FL_ATIVVEICTRAN], [GN_PLACVEICTRAN]) 
//
CREATE NONCLUSTERED INDEX [IDX_HISTRETEDADO_CONSULT] ON [DADOS_RETENCAO_HIST]([ID_RETEDADO], [DT_ULTIEXCLHISTRETEDADO]) 
//
CREATE NONCLUSTERED INDEX [IDX_IDENPALEEXPE_IDPALEEXPE_002] ON [EXPEDICAO_PALETE_IDENTIFICACAO]([ID_PALEEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_IE_PEDIVEND] ON [PEDIDO_VENDA]([IE_PEDIVEND]) 
//
CREATE NONCLUSTERED INDEX [IDX_ITEMENDEALMO_IDPALEEXPE] ON [ALMOXARIFADO_ENDEREC_ITEM]([GN_ITEMENDEALMO], [ID_PALEEXPE]) 
//
CREATE NONCLUSTERED INDEX [idx_MATERIAL_PRECO_00029] ON [MATERIAL_PRECO]([VL_VALOMATE], [ID_MATERIAL], [NM_VALOMATE], [EMPRESA], [FILIAL]) 
//
CREATE NONCLUSTERED INDEX [idx_matrcomprod] ON [MATRIZ_COMPONENTES]([ID_COMPAVE], [PC_COMPONENTE], [ID_MATEEMBA]) 
//
CREATE NONCLUSTERED INDEX [IDX_MENSPRODVALO_PERI] ON [VALOR_PRODUTO_MENSAL]([GN_PERIMENSPRODVALO]) 
//
CREATE NONCLUSTERED INDEX [IDX_MOVIMATE_SALDO] ON [MATERIAL_MOVIMENTACAO]([FL_OPERMOVIMATE], [QN_MOVIMATE], [ID_MATERIAL], [ID_ALMOXARIFADO], [DT_BASEMOVIMATE]) 
//
CREATE NONCLUSTERED INDEX [IDX_PRODUCAO_DESCARTE_ID_BATCPROD] ON [PRODUCAO_DESCARTE]([QN_PESODESCPROD], [ID_MATERIAL], [ID_PRODMATEEMBA], [ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_REALPRODCUSTMENSMATEREAL] ON [CUSTO_MENSAL_PRODUTO_MATE_REAL]([ID_REALPRODCUSTMENS], [QN_MENSMATEPRODCUSTMENS], [ID_MATERIAL]) 
//
CREATE NONCLUSTERED INDEX [IDX_SIMUDIARCOMPCUSTCONS] ON [CUSTO_COMPONENTE_DIARIO_SIMU]([EMPRESA], [FILIAL], [DT_REGIPADRDIARSIMUCOMPCUST], [ID_ESTRUNIDABAT], [ID_TIPOAVE], [ID_PROCLINH_ORIG], [ID_PROCLINH_DEST], [ID_COMPAVE], [NR_TURNDIARSIMUCOMPCUST]) 
//
CREATE NONCLUSTERED INDEX [IDX_SSCC_CONTEMBAINDI] ON [EMBALAGEM_CONTROLE_INDIVIDUAL]([FILIAL], [ID_SSCCCONTEMBAINDI]) 
//
CREATE NONCLUSTERED INDEX [IDX_SSCC_PALEEXPE] ON [EXPEDICAO_PALETE]([FILIAL], [ID_SSCCPALEEXPE]) 
//
CREATE NONCLUSTERED INDEX [IDX_temp_prodbatcmateprim] ON [PRODUCAO_BATCH_MATERIA_PRIMA]([ID_MATERIAL], [ID_BATCPROD], [NR_ORDEMATEPRIMBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_TMP_PRODUCAO_BATCH_REPO_001] ON [PRODUCAO_BATCH_REPOSITORIO]([EMPRESA], [FILIAL], [ID_BATCPROD], [ID_REPOBATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_TURNDIARPROD_DATATURN] ON [PRODUCAO_TURNO_DIARIO]([DT_DIARTURNPROD]) 
//
CREATE NONCLUSTERED INDEX [IDX_ZeraAjusMes_001] ON [CUSTO_MENSAL_PRODUTO_MATE_REAL]([QN_AJUNITREALMATEPRODCUSTMENS], [QN_AJTOTAREALMATEPRODCUSTMENS], [VL_AJUNITREALMATEPRODCUSTMENS], [VL_AJTOTAREALMATEPRODCUSTMENS], [ID_REALPRODCUSTMENS]) 
//
CREATE NONCLUSTERED INDEX [IX_EXPEDICAO_CARGA_HORARIO_ID_CARGEXPE] ON [EXPEDICAO_CARGA_HORARIO]([ID_CARGEXPE]) 
//
CREATE NONCLUSTERED INDEX [IX_GN_CRIACAO_LOTE_INTEGRACAO_GALPAO_01] ON [CRIACAO_LOTE_INTEGRACAO_GALPAO]([GN_IDENGALPINTELOTECRIA]) 
//
CREATE NONCLUSTERED INDEX [IX_GN_CUSTO_MENSAL_PRODUTO_MATE_REAL_01] ON [CUSTO_MENSAL_PRODUTO_MATE_REAL]([QN_DESCMATEPRODCUSTMENS], [ID_MATERIAL], [ID_BATCPROD]) 
//
CREATE NONCLUSTERED INDEX [IX_GN_INTER_TUNE_EDATA_01] ON [INTER_TUNE_EDATA]([FECH2]) 
//
CREATE NONCLUSTERED INDEX [IX_GN_INTER_TUNE_EDATA_CODI_TIPO_TUNE] ON [INTER_TUNE_EDATA]([CODI], [TIPO], [TUNE]) 
//
CREATE TABLE dbo.GRUPO_CONFIG_CONTABIL(
	EMPRESA CHAR(2) NOT NULL,
	FILIAL INT NOT NULL,
	ID_GRUPCONFCONT NUMERIC(10) NOT NULL,
	NM_GRUPCONFCONT VARCHAR(60) NOT NULL,
    FX_GRUPCONFCONT CHAR(1) NOT NULL)
//
ALTER TABLE GRUPO_CONFIG_CONTABIL ADD CONSTRAINT PK_GRUPCONFCONT PRIMARY KEY(ID_GRUPCONFCONT)
//
CREATE TABLE dbo.GRUPO_CONFIG_CONTABIL_ITEM(
	ID_GRUPCONFCONT NUMERIC(10) NOT NULL,
	ID_ITEMGRUPCONFCONT NUMERIC(10) NOT NULL,
	ID_MATEEMBA NUMERIC(10) NOT NULL,
	ID_PRODMATEEMBA VARCHAR(10) NOT NULL,
    FX_ITEMGRUPCONFCONT CHAR(1) NOT NULL)
//
ALTER TABLE GRUPO_CONFIG_CONTABIL_ITEM ADD CONSTRAINT PK_ITEMGRUPCONFCONT PRIMARY KEY(ID_ITEMGRUPCONFCONT)
//
ALTER TABLE GRUPO_CONFIG_CONTABIL_ITEM ADD CONSTRAINT FK_GRUPCONFCONT_ITEM FOREIGN KEY(ID_GRUPCONFCONT) REFERENCES GRUPO_CONFIG_CONTABIL(ID_GRUPCONFCONT)
//
ALTER TABLE GRUPO_CONFIG_CONTABIL_ITEM ADD CONSTRAINT FK_GRUPCONFCONT_MATEEMBA FOREIGN KEY(ID_MATEEMBA) REFERENCES MATERIAL_EMBALAGEM_DEFINICAO(ID_DEFIMATEEMBA)
//
CREATE TABLE dbo.PRODUCAO_CORTE_CONTABIL_GRUPO(
    ID_GRUPCONTCORTPROD NUMERIC(10) NOT NULL,
    ID_CONTCORTPROD NUMERIC(10) NOT NULL,
	ID_GRUPCONFCONT NUMERIC(10) NOT NULL,
	DT_GRUPCONTCORTPROD DATETIME NOT NULL,
	DT_PROXGRUPCONTCORTPROD DATETIME NOT NULL,
    FX_GRUPCONTCORTPROD CHAR(1) NOT NULL)
//
ALTER TABLE PRODUCAO_CORTE_CONTABIL_GRUPO ADD CONSTRAINT PK_GRUPCONTCORTPROD PRIMARY KEY(ID_GRUPCONTCORTPROD)
//
ALTER TABLE PRODUCAO_CORTE_CONTABIL_GRUPO ADD CONSTRAINT FK_GRUPCONTCOPR_CONTCORTPROD FOREIGN KEY(ID_CONTCORTPROD) REFERENCES PRODUCAO_CORTE_CONTABIL(ID_CONTCORTPROD)
//
ALTER TABLE PRODUCAO_CORTE_CONTABIL_GRUPO ADD CONSTRAINT FK_GRUPCONTCOPR_GRUPCONFCONT FOREIGN KEY(ID_GRUPCONFCONT) REFERENCES GRUPO_CONFIG_CONTABIL(ID_GRUPCONFCONT)
//
ALTER TABLE MATERIAL_EMBALAGEM_DEFINICAO ADD FL_INTEERPDEFIMATEEMBA CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_PSRFRENDVIVOFILIPARASIST CHAR(2) DEFAULT 'PE' NOT NULL
//
CREATE TABLE dbo.RACAO_PRODUCAO_DOSADORA
(EMPRESA CHAR(2) NOT NULL,
 FILIAL INT NOT NULL,
 ID_RACAPRODDOSA NUMERIC(10,0) NOT NULL,
 NM_RACAPRODDOSA VARCHAR(40) NOT NULL,
 ID_CANARACAPRODDOSA INT NOT NULL,
 NM_DOSARACAPRODDOSA VARCHAR(25) NOT NULL,
 NR_BATIRACAPRODDOSA NUMERIC(10,0) NOT NULL,
 DT_PADRRACAPRODDOSA DATETIME NOT NULL,
 DT_REGIRACAPRODDOSA DATETIME NOT NULL,
 GN_BATIRACAPRODDOSA VARCHAR(2000) NOT NULL)
//
ALTER TABLE dbo.RACAO_PRODUCAO_DOSADORA ADD CONSTRAINT PK_RACAPRODDOSA PRIMARY KEY(ID_RACAPRODDOSA)
//
CREATE TABLE dbo.RACAO_MATERIAL_SILO
(EMPRESA CHAR(2) NOT NULL,
 FILIAL INT NOT NULL,
 ID_RACAMATESILO NUMERIC(10) NOT NULL,
 NM_DOSARACAMATESILO VARCHAR(25) NOT NULL,
 GN_CONFRACAMATESILO VARCHAR(MAX) NOT NULL)
//
ALTER TABLE RACAO_MATERIAL_SILO ADD CONSTRAINT PK_RACAMATESILO PRIMARY KEY(ID_RACAMATESILO)
//
ALTER TABLE MATERIAL ADD ID_FORNMATE VARCHAR(25)
//
ALTER TABLE RACAO_PRODUCAO_DOSADORA ADD FL_SINCRACAPRODDOSA CHAR(1)
//
ALTER TABLE RACAO_PRODUCAO_DOSADORA ADD ID_PRODRACA NUMERIC(10)
//
CREATE INDEX IDX_RACAPRODDOSA ON RACAO_PRODUCAO_DOSADORA(GN_BATIRACAPRODDOSA)
//
ALTER TABLE RACAO_PRODUCAO_MATERIAL ADD QN_REQUFORMPRODRACAMATE NUMERIC(16,6)
//
ALTER TABLE RACAO_PRODUCAO_MATEMATE ADD QN_REQUFORMPRODRACAMATEMATE NUMERIC(16,6)
//
ALTER TABLE RACAO_PRODUCAO_CONFIGURACAO ADD QN_DIASRETRDATAPADRCONFPRODRACA NUMERIC(6)
//
ALTER TABLE RACAO_PRODUCAO_DOSADORA ADD QN_PESOPADRBATIRACAPRODDOSA NUMERIC(16,2)
//
ALTER TABLE NOTA_FISCAL_OBSERVACAO_PADRAO ADD IE_OBSEPADRNOTAFISC VARCHAR(25)
//
ALTER TABLE NOTA_FISCAL_OBSERVACAO_PADRAO ADD GN_AUXIOBSEPADRNOTAFISC VARCHAR(2000)
//
ALTER TABLE CLIENTE_CREDITO ADD QN_TITUATRACLIE INT
//
ALTER TABLE CLIENTE_CREDITO ADD VL_TITUATRACLIE NUMERIC(16,3)
//
ALTER TABLE PEDIDO_VENDA_ITEM ADD FL_PERMPRECVENDITEMPEDIVEND CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_VALIPEDIVENDFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_DATAENTRFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_BLOQADIMFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_CREDINSUFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_LIMIFINAFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_FATUMINIFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_PRODATIVTAPRFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_PRECABAIMINIFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_PRECABAIPRVEFILIPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_QTDEEXCECOTAFILIPARASIST CHAR(1)
//
IF OBJECT_ID('COTA', 'U') IS NULL
BEGIN
    CREATE TABLE COTA
    (
        quotaId UNIQUEIDENTIFIER NOT NULL,
        ID_COTA NUMERIC(10, 0) NOT NULL,
        NM_COTA VARCHAR(40) NOT NULL,
        DT_COTA DATETIME NOT NULL,
        isFixed BIT NOT NULL DEFAULT 0,
        createdAt DATETIME NOT NULL DEFAULT GETDATE(),
        updatedAt DATETIME NOT NULL DEFAULT GETDATE(),
        CONSTRAINT PK_quota PRIMARY KEY (quotaId),
        CONSTRAINT UNIQUE_IDCOTA UNIQUE (ID_COTA)
    )
END
//
IF OBJECT_ID('TIME_VENDA', 'U') IS NULL
BEGIN
	CREATE TABLE TIME_VENDA (
		ID_TIMEVEND DECIMAL(10, 0) NOT NULL,
		SELLERTEAMID UNIQUEIDENTIFIER DEFAULT NEWID() NOT NULL,
		ID_USUASUPE DECIMAL(10, 0),
		NM_TIMEVEND VARCHAR(25) NOT NULL,
		FL_TIMEVEND CHAR(1) NOT NULL,
		FL_ATIVTIME CHAR(1) DEFAULT 'S' NOT NULL,
		CREATEDAT DATETIME DEFAULT GETDATE() NOT NULL,
		UPDATEDAT DATETIME DEFAULT GETDATE() NOT NULL,
		ISFIXED BIT DEFAULT 0 NOT NULL,
		CONSTRAINT PK_TIME_VENDA PRIMARY KEY (ID_TIMEVEND)
	)
END
//
IF OBJECT_ID('COTA_TIME', 'U') IS NULL
BEGIN
    CREATE TABLE COTA_TIME
    (
		quotaTeamId UNIQUEIDENTIFIER NOT NULL,
        ID_COTATIME NUMERIC(10, 0) NOT NULL,
		ID_COTA NUMERIC(10, 0) NOT NULL,
		ID_TIMEVEND DECIMAL(10, 0) NOT NULL,
		FL_COTASTAT VARCHAR(20) NOT NULL,
		isFixed BIT NOT NULL DEFAULT 0,
		createdAt DATETIME NOT NULL DEFAULT GETDATE(),
		updatedAt DATETIME NOT NULL DEFAULT GETDATE(),
		CONSTRAINT PK_quotaTeam PRIMARY KEY (quotaTeamId),
		CONSTRAINT FK_PK_quotaTeamId UNIQUE (ID_COTATIME),
		FOREIGN KEY (ID_COTA) REFERENCES COTA (ID_COTA),
		FOREIGN KEY (ID_TIMEVEND) REFERENCES TIME_VENDA (ID_TIMEVEND)
    )
END
//
IF OBJECT_ID('COTA_PRODUTO', 'U') IS NULL
BEGIN
	CREATE TABLE COTA_PRODUTO
	(
		quotaProductId UNIQUEIDENTIFIER NOT NULL,
		ID_COTAPROD NUMERIC(10, 0) NOT NULL,
		QN_COTAPROD NUMERIC(10, 0) NOT NULL,
		ID_COTA NUMERIC(10, 0) NOT NULL,
		ID_PRODMATEEMBA VARCHAR(6) NULL,
		isFixed BIT NOT NULL DEFAULT 0,
		createdAt DATETIME NOT NULL DEFAULT GETDATE(),
		updatedAt DATETIME NOT NULL DEFAULT GETDATE(),
		CONSTRAINT PK_quotaProduct PRIMARY KEY (quotaProductId),
		CONSTRAINT UNIQUE_IDCOTAPROD UNIQUE (ID_COTAPROD),
		FOREIGN KEY (ID_COTA) REFERENCES COTA (ID_COTA)
	)
END
//
IF OBJECT_ID('COTA_TIME_ITEM', 'U') IS NULL
BEGIN
	CREATE TABLE COTA_TIME_ITEM
	(
		quotaTeamItemId UNIQUEIDENTIFIER NOT NULL,
		ID_COTATIMEITEM NUMERIC(10, 0) NOT NULL,
		ID_COTATIME NUMERIC(10, 0) NOT NULL,
		ID_COTAPROD NUMERIC(10, 0) NOT NULL,
		QN_COTATIMEITEM NUMERIC(10, 0) NOT NULL,
		isFixed BIT NOT NULL DEFAULT 0,
		createdAt DATETIME NOT NULL DEFAULT GETDATE(),
		updatedAt DATETIME NOT NULL DEFAULT GETDATE(),
		CONSTRAINT PK_quotaTeamItem PRIMARY KEY (quotaTeamItemId),
		FOREIGN KEY (ID_COTAPROD) REFERENCES COTA_PRODUTO (ID_COTAPROD),
		FOREIGN KEY (ID_COTATIME) REFERENCES COTA_TIME (ID_COTATIME)
	)
END
//
IF NOT EXISTS (SELECT 1 FROM sys.columns WHERE object_id = OBJECT_ID('VENDEDOR') AND name = 'ID_TIMEVEND')
BEGIN
    ALTER TABLE VENDEDOR
    ADD ID_TIMEVEND DECIMAL(10, 0) NULL
END
//
ALTER TABLE EXPEDICAO_PALETE ADD ID_CARGEXPE_ALOC NUMERIC(10,0)
//
ALTER TABLE EXPEDICAO_PALETE
ADD CONSTRAINT FK_ALOC_EXPECARG FOREIGN KEY (ID_CARGEXPE_ALOC)
REFERENCES EXPEDICAO_CARGA (ID_CARGEXPE)
//
CREATE TABLE EXPEDICAO_CARGA_MAPA_ALOC
 (EMPRESA                 CHAR(2) NOT NULL,
  FILIAL                  INT NOT NULL,
  ID_ALOCMAPAEXPECARG     NUMERIC(10,0) NOT NULL,
  ID_VEICTRAN             NUMERIC(10,0) NOT NULL,
  ID_CARGEXPE             NUMERIC(10,0) NOT NULL,
  ID_PEDIVEND             NUMERIC(10,0) NOT NULL,
  ID_PRODMATEEMBA         VARCHAR(10) NOT NULL,
  NR_SEQUALOCMAPAEXPECARG NUMERIC(10,0) NOT NULL,
  FL_STATALOCMAPAEXPECARG  CHAR(2) NOT NULL,
  QN_CAIXALOCMAPAEXPECARG NUMERIC(10,0) NULL,
  QN_PSVDALOCMAPAEXPECARG NUMERIC(16,3) NULL,
  QN_CAIXEXPEALOCMAPAEXPECARG NUMERIC(10,0) NULL,
  QN_PSVDEXPEALOCMAPAEXPECARG NUMERIC(16,3) NULL,
  QN_CAIXEMPEALOCMAPAEXPECARG NUMERIC(10,0) NULL,
  QN_PSVDEMPEALOCMAPAEXPECARG NUMERIC(16,3) NULL,
  QN_PESOMINIALOCMAPAEXPECARG NUMERIC(16,3) NULL,
  QN_PESOMAXIALOCMAPAEXPECARG NUMERIC(16,3) NULL,
  GN_POSIALOCMAPAEXPECARG VARCHAR(5) NOT NULL,
  DT_GERAALOCMAPAEXPECARG DATETIME,
  DT_VALIMINIALOCMAPAEXPECARG DATETIME,
  DT_VALIMAXIALOCMAPAEXPECARG DATETIME,
  ID_USUASIST             NUMERIC(10,0))
//
ALTER TABLE EXPEDICAO_CARGA_MAPA_ALOC
  ADD CONSTRAINT PK_ALOCMAPAEXPECARG PRIMARY KEY (ID_ALOCMAPAEXPECARG)
//
ALTER TABLE EXPEDICAO_CARGA_MAPA_ALOC
  ADD CONSTRAINT FK_VEIC_ALOCMAPAEXPECARG FOREIGN KEY (ID_VEICTRAN)
      REFERENCES TRANSPORTADOR_VEICULO (ID_VEICTRAN)
//
ALTER TABLE EXPEDICAO_CARGA_MAPA_ALOC
  ADD CONSTRAINT FK_USUA_ALOCMAPAEXPECARG FOREIGN KEY (ID_USUASIST)
      REFERENCES SISTEMA_USUARIO (ID_USUASIST)
//
ALTER TABLE SISTEMA_PARAMETRO ADD FL_INFODADOTRANPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO ADD FL_INFODADOAPANPARASIST CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO ADD FL_INFORETIALIMPARASIST CHAR(1)
//
ALTER TABLE ETIQUETA_TAGS ADD DT_ULTIATUATAGSETIQ DATETIME DEFAULT GETDATE() NOT NULL
//
CREATE TABLE CONTINGENCIA_SINCRONISMO_LOG(
NM_MENSCONTSINCLOG VARCHAR(500) NOT NULL,
NM_USUASESSCONTSINCLOG VARCHAR(300) NOT NULL,
NM_MAQUCONTSINCLOG VARCHAR(300) NOT NULL,
FL_TIPOSINCCONTSINCLOG CHAR(1) NOT NULL,
DT_INICCONTSINCLOG DATETIME NOT NULL,
DT_FINACONTSINCLOG DATETIME NOT NULL,
GN_TEMPTOTACONTSINCLOG VARCHAR(12) NOT NULL
);
//
CREATE INDEX IDX_USUASESS_CONTSINCLOG ON CONTINGENCIA_SINCRONISMO_LOG(NM_USUASESSCONTSINCLOG)
//
CREATE INDEX IDX_MAQU_CONTSINCLOG ON CONTINGENCIA_SINCRONISMO_LOG(NM_MAQUCONTSINCLOG)
//
ALTER TABLE SISTEMA_PARAMETRO ADD FL_REPLTRANPESAAVULPARASIST CHAR(1) DEFAULT 'N' NOT NULL
//
ALTER TABLE GRANJA_PROPRIEDADE ALTER COLUMN NM_PROPGRAN VARCHAR(100) NOT NULL
//
ALTER TABLE TABELA_PRECO ADD QN_DIASVIGETABEPREC NUMERIC(10,0) DEFAULT 0
//
ALTER TABLE BALANCA_CONFIGURACAO ADD FL_PROCMAIOPESOCONFBALA CHAR(1) DEFAULT 'N' NOT NULL
//
CREATE TABLE ESPERA_AREA (
    EMPRESA         VARCHAR(2)    NOT NULL,
    FILIAL          INT           NOT NULL,
    ID_AREAESPE     NUMERIC(10,0) NOT NULL,
    IE_AREAESPE     VARCHAR(25)   NULL,
    NM_AREAESPE     VARCHAR(60)   NOT NULL,
    QN_ANIMCABEUNID NUMERIC(10,0) NOT NULL,
    FL_STATAREAESPE VARCHAR(2)    NOT NULL,
    FL_ATIVAREAESPE CHAR(1)       NOT NULL
)
//
ALTER TABLE ESPERA_AREA ADD CONSTRAINT PK_AREAESPE PRIMARY KEY(ID_AREAESPE)
//
CREATE TABLE ENTRADA_AVE_VIVA_ESPERA (
    ID_ENTRAVEVIVAESPE     NUMERIC(10,0) NOT NULL,
    ID_ENTRAVEVIVA         NUMERIC(10,0) NOT NULL,
    ID_AREAESPE            NUMERIC(10,0) NOT NULL,
    NM_AREAESPE            VARCHAR(60) NULL,
    DT_ENTRAVEVIVAESPE     DATETIME NULL,
    DT_REGIAVEVIVAESPE     DATETIME NULL,
    DT_INICABATAVEVIVAESPE DATETIME NULL,
    DT_TERMABATAVEVIVAESPE DATETIME NULL,
    ID_USUASIST_INICABAT   NUMERIC(10,0) NULL,
    ID_USUASIST_TERMABAT   NUMERIC(10,0) NULL
)
//
ALTER TABLE ENTRADA_AVE_VIVA_ESPERA ADD CONSTRAINT PK_ENTRAVEVIVAESPE PRIMARY KEY(ID_ENTRAVEVIVAESPE)
//
ALTER TABLE ENTRADA_AVE_VIVA_ESPERA ADD CONSTRAINT FK_AREAESPE_ENTRAVEVIVA FOREIGN KEY (ID_AREAESPE)
 REFERENCES ESPERA_AREA (ID_AREAESPE)
//
ALTER TABLE LOGISTICA_REGIAO ADD IE_REGILOGI VARCHAR(25)
//
ALTER TABLE PEDIDO_VENDA_TIPO ADD FL_ATIVTIPOPEDIVEND CHAR(1) DEFAULT 'S' NOT NULL
//
ALTER TABLE ENTRADA_AVE_VIVA_GALPAO ADD DT_RETIAGUAENTRAVEVIVAGALP DATETIME
//
IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TIME_VENDA' AND COLUMN_NAME = 'FL_CONTTIME')
BEGIN
    ALTER TABLE TIME_VENDA
    ADD FL_CONTTIME CHAR(1) NOT NULL DEFAULT 'S'
END
//
ALTER TABLE MATERIAL_EMBALAGEM_VALIDADE ADD IE_VALIMATEEMBA VARCHAR(25)
//
ALTER TABLE PRODUCAO_GRUPO ADD IE_GRUPPROD VARCHAR(25)
//
ALTER TABLE MARCA ADD IE_MARCA VARCHAR(25)
//
ALTER TABLE GRADE_CLASSIFICADORA ADD IE_CLASGRAD VARCHAR(25)
//
ALTER TABLE FORMULARIO_QUALIDADE_META ADD DT_ULTIATUAFORMQUALMETA DATETIME DEFAULT GETDATE() NOT NULL
//
CREATE INDEX IDX_DT_ULTIATUA_FORMQUALMETA ON FORMULARIO_QUALIDADE_META(DT_ULTIATUAFORMQUALMETA)
//
ALTER TABLE SISTEMA_PARAMETRO ADD FL_SUBSEA13ETIQCOMPPARASIST CHAR(1) DEFAULT 'N' NOT NULL
//
ALTER TABLE LOGISTICA_SUBREGIAO ADD IE_SUBRLOGI VARCHAR(25) NULL
//
ALTER TABLE FORMULARIO_QUALIDADE_META_ITEM ALTER COLUMN NM_FORMQUALMETAITEM VARCHAR(100)
//
CREATE TABLE [dbo].EXPEDICAO_CARGA_ENTRADA_USUA
  (EMPRESA CHAR(2) NOT NULL,
   FILIAL INT NOT NULL,
   ID_USUAENTRCARGEXPE NUMERIC(10) NOT NULL,
   ID_ENTRCARGEXPE NUMERIC(10) NOT NULL,
   ID_USUASIST NUMERIC(10) NOT NULL,
   FL_USUAENTRCARGEXPE CHAR(2) NOT NULL,
   FX_USUAENTRCARGEXPE CHAR(1),
   CONSTRAINT PK_USUAENTRCARGEXPE PRIMARY KEY (ID_USUAENTRCARGEXPE),
   CONSTRAINT FK_ENTRCARGEXPE FOREIGN KEY (ID_ENTRCARGEXPE) REFERENCES EXPEDICAO_CARGA_ENTRADA (ID_ENTRCARGEXPE),
   CONSTRAINT FK_USUA_ENTRCARGEXPE FOREIGN KEY (ID_USUASIST) REFERENCES SISTEMA_USUARIO (ID_USUASIST))
//
ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD ID_USUASIST_CRIACAO NUMERIC(10,0) NULL
//
ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD DT_CRIAENTRCARGEXPE DATETIME NULL
//
ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD ID_FORNECEDOR NUMERIC(10,0) NULL
//
ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD FL_TIPOENTRCARGEXPE CHAR(2) NULL
//
ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD ID_TRANMOTOTRAN NUMERIC(10,0) NULL
//
ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD ID_FORNECEDOR_TRANSPORTADOR NUMERIC(10,0) NULL
//
ALTER TABLE EXPEDICAO_CARGA_ENTRADA ADD FL_CONTENTRCARGEXPE CHAR(1) NULL
//
UPDATE EXPEDICAO_CARGA_ENTRADA SET FL_CONTENTRCARGEXPE = 'N'
//
ALTER TABLE PEDIDO_ENTRADA ADD ID_TIPODOCU NUMERIC(10,0) NULL
//
ALTER TABLE PEDIDO_ENTRADA_ITEM ADD ID_FORNECEDOR NUMERIC(10,0) NULL
//
ALTER TABLE PEDIDO_ENTRADA_ITEM ADD ID_CENTCUST NUMERIC(10,0) NULL
//
ALTER TABLE PEDIDO_ENTRADA_ITEM ADD DT_PRODITEMPEDIENTR DATETIME NULL
//
ALTER TABLE PEDIDO_ENTRADA_ITEM ADD DT_VALIITEMPEDIENTR DATETIME NULL
//
ALTER TABLE PEDIDO_ENTRADA_ITEM ADD NR_LOTEINTEITEMPEDIENTR VARCHAR(50) NULL
//
ALTER TABLE PEDIDO_ENTRADA_ITEM ADD NR_LOTEFORNITEMPEDIENTR VARCHAR(50) NULL
//
ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD ID_ENTRCARGEXPE NUMERIC(10,0)
//
ALTER TABLE EXPEDICAO_PALETE ADD ID_ENTRCARGEXPE NUMERIC(10,0)
//
ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD QN_TARACONTEMBAINDI NUMERIC(9,3)
//
ALTER TABLE EMBALAGEM_CONTROLE_INDIVIDUAL ADD QN_PESOLIQUCONTEMBAINDI NUMERIC(9,3)
//
ALTER TABLE SISTEMA_PARAMETRO ADD QN_PESOTOLEPEDIENTRPARASIST NUMERIC(9,3)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_VALITIPOANENFILIPARASIST CHAR(1) DEFAULT 'S' NOT NULL
//
ALTER TABLE GRANJA_PROPRIEDADE
  ADD CONSTRAINT FK_ID_ENDEPESS_PROPGRAN
FOREIGN KEY (ID_ENDEPESS)
 REFERENCES PESSOA_ENDERECO (ID_ENDEPESS);
//
ALTER TABLE TRANSPORTE_TIPO ADD IE_TIPOTRAN VARCHAR(25)
//
ALTER TABLE AVE_TIPO ADD PC_AJUSPESOLIQURECETIPOAVE NUMERIC(16,6)
//
CREATE TABLE PESAGEM_ANIMAIS (
  ID_ANIMPESA NUMERIC(10) NOT NULL,
  ID_ENTRAVEVIVA NUMERIC(10) NOT NULL,
  FL_STATANIMPESA CHAR(2) NOT NULL,
  ID_USUAINICANIMPESA NUMERIC(10) ,
  ID_USUAFECHANIMPESA NUMERIC(10),
  DT_INICPESAANIMPESA DATETIME,
  DT_FECHPESAANIMPESA DATETIME,
  CONSTRAINT PK_ANIMPESA PRIMARY KEY (ID_ANIMPESA),
  CONSTRAINT FK_ANIMPESA_INICPESA FOREIGN KEY (ID_USUAINICANIMPESA) REFERENCES SISTEMA_USUARIO (ID_USUASIST),
  CONSTRAINT FK_ANIMPESA_FECHPESA FOREIGN KEY (ID_USUAFECHANIMPESA) REFERENCES SISTEMA_USUARIO (ID_USUASIST),
  CONSTRAINT FK_ANIMPESA_ENTRAVEVIVA FOREIGN KEY (ID_ENTRAVEVIVA) REFERENCES ENTRADA_AVE_VIVA (ID_ENTRAVEVIVA)
)
//
CREATE TABLE PESAGEM_ANIMAIS_ITEM (
  ID_ITEMANIMPESA NUMERIC(10) NOT NULL,
  ID_ANIMPESA NUMERIC(10) NOT NULL,
  NR_ITEMANIMPESA NUMERIC(10),
  DT_ITEMANIMPESA DATETIME NOT NULL,
  QN_ITEMANIMPESA NUMERIC(10,3) NOT NULL,
  FL_PESAMANUITEMANIMPESA CHAR(1) NOT NULL,
  ID_USUAITEMANIMPESA NUMERIC(10) NOT NULL,
  CONSTRAINT PK_ITEMANIMPESA PRIMARY KEY (ID_ITEMANIMPESA),
  CONSTRAINT FK_ITEMANIMPESA_USUASIST FOREIGN KEY (ID_USUAITEMANIMPESA) REFERENCES SISTEMA_USUARIO (ID_USUASIST),
  CONSTRAINT FK_ITEMANIMPESA_ANIMPESA FOREIGN KEY (ID_ANIMPESA) REFERENCES PESAGEM_ANIMAIS (ID_ANIMPESA)
)
//
INSERT INTO FORM_QUAL_META_ENTIDADE
 VALUES ((SELECT MAX(ID_FORMQUALMETAENTI) FROM [DBO].FORM_QUAL_META_ENTIDADE) + 1,	'Pesagem de Animais',	'PS',	NULL,	NULL,	'N')
//
 CREATE TABLE ENTRADA_AVE_VIVA_TANQUE
  ( ID_ENTRAVEVIVATANQ NUMERIC(10,0) NOT NULL,
    ID_ENTRAVEVIVA NUMERIC(10,0) NOT NULL,
	NR_TANQENTRAVEVIVATANQ VARCHAR(15),
    QN_CABEENTRAVEVIVATANQ NUMERIC(10,0),
	DT_RETIALIMENTRAVEVIVATANQ DATETIME,
    CONSTRAINT PK_ENTRAVEVIVATANQ PRIMARY KEY (ID_ENTRAVEVIVATANQ),
    CONSTRAINT FK_ENTRAVEVIVATANQ_ENTR FOREIGN KEY (ID_ENTRAVEVIVA) REFERENCES ENTRADA_AVE_VIVA (ID_ENTRAVEVIVA)
  )
//
CREATE TABLE ETIQUETA_ENVIO_CONFIGURACAO (
    EMPRESA                     CHAR(2)       NOT NULL,
    FILIAL                      INT           NOT NULL,
    ID_CONFENVIETIQ             NUMERIC(10,0) NOT NULL,
    NM_CONFENVIETIQ             VARCHAR(100)  NOT NULL,
    GN_URLCONFENVIETIQ          VARCHAR(200)  NOT NULL,
    NR_CANAPRODCONFENVIETIQ     NUMERIC(10,0) NOT NULL,
    NR_TENTSINCCONFENVIETIQ     NUMERIC(10,0) NOT NULL,
    NR_INTESINCCONFENVIETIQ     NUMERIC(10,0) NOT NULL,
    NR_TERMTIMEOUTCONFENVIETIQ  NUMERIC(10,0) NOT NULL,
    FL_STATULTISINCCONFENVIETIQ CHAR(1)       NULL,
    DT_ULTISINCCONFENVIETIQ     DATETIME      NULL,
    GN_ULTIMENSCONFENVIETIQ     VARCHAR(4000) NULL,
    FL_ATIVCONFENVIETIQ         CHAR(1)       NOT NULL,
    FX_CONFENVIETIQ             CHAR(1)       NOT NULL
)
//
ALTER TABLE ETIQUETA_ENVIO_CONFIGURACAO ADD CONSTRAINT PK_CONFENVIETIQ PRIMARY KEY(ID_CONFENVIETIQ)
//
ALTER TABLE ETIQUETA_ENVIO_CONFIGURACAO ADD CONSTRAINT DF_FX_CONFENVIETIQ DEFAULT 'N' FOR FX_CONFENVIETIQ
//
CREATE INDEX IDX_CONFENVIETIQ_EMPRFILI ON ETIQUETA_ENVIO_CONFIGURACAO(EMPRESA,FILIAL)
//
CREATE INDEX IDX_CONFENVIETIQ_DESCRIC ON ETIQUETA_ENVIO_CONFIGURACAO(NM_CONFENVIETIQ)
//
CREATE TABLE ETIQUETA_ENVIO_HISTORICO (
    EMPRESA                 CHAR(2)       NOT NULL,
    FILIAL                  INT           NOT NULL,
    ID_HISTENVIETIQ         NUMERIC(10,0) NOT NULL,
    ID_CONFENVIETIQ         NUMERIC(10,0) NOT NULL,
    DT_INICSINCHISTENVIETIQ DATETIME      NOT NULL,
    DT_FINASINCHISTENVIETIQ DATETIME      NULL,
    FL_STATSINCHISTENVIETIQ CHAR(1)       NOT NULL,
    NR_TENTSINCHISTENVIETIQ NUMERIC(10,0) NOT NULL,
    GN_ULTIMENSHISTENVIETIQ VARCHAR(MAX)  NULL,
    GN_CHAMWEBSERV          VARCHAR(MAX)  NULL,
    GN_RETOWEBSERV          VARCHAR(MAX)  NULL,
    FX_HISTENVIETIQ         CHAR(1)       NOT NULL
)
//
ALTER TABLE ETIQUETA_ENVIO_HISTORICO ADD CONSTRAINT PK_HISTENVIETIQ PRIMARY KEY (ID_HISTENVIETIQ)
//
ALTER TABLE ETIQUETA_ENVIO_HISTORICO ADD CONSTRAINT FK_CONFENVIETIQ_HISTENVIETIQ FOREIGN KEY (ID_CONFENVIETIQ)
 REFERENCES ETIQUETA_ENVIO_CONFIGURACAO (ID_CONFENVIETIQ)
//
ALTER TABLE ETIQUETA_ENVIO_HISTORICO ADD CONSTRAINT DF_FX_HISTENVIETIQ DEFAULT 'N' FOR FX_HISTENVIETIQ
//
ALTER TABLE ETIQUETA_ENVIO_HISTORICO ADD CONSTRAINT DF_FL_STATSINCHISTENVIETIQ DEFAULT 'P' FOR FL_STATSINCHISTENVIETIQ
//
CREATE INDEX IDX_HISTENVIETIQ_EMPRFILI ON ETIQUETA_ENVIO_HISTORICO(EMPRESA,FILIAL)
//
CREATE INDEX IDX_HISTENVIETIQ_DATA ON ETIQUETA_ENVIO_HISTORICO(DT_INICSINCHISTENVIETIQ,DT_FINASINCHISTENVIETIQ)
//
CREATE TABLE LABEL_SYNC_SERVICE_SINC(
    EMPRESA                 CHAR(2)       NOT NULL,
    FILIAL                  INT           NOT NULL,
    ID_SINCSERVSYNCLABE     NUMERIC(10,0) NOT NULL,
    DT_INICSINCSERVSYNCLABE DATETIME      NULL,
    FL_STATSINCSERVSYNCLABE CHAR(1)       NOT NULL,
    NR_TENTSINCSERVSYNCLABE NUMERIC(10,0) NOT NULL
)
//
ALTER TABLE LABEL_SYNC_SERVICE_SINC ADD CONSTRAINT PK_SINCSERVSYNCLABE PRIMARY KEY (ID_SINCSERVSYNCLABE)
//
ALTER TABLE LABEL_SYNC_SERVICE_SINC ADD CONSTRAINT DF_FL_STATSINCSERVSYNCLABE DEFAULT 'P' FOR FL_STATSINCSERVSYNCLABE
//
ALTER TABLE LABEL_SYNC_SERVICE_SINC ADD CONSTRAINT DF_NR_TENTSINCSERVSYNCLABE DEFAULT 0 FOR NR_TENTSINCSERVSYNCLABE
//
CREATE TABLE LABEL_SYNC_SERVICE_HIST (
    EMPRESA             CHAR(2)       NOT NULL,
    FILIAL              INT           NOT NULL,
    ID_HISTSERVSYNCLABE NUMERIC(10,0) NOT NULL,
    NM_PROCESSO         VARCHAR(100)  NOT NULL,
    FL_TIPOHISTMESSAGE  CHAR(1)       NOT NULL,
    GN_HISTMESSAGE      VARCHAR(4000) NOT NULL,
    GN_HISTERRORMESSAGE VARCHAR(4000) NULL,
    DT_HISTMESSAGE      DATETIME      NOT NULL,
    NR_EXEVERSION       VARCHAR(20)   NOT NULL
)
//
ALTER TABLE LABEL_SYNC_SERVICE_HIST ADD CONSTRAINT PK_HISTSERVSYNCLABE PRIMARY KEY(ID_HISTSERVSYNCLABE)
//
CREATE INDEX IDX_HISTSERVSYNCLABE_EMPRFILI ON LABEL_SYNC_SERVICE_HIST(EMPRESA,FILIAL)
//
CREATE INDEX IDX_HISTSERVSYNCLABE_PROCESSO ON LABEL_SYNC_SERVICE_HIST(NM_PROCESSO)
//
CREATE TABLE LABEL_SYNC_SERVICE_LOG (
    GN_LOGMESSAGE VARCHAR(4000) NOT NULL,
    DT_LOGMESSAGE DATETIME      NOT NULL,
    NR_EXEVERSION VARCHAR(20)   NOT NULL
)
//
CREATE TABLE COTA_LOG
   (EMPRESA CHAR(2) NOT NULL,
	FILIAL INT NOT NULL,
	ID_COTALOG NUMERIC(10) NOT NULL,
        DT_COTALOG DATETIME NOT NULL,
	ID_PEDIVEND NUMERIC(10) NOT NULL,
	DT_PEDIVEND DATETIME NOT NULL,
	ID_COTA NUMERIC(10) NOT NULL,
	ID_COTATIMEITEM NUMERIC(10) NOT NULL,
	ID_VENDEDOR NUMERIC(10) NOT NULL,
	ID_TIMEVEND NUMERIC(10) NOT NULL,
	QN_COTATIMEITEM NUMERIC(10) NOT NULL,
	ID_PRODMATEEMBA VARCHAR(10) NOT NULL,
	QN_EMBAITEMPEDIVEND NUMERIC(13, 3) NOT NULL,
	QN_VENDITEMPEDIVEND NUMERIC(10) NOT NULL,
	QN_DISPCOTATIMEITEM NUMERIC(10) NOT NULL)
//
ALTER TABLE COTA_LOG ADD CONSTRAINT PK_COTALOG PRIMARY KEY(ID_COTALOG)
//
ALTER TABLE SISTEMA_PARAMETRO_FILIAL ADD FL_VALITABEPRECFILIPARASIST CHAR(1)
//
ALTER TABLE PRODUCAO_REGISTRO_ORIG_AVEVIVA ALTER COLUMN NM_PROPGRAN VARCHAR(100)
//
ALTER TABLE PRODUCAO_REGISTRO_ORIG_AVEVIVA ALTER COLUMN NM_MATERIAL VARCHAR(60)
//
ALTER TABLE PEDIDO_VENDA_TIPO
ADD FL_CONSCOTATIPOPEDIVEND CHAR(1)
//
ALTER TABLE SISTEMA_PARAMETRO ADD FL_SUGEMOTOMONTCARGPARASIST CHAR(1) DEFAULT 'S' NOT NULL
//
ALTER TABLE SISTEMA_PARAMETRO ADD FL_EXIBCODIEXTEMOTOPARASIST CHAR(1) DEFAULT 'N' NOT NULL
//
IF EXISTS (SELECT NAME
             FROM SYSOBJECTS
            WHERE NAME = 'VW_PRODUCAO_REGISTRO_TURNO'
              AND TYPE = 'V'
          )
  DROP VIEW VW_PRODUCAO_REGISTRO_TURNO
//

CREATE VIEW VW_PRODUCAO_REGISTRO_TURNO
AS
SELECT ID_REGIPROD,
       GN_SEQUTURNREGIPROD,
       FL_TURNMANUREGIPROD,
       NR_SEQUTURNREGIPROD,
       IE_PERITURNREGIPROD,
       FL_PERIMANUTURNREGIPROD,
       NR_SEQUTURNREGIPROD AS NR_TURNREGIPROD
  FROM PRODUCAO_REGISTRO_TURNO
//
IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREGI' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREGI
//
CREATE VIEW VW_PRO128_PRODREGI AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       VI_PRODUCAO.NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       VI_PRODUCAO.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
       VI_PRODUCAO.ID_PROCLINH,
	   VI_PRODUCAO.FL_SOBRREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_QTDECAIXREGIPROD AS FLOAT)) QN_QTDECAIXREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOPADRREGIPROD AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOVENDREGIPROD AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_PESOLIQUREGIPROD AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VI_PRODUCAO.QN_DESVPESOREGIPROD AS FLOAT)) / CAST(SUM(CAST(VI_PRODUCAO.QN_PESOLIQUREGIPROD AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD
  FROM DATA_PADRAO_REGISTRO 
            JOIN (SELECT VW_PRODUCAO.EMPRESA,
                         VW_PRODUCAO.FILIAL,
                         VW_PRODUCAO.DT_PADRREGIPROD,
                         VW_PRODUCAO.ID_PRODMATEEMBA,
                         LINHA_PROCESSAMENTO.ID_PROCLINH,
						 VW_PRODUCAO.FL_SOBRREGIPROD,
                         SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('?', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) NR_SEQUTURN,
                         SUM(CASE WHEN COALESCE(VW_PRODUCAO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				                  WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                                  ELSE CASE WHEN VW_PRODUCAO.QN_CAIXREGIPROD = 0 THEN 1
                                            ELSE VW_PRODUCAO.QN_CAIXREGIPROD 
                                        END 
                              END) QN_QTDECAIXREGIPROD,
                         SUM(CAST(COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
                         SUM(CAST(CASE WHEN COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) = 0
                                       THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                 ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
                                             END
                                       ELSE VW_PRODUCAO.QN_PESOPADRREGIPROD 
                                   END AS FLOAT)) QN_PESOVENDREGIPROD,
                         SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
                                            END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
                         SUM(CAST(CASE WHEN COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) = 0 THEN 0
                                       ELSE COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(VW_PRODUCAO.QN_PESOORIGREGIPROD, 0) 
                                                          ELSE COALESCE(VW_PRODUCAO.QN_PESOLIQUREGIPROD, 0) 
                                                      END, 0) - COALESCE(VW_PRODUCAO.QN_PESOPADRREGIPROD, 0) 
                                   END AS FLOAT)) QN_DESVPESOREGIPROD
                    FROM VW_PRODUCAO 
                              JOIN VW_PRODUCAO_REGISTRO_TURNO  
                                ON VW_PRODUCAO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
                              JOIN MATERIAL_EMBALAGEM  
                                ON MATERIAL_EMBALAGEM.ID_PRODMATEEMBA = VW_PRODUCAO.ID_PRODMATEEMBA
                              JOIN PRODUCAO_PACKER  
                                ON PRODUCAO_PACKER.ID_PACKPROD = VW_PRODUCAO.ID_PACKPROD
                              JOIN LINHA_PROCESSAMENTO  
                                ON PRODUCAO_PACKER.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                                   SISTEMA_PARAMETRO_FILIAL SPF  
                              JOIN EMPRESA_FILIAL_LOCAL EFL  
                                ON EFL.EMPRESA = SPF.EMPRESA 
                               AND EFL.FILIAL = SPF.FILIAL
							   
                   WHERE (VW_PRODUCAO.ID_PRODMATEEMBA  <> '9999')
                     AND (COALESCE(VW_PRODUCAO.FL_ORIGREGIPROD, 'PC')  IN ('PC', 'RS'))
                     AND (VW_PRODUCAO.FL_STATREGIPROD NOT IN ('ER'))
                     AND (COALESCE(VW_PRODUCAO.FL_PRODPROPREGIPROD, 'S')  = 'S')
                     AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
		                  (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
				           COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
					 
                   GROUP BY VW_PRODUCAO.EMPRESA,
                            VW_PRODUCAO.FILIAL,
                            VW_PRODUCAO.DT_PADRREGIPROD,
                            VW_PRODUCAO.ID_PRODMATEEMBA,
                            LINHA_PROCESSAMENTO.ID_PROCLINH,
                            VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD,
							VW_PRODUCAO.FL_SOBRREGIPROD) VI_PRODUCAO
              ON DATA_PADRAO_REGISTRO.EMPRESA = VI_PRODUCAO.EMPRESA 
             AND DATA_PADRAO_REGISTRO.FILIAL = VI_PRODUCAO.FILIAL 
             AND DATA_PADRAO_REGISTRO.DT_REGIDATAPADR  = VI_PRODUCAO.DT_PADRREGIPROD
            JOIN MATERIAL_EMBALAGEM  
              ON VI_PRODUCAO.ID_PRODMATEEMBA  = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL  
              ON MATERIAL_EMBALAGEM.ID_MATERIAL  = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_TIPO  
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA  
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA  
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA  
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          VI_PRODUCAO.NR_SEQUTURN,          
          VI_PRODUCAO.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
          VI_PRODUCAO.ID_PROCLINH,
		  VI_PRODUCAO.FL_SOBRREGIPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREGI_CONSOLIDADO' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREGI_CONSOLIDADO
//
CREATE VIEW VW_PRO128_PRODREGI_CONSOLIDADO AS
SELECT VW_PRO128_PRODREGI.EMPRESA,
       VW_PRO128_PRODREGI.FILIAL,
       VW_PRO128_PRODREGI.ID_REGIDATAPADR,
       VW_PRO128_PRODREGI.ID_TIPOAVE,
       VW_PRO128_PRODREGI.ID_TIPOMATE,
       VW_PRO128_PRODREGI.NM_TIPOMATE,
       VW_PRO128_PRODREGI.ID_CATEMATE,
       VW_PRO128_PRODREGI.NM_CATEMATE,
       VW_PRO128_PRODREGI.ID_SUBCMATE,
       VW_PRO128_PRODREGI.NM_SUBCMATE,
       VW_PRO128_PRODREGI.ID_FAMIPROD,
       VW_PRO128_PRODREGI.NM_FAMIPROD,
       VW_PRO128_PRODREGI.ID_PRODMATEEMBA,
       VW_PRO128_PRODREGI.NM_PRODMATEEMBA,
	   VW_PRO128_PRODREGI.IE_MATEEMBA,
       VW_PRO128_PRODREGI.FL_SEPAPRODMATEEMBAFILI,				
       VW_PRO128_PRODREGI.ID_PROCLINH,
	   VW_PRO128_PRODREGI.FL_SOBRREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_QTDECAIXREGIPROD) QN_QTDECAIXREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_PESOVENDREGIPROD) QN_PESOVENDREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_PESOLIQUREGIPROD) QN_PESOLIQUREGIPROD,
       SUM(VW_PRO128_PRODREGI.QN_DESVPESOREGIPROD) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(VW_PRO128_PRODREGI.QN_DESVPESOREGIPROD AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(VW_PRO128_PRODREGI.QN_DESVPESOREGIPROD AS FLOAT)) / CAST(SUM(CAST(VW_PRO128_PRODREGI.QN_PESOLIQUREGIPROD AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD
  FROM VW_PRO128_PRODREGI 
 GROUP BY VW_PRO128_PRODREGI.EMPRESA,
          VW_PRO128_PRODREGI.FILIAL,
          VW_PRO128_PRODREGI.ID_REGIDATAPADR,
          VW_PRO128_PRODREGI.ID_TIPOAVE,
          VW_PRO128_PRODREGI.ID_TIPOMATE,
          VW_PRO128_PRODREGI.NM_TIPOMATE,
          VW_PRO128_PRODREGI.ID_CATEMATE,
          VW_PRO128_PRODREGI.NM_CATEMATE,
          VW_PRO128_PRODREGI.ID_SUBCMATE,
          VW_PRO128_PRODREGI.NM_SUBCMATE,
          VW_PRO128_PRODREGI.ID_FAMIPROD,
          VW_PRO128_PRODREGI.NM_FAMIPROD,
          VW_PRO128_PRODREGI.ID_PRODMATEEMBA,
          VW_PRO128_PRODREGI.NM_PRODMATEEMBA,
	      VW_PRO128_PRODREGI.IE_MATEEMBA,
          VW_PRO128_PRODREGI.FL_SEPAPRODMATEEMBAFILI,				
          VW_PRO128_PRODREGI.ID_PROCLINH,
		  VW_PRO128_PRODREGI.FL_SOBRREGIPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_DESTREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO128_DESTREPR
//
CREATE VIEW VW_PRO128_DESTREPR AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD AS NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
       LINHA_PROCESSAMENTO.ID_PROCLINH,
	   PRODUCAO_REGISTRO.FL_SOBRREGIPROD,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE WHEN PRODUCAO_REGISTRO.QN_CAIXREGIPROD = 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
                      END 
            END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 
	                 THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                 END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) AS FLOAT)) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DEST_ITEM 
            JOIN PRODUCAO_REGISTRO  
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
            JOIN VW_PRODUCAO_DESTINACAO_TURNO 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_ITEMDESTREGIPROD = VW_PRODUCAO_DESTINACAO_TURNO.ID_ITEMDESTREGIPROD
            JOIN PRODUCAO_REGISTRO_DESTINACAO  
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
            JOIN MATERIAL  
              ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM  
              ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO  
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA  
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA  
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA  
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
       LEFT JOIN LINHA_PROCESSAMENTO  
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                 SISTEMA_PARAMETRO_FILIAL SPF  
            JOIN EMPRESA_FILIAL_LOCAL EFL  
              ON EFL.EMPRESA = SPF.EMPRESA 
             AND EFL.FILIAL = SPF.FILIAL
			 
 WHERE (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' ))
   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
        (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
		 COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
   
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				          
          LINHA_PROCESSAMENTO.ID_PROCLINH,
		  PRODUCAO_REGISTRO.FL_SOBRREGIPROD
//
IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_DESTREPR_DIA' AND TYPE = 'V')
    DROP VIEW VW_PRO128_DESTREPR_DIA
//
CREATE VIEW VW_PRO128_DESTREPR_DIA AS
SELECT PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
       VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD AS NR_SEQUTURN,
       PRODUCAO_REGISTRO.DT_PADRREGIPROD,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
       MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,				
       LINHA_PROCESSAMENTO.ID_PROCLINH,
	   PRODUCAO_REGISTRO.FL_SOBRREGIPROD,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE WHEN PRODUCAO_REGISTRO.QN_CAIXREGIPROD = 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
                      END 
            END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 
	                 THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                 END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) AS FLOAT)) QN_PESOORIGREGIPROD
  FROM PRODUCAO_REGISTRO_DEST_ITEM 
            JOIN PRODUCAO_REGISTRO 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_REGIPROD = PRODUCAO_REGISTRO.ID_REGIPROD
            JOIN VW_PRODUCAO_DESTINACAO_TURNO 
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_ITEMDESTREGIPROD = VW_PRODUCAO_DESTINACAO_TURNO.ID_ITEMDESTREGIPROD
            JOIN PRODUCAO_REGISTRO_DESTINACAO  
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_DESTREGIPROD = PRODUCAO_REGISTRO_DESTINACAO.ID_DESTREGIPROD
            JOIN MATERIAL  
              ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM  
              ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO  
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA  
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA  
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA  
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
       LEFT JOIN LINHA_PROCESSAMENTO  
              ON PRODUCAO_REGISTRO_DEST_ITEM.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                 SISTEMA_PARAMETRO_FILIAL SPF  
            JOIN EMPRESA_FILIAL_LOCAL EFL  
              ON EFL.EMPRESA = SPF.EMPRESA 
             AND EFL.FILIAL = SPF.FILIAL
			 
 WHERE (PRODUCAO_REGISTRO_DEST_ITEM.FL_TIPOITEMDESTREGIPROD = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ('ER'))
   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
        (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
		 COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
   
 GROUP BY PRODUCAO_REGISTRO_DESTINACAO.ID_REGIDATAPADR,
          VW_PRODUCAO_DESTINACAO_TURNO.NR_SEQUTURNDESTREGIPROD,
          PRODUCAO_REGISTRO.DT_PADRREGIPROD,
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD,
          MATERIAL_EMBALAGEM.FL_ESPEMATEEMBA,
          MATERIAL_EMBALAGEM.FL_SEPAPRODMATEEMBAFILI,
          LINHA_PROCESSAMENTO.ID_PROCLINH,
		  PRODUCAO_REGISTRO.FL_SOBRREGIPROD
//

IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODDESC' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODDESC
//
CREATE VIEW VW_PRO128_PRODDESC AS
SELECT DATA_PADRAO_REGISTRO.EMPRESA,  
       DATA_PADRAO_REGISTRO.FILIAL,
       DATA_PADRAO_REGISTRO.ID_REGIDATAPADR, 
       PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD AS NR_SEQUTURN,
       AVE_PARTE.NM_PARTAVE,          
       PRODUCAO_DESCARTE.ID_PARTAVE,
       SUM(CAST(COALESCE(PRODUCAO_DESCARTE.QN_UNIDDESCPROD, 0) AS FLOAT)) QN_UNIDDESCPROD,
       SUM(CAST(COALESCE(PRODUCAO_DESCARTE.QN_PESODESCPROD, 0) AS FLOAT)) QN_PESODESCPROD,
       PRODUCAO_DESCARTE.ID_TIPOAVE,
       PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
       PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
	   LINHA_PROCESSAMENTO.ID_PROCLINH,
	   LINHA_PROCESSAMENTO.NM_PROCLINH
  FROM PRODUCAO_DESCARTE 
            JOIN DATA_PADRAO_REGISTRO  
              ON PRODUCAO_DESCARTE.EMPRESA = DATA_PADRAO_REGISTRO.EMPRESA 
             AND PRODUCAO_DESCARTE.FILIAL = DATA_PADRAO_REGISTRO.FILIAL 
             AND PRODUCAO_DESCARTE.ID_REGIDATAPADR = DATA_PADRAO_REGISTRO.ID_REGIDATAPADR
 	        JOIN AVE_PARTE AVE_PARTE  
              ON PRODUCAO_DESCARTE.ID_PARTAVE = AVE_PARTE.ID_PARTAVE
            JOIN PRODUCAO_DESCARTE_MOTIVO
              ON PRODUCAO_DESCARTE.ID_MOTIDESCPROD = PRODUCAO_DESCARTE_MOTIVO.ID_MOTIDESCPROD
 	   LEFT JOIN LINHA_PROCESSAMENTO 
	          ON PRODUCAO_DESCARTE.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH
 WHERE PRODUCAO_DESCARTE_MOTIVO.FL_TIPOMOTIDESCPROD = 'DS'
 GROUP BY DATA_PADRAO_REGISTRO.EMPRESA,  
          DATA_PADRAO_REGISTRO.FILIAL,
          DATA_PADRAO_REGISTRO.ID_REGIDATAPADR, 
          PRODUCAO_DESCARTE.NR_SEQUTURNDESCPROD,
          AVE_PARTE.NM_PARTAVE,            
          PRODUCAO_DESCARTE.ID_PARTAVE,            
          PRODUCAO_DESCARTE.ID_TIPOAVE,           
          PRODUCAO_DESCARTE.ID_ESTRUNIDABAT,
          PRODUCAO_DESCARTE_MOTIVO.FL_RESPMOTIDESCPROD,
	      LINHA_PROCESSAMENTO.ID_PROCLINH,
	      LINHA_PROCESSAMENTO.NM_PROCLINH
//
IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREPR' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREPR
//
CREATE VIEW VW_PRO128_PRODREPR AS
SELECT DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
       SUBSTRING(VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD, 1, CHARINDEX('º', VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD) - 1) NR_SEQUTURN,
       MATERIAL_EMBALAGEM.ID_TIPOAVE,
       MATERIAL.ID_TIPOMATE,
       MATERIAL_TIPO.NM_TIPOMATE,
       MATERIAL.ID_CATEMATE,
       MATERIAL_CATEGORIA.NM_CATEMATE,
       MATERIAL.ID_SUBCMATE,
       MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
       MATERIAL_EMBALAGEM.ID_FAMIPROD,
       PRODUTO_FAMILIA.NM_FAMIPROD,
       MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
       MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	   MATERIAL_EMBALAGEM.IE_MATEEMBA,
       LINHA_PROCESSAMENTO.ID_PROCLINH,
       SUM(CASE WHEN COALESCE(PRODUCAO_REGISTRO.FL_TIPOUNIDREGIPROD, 'EM') = 'UN' THEN 0
				WHEN COALESCE(MATERIAL_EMBALAGEM.FL_QTDEINDIMATEEMBA, 'S') = 'S' THEN 1
                ELSE CASE WHEN PRODUCAO_REGISTRO.QN_CAIXREGIPROD = 0 THEN 1
                          ELSE PRODUCAO_REGISTRO.QN_CAIXREGIPROD 
                      END 
            END) QN_QTDECAIXREGIPROD,
       SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) QN_PESOPADRREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                           ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                       END
                     ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                 END AS FLOAT)) QN_PESOVENDREGIPROD,
       SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                          END, 0) AS FLOAT)) QN_PESOLIQUREGIPROD,
       SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN 0
                     ELSE COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                        ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                    END, 0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) 
                 END AS FLOAT)) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                              ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                          END, 0) - COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) / CAST(SUM(CAST(COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD,
       CASE WHEN COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(CASE WHEN COALESCE(PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD, 0) = 0 THEN CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                                                                                            ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                                                                                        END
                                      ELSE PRODUCAO_REGISTRO.QN_PESOPADRREGIPROD 
                                  END AS FLOAT)) / CAST(COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) AS FLOAT)) * 100, 2) 
        END PC_PESOVEND,
       CASE WHEN COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(CASE WHEN FL_USAPESOORIGRELAFILIPARASIST = 'S' THEN COALESCE(PRODUCAO_REGISTRO.QN_PESOORIGREGIPROD, 0) 
                                               ELSE COALESCE(PRODUCAO_REGISTRO.QN_PESOLIQUREGIPROD, 0) 
                                           END, 0) AS FLOAT)) / CAST(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR AS FLOAT)) * 100, 2) 
        END PC_PESOLIQU,
       COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0) QN_PESOLIQUDESTREPR,
       COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0) QN_PESOVENDDESTREPR
  FROM DATA_PADRAO_REGISTRO 
            JOIN PRODUCAO_REGISTRO  
              ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = PRODUCAO_REGISTRO.DT_PADRREGIPROD
            JOIN VW_PRODUCAO_REGISTRO_TURNO  
              ON PRODUCAO_REGISTRO.ID_REGIPROD = VW_PRODUCAO_REGISTRO_TURNO.ID_REGIPROD
            JOIN MATERIAL  
              ON PRODUCAO_REGISTRO.ID_MATERIAL = MATERIAL.ID_MATERIAL
            JOIN MATERIAL_EMBALAGEM  
              ON PRODUCAO_REGISTRO.ID_PRODMATEEMBA = MATERIAL_EMBALAGEM.ID_PRODMATEEMBA
            JOIN MATERIAL_TIPO  
              ON MATERIAL.ID_TIPOMATE = MATERIAL_TIPO.ID_TIPOMATE
            JOIN MATERIAL_CATEGORIA  
              ON MATERIAL.ID_CATEMATE = MATERIAL_CATEGORIA.ID_CATEMATE
            JOIN MATERIAL_SUBCATEGORIA  
              ON MATERIAL.ID_SUBCMATE = MATERIAL_SUBCATEGORIA.ID_SUBCMATE
            JOIN PRODUTO_FAMILIA  
              ON MATERIAL_EMBALAGEM.ID_FAMIPROD = PRODUTO_FAMILIA.ID_FAMIPROD
            JOIN VW_PRODUCAO_REPROCESSO  
              ON DATA_PADRAO_REGISTRO.DT_REGIDATAPADR = VW_PRODUCAO_REPROCESSO.DT_REGIDATAPADR
       LEFT JOIN PRODUCAO_PACKER  
              ON PRODUCAO_REGISTRO.ID_PACKPROD = PRODUCAO_PACKER.ID_PACKPROD
       LEFT JOIN LINHA_PROCESSAMENTO  
              ON PRODUCAO_PACKER.ID_PROCLINH = LINHA_PROCESSAMENTO.ID_PROCLINH,
                 SISTEMA_PARAMETRO_FILIAL SPF  
            JOIN EMPRESA_FILIAL_LOCAL EFL  
              ON EFL.EMPRESA = SPF.EMPRESA
             AND EFL.FILIAL = SPF.FILIAL
			 
 WHERE (COALESCE(PRODUCAO_REGISTRO.FL_ORIGREGIPROD, 'RP') = 'RP')
   AND (PRODUCAO_REGISTRO.FL_STATREGIPROD NOT IN ( 'ER' ))
   AND (MATERIAL_EMBALAGEM.ID_PRODMATEEMBA <> '9999')
   AND (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('CO', 'OU') OR
        (COALESCE(LINHA_PROCESSAMENTO.FL_TIPOPROCLINH, 'CO') IN ('EM') AND
		 COALESCE(LINHA_PROCESSAMENTO.FL_PERMPROCLINHINTEPROCLINH, 'N') = 'S'))
   
 GROUP BY DATA_PADRAO_REGISTRO.ID_REGIDATAPADR,
          VW_PRODUCAO_REGISTRO_TURNO.GN_SEQUTURNREGIPROD,  
          MATERIAL_EMBALAGEM.ID_TIPOAVE,
          MATERIAL.ID_TIPOMATE,
          MATERIAL_TIPO.NM_TIPOMATE,
          MATERIAL.ID_CATEMATE,
          MATERIAL_CATEGORIA.NM_CATEMATE,
          MATERIAL.ID_SUBCMATE,
          MATERIAL_SUBCATEGORIA.NM_SUBCMATE,
          MATERIAL_EMBALAGEM.ID_FAMIPROD,
          PRODUTO_FAMILIA.NM_FAMIPROD,
          MATERIAL_EMBALAGEM.ID_PRODMATEEMBA,
          MATERIAL_EMBALAGEM.NM_PRODMATEEMBA,
	      MATERIAL_EMBALAGEM.IE_MATEEMBA,
          COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOVENDDESTREPR, 0),
          COALESCE(VW_PRODUCAO_REPROCESSO.QN_PESOLIQUDESTREPR, 0),
          QN_PESOLIQUDESTREPR,
          QN_PESOVENDDESTREPR,
          LINHA_PROCESSAMENTO.ID_PROCLINH
//
IF EXISTS ( SELECT NAME FROM SYSOBJECTS  WHERE NAME = 'VW_PRO128_PRODREPR_CONSOLIDADO' AND TYPE = 'V')
    DROP VIEW VW_PRO128_PRODREPR_CONSOLIDADO
//
CREATE VIEW VW_PRO128_PRODREPR_CONSOLIDADO AS
SELECT VW_PRO128_PRODREPR.ID_REGIDATAPADR,
       VW_PRO128_PRODREPR.ID_TIPOAVE,
       VW_PRO128_PRODREPR.ID_TIPOMATE,
       VW_PRO128_PRODREPR.NM_TIPOMATE,
       VW_PRO128_PRODREPR.ID_CATEMATE,
       VW_PRO128_PRODREPR.NM_CATEMATE,
       VW_PRO128_PRODREPR.ID_SUBCMATE,
       VW_PRO128_PRODREPR.NM_SUBCMATE,
       VW_PRO128_PRODREPR.ID_FAMIPROD,
       VW_PRO128_PRODREPR.NM_FAMIPROD,
       VW_PRO128_PRODREPR.ID_PRODMATEEMBA,
       VW_PRO128_PRODREPR.NM_PRODMATEEMBA,
	   VW_PRO128_PRODREPR.IE_MATEEMBA,
       VW_PRO128_PRODREPR.ID_PROCLINH,
       SUM(VW_PRO128_PRODREPR.QN_QTDECAIXREGIPROD) QN_QTDECAIXREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD) QN_PESOPADRREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_PESOVENDREGIPROD) QN_PESOVENDREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD) QN_PESOLIQUREGIPROD,
       SUM(VW_PRO128_PRODREPR.QN_DESVPESOREGIPROD) QN_DESVPESOREGIPROD,
       CASE WHEN SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) = 0 THEN 0
            ELSE ROUND(SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD, 0) - COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) / CAST(SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) AS FLOAT)) AS FLOAT) * 100, 2) 
        END PC_DESVPESOREGIPROD,
       CASE WHEN COALESCE(VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(CASE WHEN COALESCE(VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD, 0) = 0 THEN VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD
                                      ELSE VW_PRO128_PRODREPR.QN_PESOPADRREGIPROD 
                                  END AS FLOAT)) / CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR, 0) AS FLOAT)) * 100, 2) 
        END PC_PESOVEND,
       CASE WHEN COALESCE(VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR, 0) = 0 THEN 0
            ELSE ROUND((SUM(CAST(COALESCE(VW_PRO128_PRODREPR.QN_PESOLIQUREGIPROD, 0) AS FLOAT)) / CAST(VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR AS FLOAT)) * 100, 2) 
        END PC_PESOLIQU,
       VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR,
       VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR
  FROM VW_PRO128_PRODREPR 
 GROUP BY VW_PRO128_PRODREPR.ID_REGIDATAPADR,
          VW_PRO128_PRODREPR.ID_TIPOAVE,
          VW_PRO128_PRODREPR.ID_TIPOMATE,
          VW_PRO128_PRODREPR.NM_TIPOMATE,
          VW_PRO128_PRODREPR.ID_CATEMATE,
          VW_PRO128_PRODREPR.NM_CATEMATE,
          VW_PRO128_PRODREPR.ID_SUBCMATE,
          VW_PRO128_PRODREPR.NM_SUBCMATE,
          VW_PRO128_PRODREPR.ID_FAMIPROD,
          VW_PRO128_PRODREPR.NM_FAMIPROD,
          VW_PRO128_PRODREPR.ID_PRODMATEEMBA,
          VW_PRO128_PRODREPR.NM_PRODMATEEMBA,
	      VW_PRO128_PRODREPR.IE_MATEEMBA,
          VW_PRO128_PRODREPR.QN_PESOLIQUDESTREPR,
          VW_PRO128_PRODREPR.QN_PESOVENDDESTREPR,
          VW_PRO128_PRODREPR.ID_PROCLINH
//
UPDATE SISTEMA_VERSAO SET ID_SCRIPT = '6.1.53.0', ID_VERSAO = '6.1.53.0'